

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Thu Jul 11 12:47:07 2019

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	text5,global,reloc=2,class=CODE,delta=1
    13                           	psect	text6,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    16  0000                     _ANSELA	set	3931
    17  0000                     _ANSELB	set	3932
    18  0000                     _ANSELD	set	3934
    19  0000                     _ANSELE	set	3935
    20  0000                     _INTCON2bits	set	4081
    21  0000                     _OSCCON	set	4051
    22  0000                     _PORTA	set	3968
    23  0000                     _PORTB	set	3969
    24  0000                     _PORTBbits	set	3969
    25  0000                     _PORTDbits	set	3971
    26  0000                     _TRISA	set	3986
    27  0000                     _TRISB	set	3987
    28  0000                     _TRISDbits	set	3989
    29  0000                     _TRISE	set	3990
    30                           
    31 ;;
    32 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    33 ;;
    34 ;; *************** function _main *****************
    35 ;; Defined at:
    36 ;;		line 17 in file "main.c"
    37 ;; Parameters:    Size  Location     Type
    38 ;;		None
    39 ;; Auto vars:     Size  Location     Type
    40 ;;  key             1    5[COMRAM] unsigned char 
    41 ;; Return value:  Size  Location     Type
    42 ;;		None               void
    43 ;; Registers used:
    44 ;;		wreg, status,2, status,0, cstack
    45 ;; Tracked objects:
    46 ;;		On entry : 0/0
    47 ;;		On exit  : 0/0
    48 ;;		Unchanged: 0/0
    49 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
    50 ;;      Params:         0       0       0       0       0       0       0       0       0
    51 ;;      Locals:         1       0       0       0       0       0       0       0       0
    52 ;;      Temps:          0       0       0       0       0       0       0       0       0
    53 ;;      Totals:         1       0       0       0       0       0       0       0       0
    54 ;;Total ram usage:        1 bytes
    55 ;; Hardware stack levels required when called:    2
    56 ;; This function calls:
    57 ;;		_Lcd_Chr_CP
    58 ;;		_Lcd_Cmd
    59 ;;		_Lcd_Init
    60 ;;		_Recuperar
    61 ;;		_int_teclado
    62 ;; This function is called by:
    63 ;;		Startup code after reset
    64 ;; This function uses a non-reentrant model
    65 ;;
    66                           
    67                           	psect	text0
    68  007BAE                     __ptext0:
    69                           	opt stack 0
    70  007BAE                     _main:
    71                           	opt stack 29
    72                           
    73                           ;main.c: 18: TRISA=0;
    74                           
    75                           ;incstack = 0
    76  007BAE  0E00               	movlw	0
    77  007BB0  6E92               	movwf	3986,c	;volatile
    78                           
    79                           ;main.c: 19: ANSELA=0;
    80  007BB2  0E00               	movlw	0
    81  007BB4  010F               	movlb	15	; () banked
    82  007BB6  6F5B               	movwf	91,b	;volatile
    83                           
    84                           ;main.c: 20: PORTA=0;
    85  007BB8  0E00               	movlw	0
    86  007BBA  6E80               	movwf	3968,c	;volatile
    87                           
    88                           ;main.c: 21: TRISE=0;
    89  007BBC  0E00               	movlw	0
    90  007BBE  6E96               	movwf	3990,c	;volatile
    91                           
    92                           ;main.c: 22: ANSELE=0;
    93  007BC0  0E00               	movlw	0
    94  007BC2  010F               	movlb	15	; () banked
    95  007BC4  6F5F               	movwf	95,b	;volatile
    96                           
    97                           ;main.c: 23: OSCCON=0b01010111;
    98  007BC6  0E57               	movlw	87
    99  007BC8  6ED3               	movwf	4051,c	;volatile
   100                           
   101                           ;main.c: 24: ANSELD=0;
   102  007BCA  0E00               	movlw	0
   103  007BCC  010F               	movlb	15	; () banked
   104  007BCE  6F5E               	movwf	94,b	;volatile
   105                           
   106                           ; BSR set to: 15
   107                           ;main.c: 25: int_teclado();
   108  007BD0  ECC6  F03D         	call	_int_teclado	;wreg free
   109                           
   110                           ;main.c: 26: Lcd_Init();
   111  007BD4  ECD6  F03E         	call	_Lcd_Init	;wreg free
   112                           
   113                           ;main.c: 27: Lcd_Cmd(1);
   114  007BD8  0E01               	movlw	1
   115  007BDA  EC43  F03E         	call	_Lcd_Cmd
   116  007BDE                     l948:
   117                           
   118                           ;main.c: 32: key =Recuperar();
   119  007BDE  ECD0  F03D         	call	_Recuperar	;wreg free
   120  007BE2  6E06               	movwf	main@key,c
   121                           
   122                           ;main.c: 33: Lcd_Chr_CP(key);
   123  007BE4  5006               	movf	main@key,w,c
   124  007BE6  EC6A  F03F         	call	_Lcd_Chr_CP
   125  007BEA  D7F9               	goto	l948
   126  007BEC                     __end_of_main:
   127                           	opt stack 0
   128                           
   129                           	psect	cinit
   130  007B96                     __pcinit:
   131                           	opt stack 0
   132  007B96                     start_initialization:
   133                           	opt stack 0
   134  007B96                     __initialization:
   135                           	opt stack 0
   136  007B96                     end_of_initialization:
   137                           	opt stack 0
   138  007B96                     __end_of__initialization:
   139                           	opt stack 0
   140  007B96  0E00               	movlw	low (__Lmediumconst shr (0+16))
   141  007B98  6EF8               	movwf	tblptru,c
   142  007B9A  0100               	movlb	0
   143  007B9C  EFD7  F03D         	goto	_main	;jump to C main() function
   144                           tblptru	equ	0xFF8
   145                           
   146                           	psect	cstackCOMRAM
   147  000001                     __pcstackCOMRAM:
   148                           	opt stack 0
   149  000001                     ??_Lcd_Cmd:
   150  000001                     ??_Lcd_Chr_CP:
   151  000001                     Recuperar@tecl:
   152                           	opt stack 0
   153                           
   154                           ; 1 bytes @ 0x0
   155  000001                     	ds	2
   156  000003                     Lcd_Chr_CP@data:
   157                           	opt stack 0
   158  000003                     Lcd_Cmd@data:
   159                           	opt stack 0
   160                           
   161                           ; 1 bytes @ 0x2
   162  000003                     	ds	1
   163  000004                     ??_Lcd_Init:
   164                           
   165                           ; 0 bytes @ 0x3
   166  000004                     	ds	1
   167  000005                     Lcd_Init@data:
   168                           	opt stack 0
   169                           
   170                           ; 1 bytes @ 0x4
   171  000005                     	ds	1
   172  000006                     main@key:
   173                           	opt stack 0
   174                           
   175                           ; 1 bytes @ 0x5
   176  000006                     	ds	1
   177                           tblptru	equ	0xFF8
   178                           
   179 ;; *************** function _int_teclado *****************
   180 ;; Defined at:
   181 ;;		line 6 in file "teclado.c"
   182 ;; Parameters:    Size  Location     Type
   183 ;;		None
   184 ;; Auto vars:     Size  Location     Type
   185 ;;		None
   186 ;; Return value:  Size  Location     Type
   187 ;;		None               void
   188 ;; Registers used:
   189 ;;		wreg, status,2
   190 ;; Tracked objects:
   191 ;;		On entry : 0/0
   192 ;;		On exit  : 0/0
   193 ;;		Unchanged: 0/0
   194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   195 ;;      Params:         0       0       0       0       0       0       0       0       0
   196 ;;      Locals:         0       0       0       0       0       0       0       0       0
   197 ;;      Temps:          0       0       0       0       0       0       0       0       0
   198 ;;      Totals:         0       0       0       0       0       0       0       0       0
   199 ;;Total ram usage:        0 bytes
   200 ;; Hardware stack levels used:    1
   201 ;; This function calls:
   202 ;;		Nothing
   203 ;; This function is called by:
   204 ;;		_main
   205 ;; This function uses a non-reentrant model
   206 ;;
   207                           
   208                           	psect	text1
   209  007B8C                     __ptext1:
   210                           	opt stack 0
   211  007B8C                     _int_teclado:
   212                           	opt stack 30
   213                           
   214                           ;teclado.c: 8: INTCON2bits.RBPU=0;
   215                           
   216                           ;incstack = 0
   217  007B8C  9EF1               	bcf	intcon2,7,c	;volatile
   218                           
   219                           ;teclado.c: 9: ANSELB=0;
   220  007B8E  0E00               	movlw	0
   221  007B90  010F               	movlb	15	; () banked
   222  007B92  6F5C               	movwf	92,b	;volatile
   223                           
   224                           ; BSR set to: 15
   225  007B94  0012               	return	
   226  007B96                     __end_of_int_teclado:
   227                           	opt stack 0
   228                           tblptru	equ	0xFF8
   229                           intcon2	equ	0xFF1
   230                           
   231 ;; *************** function _Recuperar *****************
   232 ;; Defined at:
   233 ;;		line 49 in file "teclado.c"
   234 ;; Parameters:    Size  Location     Type
   235 ;;		None
   236 ;; Auto vars:     Size  Location     Type
   237 ;;  tecl            1    0[COMRAM] unsigned char 
   238 ;; Return value:  Size  Location     Type
   239 ;;                  1    wreg      unsigned char 
   240 ;; Registers used:
   241 ;;		wreg, status,2, cstack
   242 ;; Tracked objects:
   243 ;;		On entry : 0/0
   244 ;;		On exit  : 0/0
   245 ;;		Unchanged: 0/0
   246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   247 ;;      Params:         0       0       0       0       0       0       0       0       0
   248 ;;      Locals:         1       0       0       0       0       0       0       0       0
   249 ;;      Temps:          0       0       0       0       0       0       0       0       0
   250 ;;      Totals:         1       0       0       0       0       0       0       0       0
   251 ;;Total ram usage:        1 bytes
   252 ;; Hardware stack levels used:    1
   253 ;; Hardware stack levels required when called:    1
   254 ;; This function calls:
   255 ;;		_Teclado
   256 ;; This function is called by:
   257 ;;		_main
   258 ;; This function uses a non-reentrant model
   259 ;;
   260                           
   261                           	psect	text2
   262  007BA0                     __ptext2:
   263                           	opt stack 0
   264  007BA0                     _Recuperar:
   265                           	opt stack 29
   266                           
   267                           ;teclado.c: 51: char tecl = ' ' ;
   268                           
   269                           ; BSR set to: 15
   270                           ;incstack = 0
   271  007BA0  0E20               	movlw	32
   272  007BA2  6E01               	movwf	Recuperar@tecl,c
   273                           
   274                           ;teclado.c: 53: tecl =Teclado();
   275  007BA4  ECF6  F03D         	call	_Teclado	;wreg free
   276  007BA8  6E01               	movwf	Recuperar@tecl,c
   277                           
   278                           ;teclado.c: 55: return tecl;
   279  007BAA  5001               	movf	Recuperar@tecl,w,c
   280  007BAC  0012               	return	
   281  007BAE                     __end_of_Recuperar:
   282                           	opt stack 0
   283                           tblptru	equ	0xFF8
   284                           intcon2	equ	0xFF1
   285                           
   286 ;; *************** function _Teclado *****************
   287 ;; Defined at:
   288 ;;		line 12 in file "teclado.c"
   289 ;; Parameters:    Size  Location     Type
   290 ;;		None
   291 ;; Auto vars:     Size  Location     Type
   292 ;;		None
   293 ;; Return value:  Size  Location     Type
   294 ;;                  1    wreg      unsigned char 
   295 ;; Registers used:
   296 ;;		wreg, status,2
   297 ;; Tracked objects:
   298 ;;		On entry : 0/0
   299 ;;		On exit  : 0/0
   300 ;;		Unchanged: 0/0
   301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   302 ;;      Params:         0       0       0       0       0       0       0       0       0
   303 ;;      Locals:         0       0       0       0       0       0       0       0       0
   304 ;;      Temps:          0       0       0       0       0       0       0       0       0
   305 ;;      Totals:         0       0       0       0       0       0       0       0       0
   306 ;;Total ram usage:        0 bytes
   307 ;; Hardware stack levels used:    1
   308 ;; This function calls:
   309 ;;		Nothing
   310 ;; This function is called by:
   311 ;;		_Recuperar
   312 ;; This function uses a non-reentrant model
   313 ;;
   314                           
   315                           	psect	text3
   316  007BEC                     __ptext3:
   317                           	opt stack 0
   318  007BEC                     _Teclado:
   319                           	opt stack 29
   320                           
   321                           ;teclado.c: 15: TRISB = 0xF0;
   322                           
   323                           ;incstack = 0
   324  007BEC  0EF0               	movlw	240
   325  007BEE  6E93               	movwf	3987,c	;volatile
   326                           
   327                           ;teclado.c: 16: PORTB = 0xFF;
   328  007BF0  6881               	setf	3969,c	;volatile
   329                           
   330                           ;teclado.c: 18: PORTBbits.RB0=0;
   331  007BF2  9081               	bcf	3969,0,c	;volatile
   332                           
   333                           ;teclado.c: 19: if(PORTBbits.RB4==0){return '1';}
   334  007BF4  B881               	btfsc	3969,4,c	;volatile
   335  007BF6  D002               	goto	l97
   336  007BF8  0E31               	movlw	49
   337  007BFA  0012               	return	
   338  007BFC                     l97:
   339                           
   340                           ;teclado.c: 20: if(PORTBbits.RB5==0){return '2';}
   341  007BFC  BA81               	btfsc	3969,5,c	;volatile
   342  007BFE  D002               	goto	l99
   343  007C00  0E32               	movlw	50
   344  007C02  0012               	return	
   345  007C04                     l99:
   346                           
   347                           ;teclado.c: 21: if(PORTBbits.RB6==0){return '3';}
   348  007C04  BC81               	btfsc	3969,6,c	;volatile
   349  007C06  D002               	goto	l100
   350  007C08  0E33               	movlw	51
   351  007C0A  0012               	return	
   352  007C0C                     l100:
   353                           
   354                           ;teclado.c: 22: if(PORTBbits.RB7==0){return 'A';}
   355  007C0C  BE81               	btfsc	3969,7,c	;volatile
   356  007C0E  D002               	goto	l101
   357  007C10  0E41               	movlw	65
   358  007C12  0012               	return	
   359  007C14                     l101:
   360                           
   361                           ;teclado.c: 23: PORTBbits.RB0=1;
   362  007C14  8081               	bsf	3969,0,c	;volatile
   363                           
   364                           ;teclado.c: 25: PORTBbits.RB1=0;
   365  007C16  9281               	bcf	3969,1,c	;volatile
   366                           
   367                           ;teclado.c: 26: if(PORTBbits.RB4==0){return '4';}
   368  007C18  B881               	btfsc	3969,4,c	;volatile
   369  007C1A  D002               	goto	l102
   370  007C1C  0E34               	movlw	52
   371  007C1E  0012               	return	
   372  007C20                     l102:
   373                           
   374                           ;teclado.c: 27: if(PORTBbits.RB5==0){return '5'; }
   375  007C20  BA81               	btfsc	3969,5,c	;volatile
   376  007C22  D002               	goto	l103
   377  007C24  0E35               	movlw	53
   378  007C26  0012               	return	
   379  007C28                     l103:
   380                           
   381                           ;teclado.c: 28: if(PORTBbits.RB6==0){return '6';}
   382  007C28  BC81               	btfsc	3969,6,c	;volatile
   383  007C2A  D002               	goto	l104
   384  007C2C  0E36               	movlw	54
   385  007C2E  0012               	return	
   386  007C30                     l104:
   387                           
   388                           ;teclado.c: 29: if(PORTBbits.RB7==0){return 'B';}
   389  007C30  BE81               	btfsc	3969,7,c	;volatile
   390  007C32  D002               	goto	l105
   391  007C34  0E42               	movlw	66
   392  007C36  0012               	return	
   393  007C38                     l105:
   394                           
   395                           ;teclado.c: 30: PORTBbits.RB1=1;
   396  007C38  8281               	bsf	3969,1,c	;volatile
   397                           
   398                           ;teclado.c: 32: PORTBbits.RB2=0;
   399  007C3A  9481               	bcf	3969,2,c	;volatile
   400                           
   401                           ;teclado.c: 33: if(PORTBbits.RB4==0){return '7';}
   402  007C3C  B881               	btfsc	3969,4,c	;volatile
   403  007C3E  D002               	goto	l106
   404  007C40  0E37               	movlw	55
   405  007C42  0012               	return	
   406  007C44                     l106:
   407                           
   408                           ;teclado.c: 34: if(PORTBbits.RB5==0){return '8';}
   409  007C44  BA81               	btfsc	3969,5,c	;volatile
   410  007C46  D002               	goto	l107
   411  007C48  0E38               	movlw	56
   412  007C4A  0012               	return	
   413  007C4C                     l107:
   414                           
   415                           ;teclado.c: 35: if(PORTBbits.RB6==0){return '9';}
   416  007C4C  BC81               	btfsc	3969,6,c	;volatile
   417  007C4E  D002               	goto	l108
   418  007C50  0E39               	movlw	57
   419  007C52  0012               	return	
   420  007C54                     l108:
   421                           
   422                           ;teclado.c: 36: if(PORTBbits.RB7==0){return 'C';}
   423  007C54  BE81               	btfsc	3969,7,c	;volatile
   424  007C56  D002               	goto	l109
   425  007C58  0E43               	movlw	67
   426  007C5A  0012               	return	
   427  007C5C                     l109:
   428                           
   429                           ;teclado.c: 37: PORTBbits.RB2=1;
   430  007C5C  8481               	bsf	3969,2,c	;volatile
   431                           
   432                           ;teclado.c: 39: PORTBbits.RB3=0;
   433  007C5E  9681               	bcf	3969,3,c	;volatile
   434                           
   435                           ;teclado.c: 40: if(PORTBbits.RB4==0){return '*';}
   436  007C60  B881               	btfsc	3969,4,c	;volatile
   437  007C62  D002               	goto	l110
   438  007C64  0E2A               	movlw	42
   439  007C66  0012               	return	
   440  007C68                     l110:
   441                           
   442                           ;teclado.c: 41: if(PORTBbits.RB5==0){return '0';}
   443  007C68  BA81               	btfsc	3969,5,c	;volatile
   444  007C6A  D002               	goto	l111
   445  007C6C  0E30               	movlw	48
   446  007C6E  0012               	return	
   447  007C70                     l111:
   448                           
   449                           ;teclado.c: 42: if(PORTBbits.RB6==0){return '#';}
   450  007C70  BC81               	btfsc	3969,6,c	;volatile
   451  007C72  D002               	goto	l112
   452  007C74  0E23               	movlw	35
   453  007C76  0012               	return	
   454  007C78                     l112:
   455                           
   456                           ;teclado.c: 43: if(PORTBbits.RB7==0){return 'D';}
   457  007C78  BE81               	btfsc	3969,7,c	;volatile
   458  007C7A  D002               	goto	l113
   459  007C7C  0E44               	movlw	68
   460  007C7E  0012               	return	
   461  007C80                     l113:
   462                           
   463                           ;teclado.c: 44: PORTBbits.RB3=1;
   464  007C80  8681               	bsf	3969,3,c	;volatile
   465                           
   466                           ;teclado.c: 46: return ' ';
   467  007C82  0E20               	movlw	32
   468  007C84  0012               	return	
   469  007C86                     __end_of_Teclado:
   470                           	opt stack 0
   471                           tblptru	equ	0xFF8
   472                           intcon2	equ	0xFF1
   473                           
   474 ;; *************** function _Lcd_Init *****************
   475 ;; Defined at:
   476 ;;		line 71 in file "LCD.h"
   477 ;; Parameters:    Size  Location     Type
   478 ;;		None
   479 ;; Auto vars:     Size  Location     Type
   480 ;;  data            1    4[COMRAM] unsigned char 
   481 ;; Return value:  Size  Location     Type
   482 ;;		None               void
   483 ;; Registers used:
   484 ;;		wreg, status,2, status,0, cstack
   485 ;; Tracked objects:
   486 ;;		On entry : 0/0
   487 ;;		On exit  : 0/0
   488 ;;		Unchanged: 0/0
   489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   490 ;;      Params:         0       0       0       0       0       0       0       0       0
   491 ;;      Locals:         1       0       0       0       0       0       0       0       0
   492 ;;      Temps:          1       0       0       0       0       0       0       0       0
   493 ;;      Totals:         2       0       0       0       0       0       0       0       0
   494 ;;Total ram usage:        2 bytes
   495 ;; Hardware stack levels used:    1
   496 ;; Hardware stack levels required when called:    1
   497 ;; This function calls:
   498 ;;		_Lcd_Cmd
   499 ;; This function is called by:
   500 ;;		_main
   501 ;; This function uses a non-reentrant model
   502 ;;
   503                           
   504                           	psect	text4
   505  007DAC                     __ptext4:
   506                           	opt stack 0
   507  007DAC                     _Lcd_Init:
   508                           	opt stack 29
   509                           
   510                           ;LCD.h: 72: unsigned char data;
   511                           ;LCD.h: 73: TRISDbits.TRISD7 = 0;
   512                           
   513                           ;incstack = 0
   514  007DAC  9E95               	bcf	3989,7,c	;volatile
   515                           
   516                           ;LCD.h: 74: TRISDbits.TRISD6 = 0;
   517  007DAE  9C95               	bcf	3989,6,c	;volatile
   518                           
   519                           ;LCD.h: 75: TRISDbits.TRISD5 = 0;
   520  007DB0  9A95               	bcf	3989,5,c	;volatile
   521                           
   522                           ;LCD.h: 76: TRISDbits.TRISD4 = 0;
   523  007DB2  9895               	bcf	3989,4,c	;volatile
   524                           
   525                           ;LCD.h: 77: TRISDbits.TRISD3 = 0;
   526  007DB4  9695               	bcf	3989,3,c	;volatile
   527                           
   528                           ;LCD.h: 78: TRISDbits.TRISD1 = 0;
   529  007DB6  9295               	bcf	3989,1,c	;volatile
   530                           
   531                           ;LCD.h: 79: TRISDbits.TRISD2 = 0;
   532  007DB8  9495               	bcf	3989,2,c	;volatile
   533                           
   534                           ;LCD.h: 80: PORTDbits.RD7 = 0;
   535  007DBA  9E83               	bcf	3971,7,c	;volatile
   536                           
   537                           ;LCD.h: 81: PORTDbits.RD6 = 0;
   538  007DBC  9C83               	bcf	3971,6,c	;volatile
   539                           
   540                           ;LCD.h: 82: PORTDbits.RD5 = 0;
   541  007DBE  9A83               	bcf	3971,5,c	;volatile
   542                           
   543                           ;LCD.h: 83: PORTDbits.RD4 = 0;
   544  007DC0  9883               	bcf	3971,4,c	;volatile
   545                           
   546                           ;LCD.h: 84: PORTDbits.RD3 = 0;
   547  007DC2  9683               	bcf	3971,3,c	;volatile
   548                           
   549                           ;LCD.h: 85: PORTDbits.RD1 = 0;
   550  007DC4  9283               	bcf	3971,1,c	;volatile
   551                           
   552                           ;LCD.h: 86: PORTDbits.RD2 = 0;
   553  007DC6  9483               	bcf	3971,2,c	;volatile
   554                           
   555                           ;LCD.h: 87: _delay((unsigned long)((5500)*(4000000/4000000.0)));
   556  007DC8  0E08               	movlw	8
   557  007DCA  6E04               	movwf	??_Lcd_Init& (0+255),c
   558  007DCC  0E23               	movlw	35
   559  007DCE                     u277:
   560  007DCE  2EE8               	decfsz	wreg,f,c
   561  007DD0  D7FE               	goto	u277
   562  007DD2  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
   563  007DD4  D7FC               	goto	u277
   564  007DD6  F000               	nop	
   565                           
   566                           ;LCD.h: 88: _delay((unsigned long)((5500)*(4000000/4000000.0)));
   567  007DD8  0E08               	movlw	8
   568  007DDA  6E04               	movwf	??_Lcd_Init& (0+255),c
   569  007DDC  0E23               	movlw	35
   570  007DDE                     u287:
   571  007DDE  2EE8               	decfsz	wreg,f,c
   572  007DE0  D7FE               	goto	u287
   573  007DE2  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
   574  007DE4  D7FC               	goto	u287
   575  007DE6  F000               	nop	
   576                           
   577                           ;LCD.h: 89: _delay((unsigned long)((5500)*(4000000/4000000.0)));
   578  007DE8  0E08               	movlw	8
   579  007DEA  6E04               	movwf	??_Lcd_Init& (0+255),c
   580  007DEC  0E23               	movlw	35
   581  007DEE                     u297:
   582  007DEE  2EE8               	decfsz	wreg,f,c
   583  007DF0  D7FE               	goto	u297
   584  007DF2  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
   585  007DF4  D7FC               	goto	u297
   586  007DF6  F000               	nop	
   587                           
   588                           ;LCD.h: 90: _delay((unsigned long)((5500)*(4000000/4000000.0)));
   589  007DF8  0E08               	movlw	8
   590  007DFA  6E04               	movwf	??_Lcd_Init& (0+255),c
   591  007DFC  0E23               	movlw	35
   592  007DFE                     u307:
   593  007DFE  2EE8               	decfsz	wreg,f,c
   594  007E00  D7FE               	goto	u307
   595  007E02  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
   596  007E04  D7FC               	goto	u307
   597  007E06  F000               	nop	
   598                           
   599                           ;LCD.h: 91: _delay((unsigned long)((5500)*(4000000/4000000.0)));
   600  007E08  0E08               	movlw	8
   601  007E0A  6E04               	movwf	??_Lcd_Init& (0+255),c
   602  007E0C  0E23               	movlw	35
   603  007E0E                     u317:
   604  007E0E  2EE8               	decfsz	wreg,f,c
   605  007E10  D7FE               	goto	u317
   606  007E12  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
   607  007E14  D7FC               	goto	u317
   608  007E16  F000               	nop	
   609                           
   610                           ;LCD.h: 92: _delay((unsigned long)((5500)*(4000000/4000000.0)));
   611  007E18  0E08               	movlw	8
   612  007E1A  6E04               	movwf	??_Lcd_Init& (0+255),c
   613  007E1C  0E23               	movlw	35
   614  007E1E                     u327:
   615  007E1E  2EE8               	decfsz	wreg,f,c
   616  007E20  D7FE               	goto	u327
   617  007E22  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
   618  007E24  D7FC               	goto	u327
   619  007E26  F000               	nop	
   620                           
   621                           ;LCD.h: 93: for(data = 1; data < 4; data ++)
   622  007E28  0E01               	movlw	1
   623  007E2A  6E05               	movwf	Lcd_Init@data,c
   624  007E2C  D01E               	goto	L1
   625  007E2E                     l31:
   626                           
   627                           ;LCD.h: 94: {
   628                           ;LCD.h: 95: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 = 1; 
      +                          PORTDbits.RD3 = 0;
   629  007E2E  9E83               	bcf	3971,7,c	;volatile
   630  007E30  9C83               	bcf	3971,6,c	;volatile
   631  007E32  8A83               	bsf	3971,5,c	;volatile
   632  007E34  8883               	bsf	3971,4,c	;volatile
   633  007E36  9683               	bcf	3971,3,c	;volatile
   634                           
   635                           ;LCD.h: 96: PORTDbits.RD1 = 0; PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; 
      +                          PORTDbits.RD4 = 1;
   636  007E38  9283               	bcf	3971,1,c	;volatile
   637  007E3A  9E83               	bcf	3971,7,c	;volatile
   638  007E3C  9C83               	bcf	3971,6,c	;volatile
   639  007E3E  8A83               	bsf	3971,5,c	;volatile
   640  007E40  8883               	bsf	3971,4,c	;volatile
   641                           
   642                           ;LCD.h: 97: PORTDbits.RD3 = 1; PORTDbits.RD1 = 0;
   643  007E42  8683               	bsf	3971,3,c	;volatile
   644  007E44  9283               	bcf	3971,1,c	;volatile
   645                           
   646                           ;LCD.h: 98: _delay((unsigned long)((5)*(4000000/4000000.0)));
   647  007E46  F000               	nop	
   648  007E48  D000               	nop2		;2 cycle nop
   649  007E4A  D000               	nop2		;2 cycle nop
   650                           
   651                           ;LCD.h: 99: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 = 1; 
      +                          PORTDbits.RD3 = 0;
   652  007E4C  9E83               	bcf	3971,7,c	;volatile
   653  007E4E  9C83               	bcf	3971,6,c	;volatile
   654  007E50  8A83               	bsf	3971,5,c	;volatile
   655  007E52  8883               	bsf	3971,4,c	;volatile
   656  007E54  9683               	bcf	3971,3,c	;volatile
   657                           
   658                           ;LCD.h: 100: PORTDbits.RD1 = 0;
   659  007E56  9283               	bcf	3971,1,c	;volatile
   660                           
   661                           ;LCD.h: 101: _delay((unsigned long)((5500)*(4000000/4000000.0)));
   662  007E58  0E08               	movlw	8
   663  007E5A  6E04               	movwf	??_Lcd_Init& (0+255),c
   664  007E5C  0E23               	movlw	35
   665  007E5E                     u337:
   666  007E5E  2EE8               	decfsz	wreg,f,c
   667  007E60  D7FE               	goto	u337
   668  007E62  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
   669  007E64  D7FC               	goto	u337
   670  007E66  F000               	nop	
   671  007E68  2A05               	incf	Lcd_Init@data,f,c
   672  007E6A                     L1:
   673  007E6A  0E03               	movlw	3
   674  007E6C  6405               	cpfsgt	Lcd_Init@data,c
   675  007E6E  D7DF               	goto	l31
   676                           
   677                           ;LCD.h: 102: }
   678                           ;LCD.h: 103: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 = 0;
      +                           PORTDbits.RD3 = 0; PORTDbits.RD1 = 0;
   679  007E70  9E83               	bcf	3971,7,c	;volatile
   680  007E72  9C83               	bcf	3971,6,c	;volatile
   681  007E74  8A83               	bsf	3971,5,c	;volatile
   682  007E76  9883               	bcf	3971,4,c	;volatile
   683  007E78  9683               	bcf	3971,3,c	;volatile
   684  007E7A  9283               	bcf	3971,1,c	;volatile
   685                           
   686                           ;LCD.h: 104: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 = 0;
      +                           PORTDbits.RD3 = 1; PORTDbits.RD1 = 0;
   687  007E7C  9E83               	bcf	3971,7,c	;volatile
   688  007E7E  9C83               	bcf	3971,6,c	;volatile
   689  007E80  8A83               	bsf	3971,5,c	;volatile
   690  007E82  9883               	bcf	3971,4,c	;volatile
   691  007E84  8683               	bsf	3971,3,c	;volatile
   692  007E86  9283               	bcf	3971,1,c	;volatile
   693                           
   694                           ;LCD.h: 105: _delay((unsigned long)((5)*(4000000/4000000.0)));
   695  007E88  F000               	nop	
   696  007E8A  D000               	nop2		;2 cycle nop
   697  007E8C  D000               	nop2		;2 cycle nop
   698                           
   699                           ;LCD.h: 106: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 = 0;
      +                           PORTDbits.RD3 = 0; PORTDbits.RD1 = 0;
   700  007E8E  9E83               	bcf	3971,7,c	;volatile
   701  007E90  9C83               	bcf	3971,6,c	;volatile
   702  007E92  8A83               	bsf	3971,5,c	;volatile
   703  007E94  9883               	bcf	3971,4,c	;volatile
   704  007E96  9683               	bcf	3971,3,c	;volatile
   705  007E98  9283               	bcf	3971,1,c	;volatile
   706                           
   707                           ;LCD.h: 107: _delay((unsigned long)((5500)*(4000000/4000000.0)));
   708  007E9A  0E08               	movlw	8
   709  007E9C  6E04               	movwf	??_Lcd_Init& (0+255),c
   710  007E9E  0E23               	movlw	35
   711  007EA0                     u347:
   712  007EA0  2EE8               	decfsz	wreg,f,c
   713  007EA2  D7FE               	goto	u347
   714  007EA4  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
   715  007EA6  D7FC               	goto	u347
   716  007EA8  F000               	nop	
   717                           
   718                           ;LCD.h: 108: data = 40; Lcd_Cmd(data);
   719  007EAA  0E28               	movlw	40
   720  007EAC  6E05               	movwf	Lcd_Init@data,c
   721  007EAE  5005               	movf	Lcd_Init@data,w,c
   722  007EB0  EC43  F03E         	call	_Lcd_Cmd
   723                           
   724                           ;LCD.h: 109: data = 16; Lcd_Cmd(data);
   725  007EB4  0E10               	movlw	16
   726  007EB6  6E05               	movwf	Lcd_Init@data,c
   727  007EB8  5005               	movf	Lcd_Init@data,w,c
   728  007EBA  EC43  F03E         	call	_Lcd_Cmd
   729                           
   730                           ;LCD.h: 110: data = 1; Lcd_Cmd(data);
   731  007EBE  0E01               	movlw	1
   732  007EC0  6E05               	movwf	Lcd_Init@data,c
   733  007EC2  5005               	movf	Lcd_Init@data,w,c
   734  007EC4  EC43  F03E         	call	_Lcd_Cmd
   735                           
   736                           ;LCD.h: 111: data = 15; Lcd_Cmd(data);
   737  007EC8  0E0F               	movlw	15
   738  007ECA  6E05               	movwf	Lcd_Init@data,c
   739  007ECC  5005               	movf	Lcd_Init@data,w,c
   740  007ECE  EC43  F03E         	call	_Lcd_Cmd
   741  007ED2  0012               	return	
   742  007ED4                     __end_of_Lcd_Init:
   743                           	opt stack 0
   744                           tblptru	equ	0xFF8
   745                           intcon2	equ	0xFF1
   746                           wreg	equ	0xFE8
   747                           
   748 ;; *************** function _Lcd_Cmd *****************
   749 ;; Defined at:
   750 ;;		line 171 in file "LCD.h"
   751 ;; Parameters:    Size  Location     Type
   752 ;;  data            1    wreg     unsigned char 
   753 ;; Auto vars:     Size  Location     Type
   754 ;;  data            1    2[COMRAM] unsigned char 
   755 ;; Return value:  Size  Location     Type
   756 ;;		None               void
   757 ;; Registers used:
   758 ;;		wreg, status,2, status,0
   759 ;; Tracked objects:
   760 ;;		On entry : 0/0
   761 ;;		On exit  : 0/0
   762 ;;		Unchanged: 0/0
   763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   764 ;;      Params:         0       0       0       0       0       0       0       0       0
   765 ;;      Locals:         1       0       0       0       0       0       0       0       0
   766 ;;      Temps:          2       0       0       0       0       0       0       0       0
   767 ;;      Totals:         3       0       0       0       0       0       0       0       0
   768 ;;Total ram usage:        3 bytes
   769 ;; Hardware stack levels used:    1
   770 ;; This function calls:
   771 ;;		Nothing
   772 ;; This function is called by:
   773 ;;		_Lcd_Init
   774 ;;		_main
   775 ;;		_Lcd_Out
   776 ;;		_Lcd_Out2
   777 ;;		_lcd_goto
   778 ;; This function uses a non-reentrant model
   779 ;;
   780                           
   781                           	psect	text5
   782  007C86                     __ptext5:
   783                           	opt stack 0
   784  007C86                     _Lcd_Cmd:
   785                           	opt stack 29
   786                           
   787                           ;incstack = 0
   788                           ;Lcd_Cmd@data stored from wreg
   789  007C86  6E03               	movwf	Lcd_Cmd@data,c
   790                           
   791                           ;LCD.h: 172: PORTDbits.RD3 = 0; PORTDbits.RD1 = 0;
   792  007C88  9683               	bcf	3971,3,c	;volatile
   793  007C8A  9283               	bcf	3971,1,c	;volatile
   794                           
   795                           ;LCD.h: 173: PORTDbits.RD7 = (data & 0b10000000)>>7; PORTDbits.RD6 = (data & 0b01000000)
      +                          >>6;
   796  007C8C  6A01               	clrf	??_Lcd_Cmd& (0+255),c
   797  007C8E  AE03               	btfss	Lcd_Cmd@data,7,c
   798  007C90  D001               	bra	u15
   799  007C92  2A01               	incf	??_Lcd_Cmd& (0+255),f,c
   800  007C94                     u15:
   801  007C94  0E01               	movlw	1
   802  007C96  1601               	andwf	??_Lcd_Cmd,f,c
   803  007C98  3201               	rrcf	??_Lcd_Cmd,f,c
   804  007C9A  3201               	rrcf	??_Lcd_Cmd,f,c
   805  007C9C  5083               	movf	3971,w,c	;volatile
   806  007C9E  1801               	xorwf	??_Lcd_Cmd,w,c
   807  007CA0  0B7F               	andlw	-129
   808  007CA2  1801               	xorwf	??_Lcd_Cmd,w,c
   809  007CA4  6E83               	movwf	3971,c	;volatile
   810  007CA6  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
   811  007CAA  0E06               	movlw	6
   812  007CAC  6E02               	movwf	(??_Lcd_Cmd+1)& (0+255),c
   813  007CAE                     u25:
   814  007CAE  90D8               	bcf	status,0,c
   815  007CB0  3201               	rrcf	??_Lcd_Cmd,f,c
   816  007CB2  2E02               	decfsz	(??_Lcd_Cmd+1)& (0+255),f,c
   817  007CB4  D7FC               	goto	u25
   818  007CB6  0E01               	movlw	1
   819  007CB8  1601               	andwf	??_Lcd_Cmd,f,c
   820  007CBA  3A01               	swapf	??_Lcd_Cmd,f,c
   821  007CBC  4601               	rlncf	??_Lcd_Cmd,f,c
   822  007CBE  4601               	rlncf	??_Lcd_Cmd,f,c
   823  007CC0  5083               	movf	3971,w,c	;volatile
   824  007CC2  1801               	xorwf	??_Lcd_Cmd,w,c
   825  007CC4  0BBF               	andlw	-65
   826  007CC6  1801               	xorwf	??_Lcd_Cmd,w,c
   827  007CC8  6E83               	movwf	3971,c	;volatile
   828                           
   829                           ;LCD.h: 174: PORTDbits.RD5 = (data & 0b00100000)>>5; PORTDbits.RD4 = (data & 0b00010000)
      +                          >>4;
   830  007CCA  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
   831  007CCE  0E05               	movlw	5
   832  007CD0  6E02               	movwf	(??_Lcd_Cmd+1)& (0+255),c
   833  007CD2                     u35:
   834  007CD2  90D8               	bcf	status,0,c
   835  007CD4  3201               	rrcf	??_Lcd_Cmd,f,c
   836  007CD6  2E02               	decfsz	(??_Lcd_Cmd+1)& (0+255),f,c
   837  007CD8  D7FC               	goto	u35
   838  007CDA  0E01               	movlw	1
   839  007CDC  1601               	andwf	??_Lcd_Cmd,f,c
   840  007CDE  3A01               	swapf	??_Lcd_Cmd,f,c
   841  007CE0  4601               	rlncf	??_Lcd_Cmd,f,c
   842  007CE2  5083               	movf	3971,w,c	;volatile
   843  007CE4  1801               	xorwf	??_Lcd_Cmd,w,c
   844  007CE6  0BDF               	andlw	-33
   845  007CE8  1801               	xorwf	??_Lcd_Cmd,w,c
   846  007CEA  6E83               	movwf	3971,c	;volatile
   847  007CEC  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
   848  007CF0  3A01               	swapf	??_Lcd_Cmd,f,c
   849  007CF2  0E0F               	movlw	15
   850  007CF4  1601               	andwf	??_Lcd_Cmd,f,c
   851  007CF6  0E01               	movlw	1
   852  007CF8  1601               	andwf	??_Lcd_Cmd,f,c
   853  007CFA  3A01               	swapf	??_Lcd_Cmd,f,c
   854  007CFC  5083               	movf	3971,w,c	;volatile
   855  007CFE  1801               	xorwf	??_Lcd_Cmd,w,c
   856  007D00  0BEF               	andlw	-17
   857  007D02  1801               	xorwf	??_Lcd_Cmd,w,c
   858  007D04  6E83               	movwf	3971,c	;volatile
   859                           
   860                           ;LCD.h: 175: _delay((unsigned long)((10)*(4000000/4000000.0)));
   861  007D06  0E03               	movlw	3
   862  007D08                     u357:
   863  007D08  2EE8               	decfsz	wreg,f,c
   864  007D0A  D7FE               	goto	u357
   865  007D0C  F000               	nop	
   866                           
   867                           ;LCD.h: 176: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(4000000/4000000.0))); PORTDb
      +                          its.RD3 = 0;
   868  007D0E  8683               	bsf	3971,3,c	;volatile
   869  007D10  F000               	nop	
   870  007D12  D000               	nop2		;2 cycle nop
   871  007D14  D000               	nop2		;2 cycle nop
   872  007D16  9683               	bcf	3971,3,c	;volatile
   873                           
   874                           ;LCD.h: 177: PORTDbits.RD7 = (data & 0b00001000)>>3; PORTDbits.RD6 = (data & 0b00000100)
      +                          >>2;
   875  007D18  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
   876  007D1C  90D8               	bcf	status,0,c
   877  007D1E  3201               	rrcf	??_Lcd_Cmd,f,c
   878  007D20  90D8               	bcf	status,0,c
   879  007D22  3201               	rrcf	??_Lcd_Cmd,f,c
   880  007D24  90D8               	bcf	status,0,c
   881  007D26  3201               	rrcf	??_Lcd_Cmd,f,c
   882  007D28  0E01               	movlw	1
   883  007D2A  1601               	andwf	??_Lcd_Cmd,f,c
   884  007D2C  3201               	rrcf	??_Lcd_Cmd,f,c
   885  007D2E  3201               	rrcf	??_Lcd_Cmd,f,c
   886  007D30  5083               	movf	3971,w,c	;volatile
   887  007D32  1801               	xorwf	??_Lcd_Cmd,w,c
   888  007D34  0B7F               	andlw	-129
   889  007D36  1801               	xorwf	??_Lcd_Cmd,w,c
   890  007D38  6E83               	movwf	3971,c	;volatile
   891  007D3A  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
   892  007D3E  90D8               	bcf	status,0,c
   893  007D40  3201               	rrcf	??_Lcd_Cmd,f,c
   894  007D42  90D8               	bcf	status,0,c
   895  007D44  3201               	rrcf	??_Lcd_Cmd,f,c
   896  007D46  0E01               	movlw	1
   897  007D48  1601               	andwf	??_Lcd_Cmd,f,c
   898  007D4A  3A01               	swapf	??_Lcd_Cmd,f,c
   899  007D4C  4601               	rlncf	??_Lcd_Cmd,f,c
   900  007D4E  4601               	rlncf	??_Lcd_Cmd,f,c
   901  007D50  5083               	movf	3971,w,c	;volatile
   902  007D52  1801               	xorwf	??_Lcd_Cmd,w,c
   903  007D54  0BBF               	andlw	-65
   904  007D56  1801               	xorwf	??_Lcd_Cmd,w,c
   905  007D58  6E83               	movwf	3971,c	;volatile
   906                           
   907                           ;LCD.h: 178: PORTDbits.RD5 = (data & 0b00000010)>>1; PORTDbits.RD4 = (data & 0b00000001)
      +                          ;
   908  007D5A  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
   909  007D5E  90D8               	bcf	status,0,c
   910  007D60  3201               	rrcf	??_Lcd_Cmd,f,c
   911  007D62  0E01               	movlw	1
   912  007D64  1601               	andwf	??_Lcd_Cmd,f,c
   913  007D66  3A01               	swapf	??_Lcd_Cmd,f,c
   914  007D68  4601               	rlncf	??_Lcd_Cmd,f,c
   915  007D6A  5083               	movf	3971,w,c	;volatile
   916  007D6C  1801               	xorwf	??_Lcd_Cmd,w,c
   917  007D6E  0BDF               	andlw	-33
   918  007D70  1801               	xorwf	??_Lcd_Cmd,w,c
   919  007D72  6E83               	movwf	3971,c	;volatile
   920  007D74  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
   921  007D78  0E01               	movlw	1
   922  007D7A  1601               	andwf	??_Lcd_Cmd,f,c
   923  007D7C  3A01               	swapf	??_Lcd_Cmd,f,c
   924  007D7E  5083               	movf	3971,w,c	;volatile
   925  007D80  1801               	xorwf	??_Lcd_Cmd,w,c
   926  007D82  0BEF               	andlw	-17
   927  007D84  1801               	xorwf	??_Lcd_Cmd,w,c
   928  007D86  6E83               	movwf	3971,c	;volatile
   929                           
   930                           ;LCD.h: 179: _delay((unsigned long)((10)*(4000000/4000000.0)));;
   931  007D88  0E03               	movlw	3
   932  007D8A                     u367:
   933  007D8A  2EE8               	decfsz	wreg,f,c
   934  007D8C  D7FE               	goto	u367
   935  007D8E  F000               	nop	
   936                           
   937                           ;LCD.h: 180: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(4000000/4000000.0))); PORTDb
      +                          its.RD3 = 0;
   938  007D90  8683               	bsf	3971,3,c	;volatile
   939  007D92  F000               	nop	
   940  007D94  D000               	nop2		;2 cycle nop
   941  007D96  D000               	nop2		;2 cycle nop
   942  007D98  9683               	bcf	3971,3,c	;volatile
   943                           
   944                           ;LCD.h: 181: _delay((unsigned long)((5500)*(4000000/4000000.0)));
   945  007D9A  0E08               	movlw	8
   946  007D9C  6E01               	movwf	??_Lcd_Cmd& (0+255),c
   947  007D9E  0E23               	movlw	35
   948  007DA0                     u377:
   949  007DA0  2EE8               	decfsz	wreg,f,c
   950  007DA2  D7FE               	goto	u377
   951  007DA4  2E01               	decfsz	??_Lcd_Cmd& (0+255),f,c
   952  007DA6  D7FC               	goto	u377
   953  007DA8  F000               	nop	
   954  007DAA  0012               	return	
   955  007DAC                     __end_of_Lcd_Cmd:
   956                           	opt stack 0
   957                           tblptru	equ	0xFF8
   958                           intcon2	equ	0xFF1
   959                           wreg	equ	0xFE8
   960                           status	equ	0xFD8
   961                           
   962 ;; *************** function _Lcd_Chr_CP *****************
   963 ;; Defined at:
   964 ;;		line 157 in file "LCD.h"
   965 ;; Parameters:    Size  Location     Type
   966 ;;  data            1    wreg     unsigned char 
   967 ;; Auto vars:     Size  Location     Type
   968 ;;  data            1    2[COMRAM] unsigned char 
   969 ;; Return value:  Size  Location     Type
   970 ;;		None               void
   971 ;; Registers used:
   972 ;;		wreg, status,2, status,0
   973 ;; Tracked objects:
   974 ;;		On entry : 0/0
   975 ;;		On exit  : 0/0
   976 ;;		Unchanged: 0/0
   977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   978 ;;      Params:         0       0       0       0       0       0       0       0       0
   979 ;;      Locals:         1       0       0       0       0       0       0       0       0
   980 ;;      Temps:          2       0       0       0       0       0       0       0       0
   981 ;;      Totals:         3       0       0       0       0       0       0       0       0
   982 ;;Total ram usage:        3 bytes
   983 ;; Hardware stack levels used:    1
   984 ;; This function calls:
   985 ;;		Nothing
   986 ;; This function is called by:
   987 ;;		_main
   988 ;;		_Lcd_Out
   989 ;;		_Lcd_Out2
   990 ;; This function uses a non-reentrant model
   991 ;;
   992                           
   993                           	psect	text6
   994  007ED4                     __ptext6:
   995                           	opt stack 0
   996  007ED4                     _Lcd_Chr_CP:
   997                           	opt stack 30
   998                           
   999                           ;incstack = 0
  1000                           ;Lcd_Chr_CP@data stored from wreg
  1001  007ED4  6E03               	movwf	Lcd_Chr_CP@data,c
  1002                           
  1003                           ;LCD.h: 158: PORTDbits.RD3 = 0; PORTDbits.RD1 = 1;
  1004  007ED6  9683               	bcf	3971,3,c	;volatile
  1005  007ED8  8283               	bsf	3971,1,c	;volatile
  1006                           
  1007                           ;LCD.h: 159: PORTDbits.RD7 = (data & 0b10000000)>>7; PORTDbits.RD6 = (data & 0b01000000)
      +                          >>6;
  1008  007EDA  6A01               	clrf	??_Lcd_Chr_CP& (0+255),c
  1009  007EDC  AE03               	btfss	Lcd_Chr_CP@data,7,c
  1010  007EDE  D001               	bra	u225
  1011  007EE0  2A01               	incf	??_Lcd_Chr_CP& (0+255),f,c
  1012  007EE2                     u225:
  1013  007EE2  0E01               	movlw	1
  1014  007EE4  1601               	andwf	??_Lcd_Chr_CP,f,c
  1015  007EE6  3201               	rrcf	??_Lcd_Chr_CP,f,c
  1016  007EE8  3201               	rrcf	??_Lcd_Chr_CP,f,c
  1017  007EEA  5083               	movf	3971,w,c	;volatile
  1018  007EEC  1801               	xorwf	??_Lcd_Chr_CP,w,c
  1019  007EEE  0B7F               	andlw	-129
  1020  007EF0  1801               	xorwf	??_Lcd_Chr_CP,w,c
  1021  007EF2  6E83               	movwf	3971,c	;volatile
  1022  007EF4  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  1023  007EF8  0E06               	movlw	6
  1024  007EFA  6E02               	movwf	(??_Lcd_Chr_CP+1)& (0+255),c
  1025  007EFC                     u235:
  1026  007EFC  90D8               	bcf	status,0,c
  1027  007EFE  3201               	rrcf	??_Lcd_Chr_CP,f,c
  1028  007F00  2E02               	decfsz	(??_Lcd_Chr_CP+1)& (0+255),f,c
  1029  007F02  D7FC               	goto	u235
  1030  007F04  0E01               	movlw	1
  1031  007F06  1601               	andwf	??_Lcd_Chr_CP,f,c
  1032  007F08  3A01               	swapf	??_Lcd_Chr_CP,f,c
  1033  007F0A  4601               	rlncf	??_Lcd_Chr_CP,f,c
  1034  007F0C  4601               	rlncf	??_Lcd_Chr_CP,f,c
  1035  007F0E  5083               	movf	3971,w,c	;volatile
  1036  007F10  1801               	xorwf	??_Lcd_Chr_CP,w,c
  1037  007F12  0BBF               	andlw	-65
  1038  007F14  1801               	xorwf	??_Lcd_Chr_CP,w,c
  1039  007F16  6E83               	movwf	3971,c	;volatile
  1040                           
  1041                           ;LCD.h: 160: PORTDbits.RD5 = (data & 0b00100000)>>5; PORTDbits.RD4 = (data & 0b00010000)
      +                          >>4;
  1042  007F18  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  1043  007F1C  0E05               	movlw	5
  1044  007F1E  6E02               	movwf	(??_Lcd_Chr_CP+1)& (0+255),c
  1045  007F20                     u245:
  1046  007F20  90D8               	bcf	status,0,c
  1047  007F22  3201               	rrcf	??_Lcd_Chr_CP,f,c
  1048  007F24  2E02               	decfsz	(??_Lcd_Chr_CP+1)& (0+255),f,c
  1049  007F26  D7FC               	goto	u245
  1050  007F28  0E01               	movlw	1
  1051  007F2A  1601               	andwf	??_Lcd_Chr_CP,f,c
  1052  007F2C  3A01               	swapf	??_Lcd_Chr_CP,f,c
  1053  007F2E  4601               	rlncf	??_Lcd_Chr_CP,f,c
  1054  007F30  5083               	movf	3971,w,c	;volatile
  1055  007F32  1801               	xorwf	??_Lcd_Chr_CP,w,c
  1056  007F34  0BDF               	andlw	-33
  1057  007F36  1801               	xorwf	??_Lcd_Chr_CP,w,c
  1058  007F38  6E83               	movwf	3971,c	;volatile
  1059  007F3A  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  1060  007F3E  3A01               	swapf	??_Lcd_Chr_CP,f,c
  1061  007F40  0E0F               	movlw	15
  1062  007F42  1601               	andwf	??_Lcd_Chr_CP,f,c
  1063  007F44  0E01               	movlw	1
  1064  007F46  1601               	andwf	??_Lcd_Chr_CP,f,c
  1065  007F48  3A01               	swapf	??_Lcd_Chr_CP,f,c
  1066  007F4A  5083               	movf	3971,w,c	;volatile
  1067  007F4C  1801               	xorwf	??_Lcd_Chr_CP,w,c
  1068  007F4E  0BEF               	andlw	-17
  1069  007F50  1801               	xorwf	??_Lcd_Chr_CP,w,c
  1070  007F52  6E83               	movwf	3971,c	;volatile
  1071                           
  1072                           ;LCD.h: 161: _delay((unsigned long)((10)*(4000000/4000000.0)));
  1073  007F54  0E03               	movlw	3
  1074  007F56                     u387:
  1075  007F56  2EE8               	decfsz	wreg,f,c
  1076  007F58  D7FE               	goto	u387
  1077  007F5A  F000               	nop	
  1078                           
  1079                           ;LCD.h: 162: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(4000000/4000000.0))); PORTDb
      +                          its.RD3 = 0;
  1080  007F5C  8683               	bsf	3971,3,c	;volatile
  1081  007F5E  F000               	nop	
  1082  007F60  D000               	nop2		;2 cycle nop
  1083  007F62  D000               	nop2		;2 cycle nop
  1084  007F64  9683               	bcf	3971,3,c	;volatile
  1085                           
  1086                           ;LCD.h: 163: PORTDbits.RD7 = (data & 0b00001000)>>3; PORTDbits.RD6 = (data & 0b00000100)
      +                          >>2;
  1087  007F66  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  1088  007F6A  90D8               	bcf	status,0,c
  1089  007F6C  3201               	rrcf	??_Lcd_Chr_CP,f,c
  1090  007F6E  90D8               	bcf	status,0,c
  1091  007F70  3201               	rrcf	??_Lcd_Chr_CP,f,c
  1092  007F72  90D8               	bcf	status,0,c
  1093  007F74  3201               	rrcf	??_Lcd_Chr_CP,f,c
  1094  007F76  0E01               	movlw	1
  1095  007F78  1601               	andwf	??_Lcd_Chr_CP,f,c
  1096  007F7A  3201               	rrcf	??_Lcd_Chr_CP,f,c
  1097  007F7C  3201               	rrcf	??_Lcd_Chr_CP,f,c
  1098  007F7E  5083               	movf	3971,w,c	;volatile
  1099  007F80  1801               	xorwf	??_Lcd_Chr_CP,w,c
  1100  007F82  0B7F               	andlw	-129
  1101  007F84  1801               	xorwf	??_Lcd_Chr_CP,w,c
  1102  007F86  6E83               	movwf	3971,c	;volatile
  1103  007F88  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  1104  007F8C  90D8               	bcf	status,0,c
  1105  007F8E  3201               	rrcf	??_Lcd_Chr_CP,f,c
  1106  007F90  90D8               	bcf	status,0,c
  1107  007F92  3201               	rrcf	??_Lcd_Chr_CP,f,c
  1108  007F94  0E01               	movlw	1
  1109  007F96  1601               	andwf	??_Lcd_Chr_CP,f,c
  1110  007F98  3A01               	swapf	??_Lcd_Chr_CP,f,c
  1111  007F9A  4601               	rlncf	??_Lcd_Chr_CP,f,c
  1112  007F9C  4601               	rlncf	??_Lcd_Chr_CP,f,c
  1113  007F9E  5083               	movf	3971,w,c	;volatile
  1114  007FA0  1801               	xorwf	??_Lcd_Chr_CP,w,c
  1115  007FA2  0BBF               	andlw	-65
  1116  007FA4  1801               	xorwf	??_Lcd_Chr_CP,w,c
  1117  007FA6  6E83               	movwf	3971,c	;volatile
  1118                           
  1119                           ;LCD.h: 164: PORTDbits.RD5 = (data & 0b00000010)>>1; PORTDbits.RD4 = (data & 0b00000001)
      +                          ;
  1120  007FA8  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  1121  007FAC  90D8               	bcf	status,0,c
  1122  007FAE  3201               	rrcf	??_Lcd_Chr_CP,f,c
  1123  007FB0  0E01               	movlw	1
  1124  007FB2  1601               	andwf	??_Lcd_Chr_CP,f,c
  1125  007FB4  3A01               	swapf	??_Lcd_Chr_CP,f,c
  1126  007FB6  4601               	rlncf	??_Lcd_Chr_CP,f,c
  1127  007FB8  5083               	movf	3971,w,c	;volatile
  1128  007FBA  1801               	xorwf	??_Lcd_Chr_CP,w,c
  1129  007FBC  0BDF               	andlw	-33
  1130  007FBE  1801               	xorwf	??_Lcd_Chr_CP,w,c
  1131  007FC0  6E83               	movwf	3971,c	;volatile
  1132  007FC2  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  1133  007FC6  0E01               	movlw	1
  1134  007FC8  1601               	andwf	??_Lcd_Chr_CP,f,c
  1135  007FCA  3A01               	swapf	??_Lcd_Chr_CP,f,c
  1136  007FCC  5083               	movf	3971,w,c	;volatile
  1137  007FCE  1801               	xorwf	??_Lcd_Chr_CP,w,c
  1138  007FD0  0BEF               	andlw	-17
  1139  007FD2  1801               	xorwf	??_Lcd_Chr_CP,w,c
  1140  007FD4  6E83               	movwf	3971,c	;volatile
  1141                           
  1142                           ;LCD.h: 165: _delay((unsigned long)((10)*(4000000/4000000.0)));
  1143  007FD6  0E03               	movlw	3
  1144  007FD8                     u397:
  1145  007FD8  2EE8               	decfsz	wreg,f,c
  1146  007FDA  D7FE               	goto	u397
  1147  007FDC  F000               	nop	
  1148                           
  1149                           ;LCD.h: 166: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(4000000/4000000.0))); PORTDb
      +                          its.RD3 = 0;
  1150  007FDE  8683               	bsf	3971,3,c	;volatile
  1151  007FE0  F000               	nop	
  1152  007FE2  D000               	nop2		;2 cycle nop
  1153  007FE4  D000               	nop2		;2 cycle nop
  1154  007FE6  9683               	bcf	3971,3,c	;volatile
  1155                           
  1156                           ;LCD.h: 167: _delay((unsigned long)((5)*(4000000/4000000.0))); _delay((unsigned long)((5
      +                          500)*(4000000/4000000.0)));
  1157  007FE8  F000               	nop	
  1158  007FEA  D000               	nop2		;2 cycle nop
  1159  007FEC  D000               	nop2		;2 cycle nop
  1160  007FEE  0E08               	movlw	8
  1161  007FF0  6E01               	movwf	??_Lcd_Chr_CP& (0+255),c
  1162  007FF2  0E23               	movlw	35
  1163  007FF4                     u407:
  1164  007FF4  2EE8               	decfsz	wreg,f,c
  1165  007FF6  D7FE               	goto	u407
  1166  007FF8  2E01               	decfsz	??_Lcd_Chr_CP& (0+255),f,c
  1167  007FFA  D7FC               	goto	u407
  1168  007FFC  F000               	nop	
  1169  007FFE  0012               	return	
  1170  008000                     __end_of_Lcd_Chr_CP:
  1171                           	opt stack 0
  1172  0000                     tblptru	equ	0xFF8
  1173                           intcon2	equ	0xFF1
  1174                           wreg	equ	0xFE8
  1175                           status	equ	0xFD8
  1176                           tblptru	equ	0xFF8
  1177                           intcon2	equ	0xFF1
  1178                           wreg	equ	0xFE8
  1179                           status	equ	0xFD8
  1180                           
  1181                           	psect	rparam
  1182  0000                     tblptru	equ	0xFF8
  1183                           intcon2	equ	0xFF1
  1184                           wreg	equ	0xFE8
  1185                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      6       6
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_Lcd_Init
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     480
                                              5 COMRAM     1     1      0
                         _Lcd_Chr_CP
                            _Lcd_Cmd
                           _Lcd_Init
                          _Recuperar
                        _int_teclado
 ---------------------------------------------------------------------------------
 (1) _int_teclado                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Recuperar                                            1     1      0      15
                                              0 COMRAM     1     1      0
                            _Teclado
 ---------------------------------------------------------------------------------
 (2) _Teclado                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     210
                                              3 COMRAM     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     120
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Chr_CP                                           3     3      0     120
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Chr_CP
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Recuperar
     _Teclado
   _int_teclado

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      6       6       1        6.3%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
ABS                  0      0       0       6        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Thu Jul 11 12:47:07 2019

                     l31 7E2E                       l97 7BFC                       l99 7C04  
                     u15 7C94                       u25 7CAE                       u35 7CD2  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000                      l100 7C0C                      l101 7C14  
                    l110 7C68                      l102 7C20                      l111 7C70  
                    l103 7C28                      l112 7C78                      l104 7C30  
                    l113 7C80                      l105 7C38                      l106 7C44  
                    l107 7C4C                      l108 7C54                      l109 7C5C  
                    l948 7BDE             __CFG_CPB$OFF 000000                      u225 7EE2  
                    u235 7EFC                      u307 7DFE                      u245 7F20  
                    u317 7E0E                      u407 7FF4                      u327 7E1E  
                    u337 7E5E             __CFG_CPD$OFF 000000                      u347 7EA0  
                    u357 7D08                      u277 7DCE                      u367 7D8A  
                    u287 7DDE                      u377 7DA0                      u297 7DEE  
                    u387 7F56                      u397 7FD8                      wreg 000FE8  
           __CFG_LVP$OFF 000000                     _main 7BAE            __CFG_BORV$190 000000  
                   start 0000            __CFG_IESO$OFF 000000          __end_of_Lcd_Cmd 7DAC  
          __CFG_MCLRE$ON 000000               _Lcd_Chr_CP 7ED4          __end_of_Teclado 7C86  
                  ?_main 0001                    _PORTA 000F80                    _PORTB 000F81  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISE 000F96  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          Recuperar@tecl 0001            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000             ?_int_teclado 0001  
                  status 000FD8           __CFG_T3CMX$RC0 000000           __CFG_ICPRT$OFF 000000  
         __CFG_PBADEN$ON 000000         __end_of_Lcd_Init 7ED4          __initialization 7B96  
           __end_of_main 7BEC                   ??_main 0006            __activetblptr 000002  
         __CFG_SDOMX$RB3 000000          __CFG_CCP2MX$RC1 000000                   _ANSELA 000F5B  
                 _ANSELB 000F5C                   _ANSELD 000F5E                   _ANSELE 000F5F  
         __CFG_WDTEN$OFF 000000                   _OSCCON 000FD3                ??_Lcd_Cmd 0001  
              ??_Teclado 0001           __CFG_XINST$OFF 000000              ?_Lcd_Chr_CP 0001  
         __CFG_STVREN$ON 000000       __size_of_Recuperar 000E                   tblptru 000FF8  
   __CFG_LS48MHZ$SYS24X4 000000               __accesstop 0060  __end_of__initialization 7B96  
         __pcstackCOMRAM 0001          __CFG_PCLKEN$OFF 000000                ?_Lcd_Init 0001  
      __end_of_Recuperar 7BAE      __size_of_Lcd_Chr_CP 012C     __size_of_int_teclado 000A  
      __CFG_PLLSEL$PLL4X 000000               ??_Lcd_Init 0004                  _Lcd_Cmd 7C86  
                __Hparam 0000                  _Teclado 7BEC                  __Lparam 0000  
                __pcinit 7B96                  __ramtop 0800                  __ptext0 7BAE  
                __ptext1 7B8C                  __ptext2 7BA0                  __ptext3 7BEC  
                __ptext4 7DAC                  __ptext5 7C86                  __ptext6 7ED4  
                main@key 0006     end_of_initialization 7B96            __Lmediumconst 0000  
           ??_Lcd_Chr_CP 0001                _PORTBbits 000F81                _PORTDbits 000F83  
              _TRISDbits 000F95       __end_of_Lcd_Chr_CP 8000      start_initialization 7B96  
      __size_of_Lcd_Init 0128          __CFG_nLPBOR$OFF 000000                _Recuperar 7BA0  
        __CFG_nPWRTEN$ON 000000            ??_int_teclado 0001                 ?_Lcd_Cmd 0001  
             ?_Recuperar 0001                 ?_Teclado 0001      __end_of_int_teclado 7B96  
       __CFG_WDTPS$32768 000000             Lcd_Init@data 0005        __CFG_CFGPLLEN$OFF 000000  
               _Lcd_Init 7DAC              _INTCON2bits 000FF1              ??_Recuperar 0001  
       __size_of_Lcd_Cmd 0126                 __Hrparam 0000                 __Lrparam 0000  
       __size_of_Teclado 009A       __CFG_BOREN$SBORDIS 000000           Lcd_Chr_CP@data 0003  
            _int_teclado 7B8C              Lcd_Cmd@data 0003            __size_of_main 003E  
   __CFG_CPUDIV$NOCLKDIV 000000       __CFG_FOSC$INTOSCIO 000000  
