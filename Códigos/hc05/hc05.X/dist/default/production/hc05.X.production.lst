

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Thu Jul 18 22:57:07 2019

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,delta=1
    42                           	psect	text32,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    44                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    45                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    46  0000                     
    47 ;; Function _EUSART1_Receive_ISR is unused but had its address taken
    48  0000                     
    49 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    50  0000                     
    51 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
    52  0000                     
    53 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
    54  0000                     _ACTCON	set	4021
    55  0000                     _ANSELA	set	3931
    56  0000                     _ANSELB	set	3932
    57  0000                     _ANSELC	set	3933
    58  0000                     _ANSELD	set	3934
    59  0000                     _ANSELE	set	3935
    60  0000                     _BAUDCON1	set	4024
    61  0000                     _CCP1CON	set	4029
    62  0000                     _CCP2CON	set	3991
    63  0000                     _CCPR1L	set	4030
    64  0000                     _CCPR2L	set	3984
    65  0000                     _INTCON2bits	set	4081
    66  0000                     _INTCONbits	set	4082
    67  0000                     _LATA	set	3977
    68  0000                     _LATB	set	3978
    69  0000                     _LATBbits	set	3978
    70  0000                     _LATC	set	3979
    71  0000                     _LATCbits	set	3979
    72  0000                     _LATD	set	3980
    73  0000                     _LATE	set	3981
    74  0000                     _OSCCON	set	4051
    75  0000                     _OSCCON2	set	4050
    76  0000                     _OSCTUNE	set	3995
    77  0000                     _PIE1bits	set	3997
    78  0000                     _PIR1bits	set	3998
    79  0000                     _PORTBbits	set	3969
    80  0000                     _PORTDbits	set	3971
    81  0000                     _PR2	set	4027
    82  0000                     _RCONbits	set	4048
    83  0000                     _RCREG1	set	4014
    84  0000                     _RCSTA1	set	4011
    85  0000                     _RCSTA1bits	set	4011
    86  0000                     _SPBRG1	set	4015
    87  0000                     _SPBRGH1	set	4016
    88  0000                     _SSP1BUF	set	4041
    89  0000                     _SSP1CON1	set	4038
    90  0000                     _SSP1CON1bits	set	4038
    91  0000                     _SSP1STAT	set	4039
    92  0000                     _SSP1STATbits	set	4039
    93  0000                     _T0CON	set	4053
    94  0000                     _T0CONbits	set	4053
    95  0000                     _T1CON	set	4045
    96  0000                     _T2CON	set	4026
    97  0000                     _T2CONbits	set	4026
    98  0000                     _TMR0H	set	4055
    99  0000                     _TMR0L	set	4054
   100  0000                     _TMR1H	set	4047
   101  0000                     _TMR1L	set	4046
   102  0000                     _TMR2	set	4028
   103  0000                     _TRISA	set	3986
   104  0000                     _TRISAbits	set	3986
   105  0000                     _TRISB	set	3987
   106  0000                     _TRISBbits	set	3987
   107  0000                     _TRISC	set	3988
   108  0000                     _TRISCbits	set	3988
   109  0000                     _TRISD	set	3989
   110  0000                     _TRISDbits	set	3989
   111  0000                     _TRISE	set	3990
   112  0000                     _TXREG1	set	4013
   113  0000                     _TXSTA1	set	4012
   114  0000                     _TXSTA1bits	set	4012
   115  0000                     _TMR1IF	set	31984
   116  0000                     _TMR1ON	set	32360
   117                           
   118                           	psect	nvCOMRAM
   119  00004E                     __pnvCOMRAM:
   120                           	opt stack 0
   121  00004E                     _EUSART1_ErrorHandler:
   122                           	opt stack 0
   123  00004E                     	ds	2
   124  000050                     _EUSART1_FramingErrorHandler:
   125                           	opt stack 0
   126  000050                     	ds	2
   127  000052                     _EUSART1_OverrunErrorHandler:
   128                           	opt stack 0
   129  000052                     	ds	2
   130  000054                     _EUSART1_RxDefaultInterruptHandler:
   131                           	opt stack 0
   132  000054                     	ds	2
   133                           
   134                           	psect	smallconst
   135  000800                     __psmallconst:
   136                           	opt stack 0
   137  000800  00                 	db	0
   138  000801                     __stringdata:
   139                           	opt stack 0
   140  000801                     STR_1:
   141  000801  4D                 	db	77	;'M'
   142  000802  26                 	db	38
   143  000803  4D                 	db	77	;'M'
   144  000804  00                 	db	0
   145  000805                     __end_of__stringdata:
   146                           	opt stack 0
   147                           
   148                           ; #config settings
   149  000805  00                 	db	0	; dummy byte at the end
   150  0000                     
   151                           	psect	cinit
   152  001580                     __pcinit:
   153                           	opt stack 0
   154  001580                     start_initialization:
   155                           	opt stack 0
   156  001580                     __initialization:
   157                           	opt stack 0
   158                           
   159                           ; Clear objects allocated to COMRAM (25 bytes)
   160  001580  EE00  F035         	lfsr	0,__pbssCOMRAM
   161  001584  0E19               	movlw	25
   162  001586                     clear_0:
   163  001586  6AEE               	clrf	postinc0,c
   164  001588  06E8               	decf	wreg,f,c
   165  00158A  E1FD               	bnz	clear_0
   166  00158C                     end_of_initialization:
   167                           	opt stack 0
   168  00158C                     __end_of__initialization:
   169                           	opt stack 0
   170  00158C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   171  00158E  6EF8               	movwf	tblptru,c
   172  001590  0100               	movlb	0
   173  001592  EF37  F006         	goto	_main	;jump to C main() function
   174                           tblptru	equ	0xFF8
   175                           postinc0	equ	0xFEE
   176                           wreg	equ	0xFE8
   177                           
   178                           	psect	bssCOMRAM
   179  000035                     __pbssCOMRAM:
   180                           	opt stack 0
   181  000035                     _eusart1RxBuffer:
   182                           	opt stack 0
   183  000035                     	ds	8
   184  00003D                     _eusart1RxStatusBuffer:
   185                           	opt stack 0
   186  00003D                     	ds	8
   187  000045                     _flag_rx:
   188                           	opt stack 0
   189  000045                     	ds	2
   190  000047                     _timer0ReloadVal:
   191                           	opt stack 0
   192  000047                     	ds	2
   193  000049                     _dato:
   194                           	opt stack 0
   195  000049                     	ds	1
   196  00004A                     _eusart1RxCount:
   197                           	opt stack 0
   198  00004A                     	ds	1
   199  00004B                     _eusart1RxHead:
   200                           	opt stack 0
   201  00004B                     	ds	1
   202  00004C                     _eusart1RxLastError:
   203                           	opt stack 0
   204  00004C                     	ds	1
   205  00004D                     _eusart1RxTail:
   206                           	opt stack 0
   207  00004D                     	ds	1
   208                           tblptru	equ	0xFF8
   209                           postinc0	equ	0xFEE
   210                           wreg	equ	0xFE8
   211                           
   212                           	psect	cstackCOMRAM
   213  000001                     __pcstackCOMRAM:
   214                           	opt stack 0
   215  000001                     ??_alta_prioridad:
   216  000001                     
   217                           ; 1 bytes @ 0x0
   218  000001                     	ds	14
   219  00000F                     ??_Lcd_Cmd:
   220  00000F                     ??_Lcd_Chr_CP:
   221  00000F                     ??_Sound:
   222  00000F                     ?___lmul:
   223                           	opt stack 0
   224  00000F                     ?___lldiv:
   225                           	opt stack 0
   226  00000F                     OpenSPI1@bus_mode:
   227                           	opt stack 0
   228  00000F                     ReadSPI1@TempVar:
   229                           	opt stack 0
   230  00000F                     WriteSPI1@TempVar:
   231                           	opt stack 0
   232  00000F                     EUSART1_SetFramingErrorHandler@interruptHandler:
   233                           	opt stack 0
   234  00000F                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   235                           	opt stack 0
   236  00000F                     EUSART1_SetErrorHandler@interruptHandler:
   237                           	opt stack 0
   238  00000F                     EUSART1_SetRxInterruptHandler@interruptHandler:
   239                           	opt stack 0
   240  00000F                     ___lmul@multiplier:
   241                           	opt stack 0
   242  00000F                     ___lldiv@dividend:
   243                           	opt stack 0
   244                           
   245                           ; 4 bytes @ 0xE
   246  00000F                     	ds	1
   247  000010                     OpenSPI1@smp_phase:
   248                           	opt stack 0
   249  000010                     WriteSPI1@data_out:
   250                           	opt stack 0
   251                           
   252                           ; 1 bytes @ 0xF
   253  000010                     	ds	1
   254  000011                     ?_Read_Status_nRF:
   255                           	opt stack 0
   256  000011                     Lcd_Chr_CP@data:
   257                           	opt stack 0
   258  000011                     Lcd_Cmd@data:
   259                           	opt stack 0
   260  000011                     Read_Char_nRF@caracter:
   261                           	opt stack 0
   262  000011                     OpenSPI1@sync_mode:
   263                           	opt stack 0
   264                           
   265                           ; 1 bytes @ 0x10
   266  000011                     	ds	1
   267  000012                     ??_Ini_nRF:
   268  000012                     ??_Lcd_Init:
   269  000012                     Lcd_Out@x:
   270                           	opt stack 0
   271                           
   272                           ; 1 bytes @ 0x11
   273  000012                     	ds	1
   274  000013                     ??_Read_Status_nRF:
   275  000013                     Lcd_Init@data:
   276                           	opt stack 0
   277  000013                     Lcd_Out@buffer:
   278                           	opt stack 0
   279  000013                     ___lmul@multiplicand:
   280                           	opt stack 0
   281  000013                     ___lldiv@divisor:
   282                           	opt stack 0
   283                           
   284                           ; 4 bytes @ 0x12
   285  000013                     	ds	1
   286  000014                     Read_Status_nRF@state:
   287                           	opt stack 0
   288                           
   289                           ; 2 bytes @ 0x13
   290  000014                     	ds	1
   291  000015                     Lcd_Out@y:
   292                           	opt stack 0
   293                           
   294                           ; 1 bytes @ 0x14
   295  000015                     	ds	1
   296  000016                     Lcd_Out@data:
   297                           	opt stack 0
   298                           
   299                           ; 1 bytes @ 0x15
   300  000016                     	ds	1
   301  000017                     ___lmul@product:
   302                           	opt stack 0
   303  000017                     ___lldiv@quotient:
   304                           	opt stack 0
   305                           
   306                           ; 4 bytes @ 0x16
   307  000017                     	ds	4
   308  00001B                     ___lldiv@counter:
   309                           	opt stack 0
   310                           
   311                           ; 1 bytes @ 0x1A
   312  00001B                     	ds	1
   313  00001C                     PWM_CCP1@duty:
   314                           	opt stack 0
   315  00001C                     PWM_CCP2@duty:
   316                           	opt stack 0
   317                           
   318                           ; 2 bytes @ 0x1B
   319  00001C                     	ds	2
   320  00001E                     PWM_CCP1@fpwm:
   321                           	opt stack 0
   322  00001E                     PWM_CCP2@fpwm:
   323                           	opt stack 0
   324                           
   325                           ; 2 bytes @ 0x1D
   326  00001E                     	ds	2
   327  000020                     ??_PWM_CCP1:
   328  000020                     ??_PWM_CCP2:
   329                           
   330                           ; 0 bytes @ 0x1F
   331  000020                     	ds	4
   332  000024                     PWM_CCP1@prescalador:
   333                           	opt stack 0
   334  000024                     PWM_CCP2@prescalador:
   335                           	opt stack 0
   336                           
   337                           ; 2 bytes @ 0x23
   338  000024                     	ds	2
   339  000026                     PWM_CCP1@AuxCCP2CON:
   340                           	opt stack 0
   341  000026                     PWM_CCP2@AuxCCP2CON:
   342                           	opt stack 0
   343                           
   344                           ; 2 bytes @ 0x25
   345  000026                     	ds	2
   346  000028                     PWM_CCP1@PR2cal:
   347                           	opt stack 0
   348  000028                     PWM_CCP2@PR2cal:
   349                           	opt stack 0
   350                           
   351                           ; 4 bytes @ 0x27
   352  000028                     	ds	4
   353  00002C                     PWM_CCP1@AuxCCPR2L:
   354                           	opt stack 0
   355  00002C                     PWM_CCP2@AuxCCPR2L:
   356                           	opt stack 0
   357                           
   358                           ; 4 bytes @ 0x2B
   359  00002C                     	ds	4
   360  000030                     ??_main:
   361                           
   362                           ; 0 bytes @ 0x2F
   363  000030                     	ds	2
   364  000032                     main@nrf24:
   365                           	opt stack 0
   366                           
   367                           ; 1 bytes @ 0x31
   368  000032                     	ds	1
   369  000033                     main@status:
   370                           	opt stack 0
   371                           
   372                           ; 2 bytes @ 0x32
   373  000033                     	ds	2
   374                           tblptru	equ	0xFF8
   375                           postinc0	equ	0xFEE
   376                           wreg	equ	0xFE8
   377                           
   378 ;;
   379 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   380 ;;
   381 ;; *************** function _main *****************
   382 ;; Defined at:
   383 ;;		line 76 in file "main.c"
   384 ;; Parameters:    Size  Location     Type
   385 ;;		None
   386 ;; Auto vars:     Size  Location     Type
   387 ;;  data           10    0        unsigned char [10]
   388 ;;  status          2   50[COMRAM] int 
   389 ;;  dis             2    0        int 
   390 ;;  w               2    0        int 
   391 ;;  nrf24           1   49[COMRAM] unsigned char 
   392 ;; Return value:  Size  Location     Type
   393 ;;		None               void
   394 ;; Registers used:
   395 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   396 ;; Tracked objects:
   397 ;;		On entry : 0/0
   398 ;;		On exit  : 0/0
   399 ;;		Unchanged: 0/0
   400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   401 ;;      Params:         0       0       0       0       0       0       0       0       0
   402 ;;      Locals:         3       0       0       0       0       0       0       0       0
   403 ;;      Temps:          2       0       0       0       0       0       0       0       0
   404 ;;      Totals:         5       0       0       0       0       0       0       0       0
   405 ;;Total ram usage:        5 bytes
   406 ;; Hardware stack levels required when called:    4
   407 ;; This function calls:
   408 ;;		_Derecho
   409 ;;		_FlushRx_nRF
   410 ;;		_Ini_nRF
   411 ;;		_Lcd_Cmd
   412 ;;		_Lcd_Init
   413 ;;		_Lcd_Out
   414 ;;		_RXmod_nRF
   415 ;;		_Read_Char_nRF
   416 ;;		_Read_Status_nRF
   417 ;;		_Reversa
   418 ;;		_SYSTEM_Initialize
   419 ;;		_Stop
   420 ;;		_velocidad_1
   421 ;;		_velocidad_2
   422 ;;		_velocidad_3
   423 ;; This function is called by:
   424 ;;		Startup code after reset
   425 ;; This function uses a non-reentrant model
   426 ;;
   427                           
   428                           	psect	text0
   429  000C6E                     __ptext0:
   430                           	opt stack 0
   431  000C6E                     _main:
   432                           	opt stack 27
   433                           
   434                           ;main.c: 79: SYSTEM_Initialize();
   435                           
   436                           ;incstack = 0
   437  000C6E  ECCB  F00A         	call	_SYSTEM_Initialize	;wreg free
   438                           
   439                           ;main.c: 80: Lcd_Init();
   440  000C72  ECCF  F006         	call	_Lcd_Init	;wreg free
   441                           
   442                           ;main.c: 86: (INTCONbits.GIE = 1);
   443  000C76  8EF2               	bsf	intcon,7,c	;volatile
   444                           
   445                           ;main.c: 92: (INTCONbits.PEIE = 1);
   446  000C78  8CF2               	bsf	intcon,6,c	;volatile
   447                           
   448                           ;main.c: 97: int w;
   449                           ;main.c: 98: char data[10],nrf24;
   450                           ;main.c: 99: int dis,status;
   451                           ;main.c: 100: Lcd_Cmd(12);
   452  000C7A  0E0C               	movlw	12
   453  000C7C  ECFC  F007         	call	_Lcd_Cmd
   454                           
   455                           ;main.c: 101: Lcd_Out(1,1,"M&M");
   456  000C80  0E01               	movlw	1
   457  000C82  6E12               	movwf	Lcd_Out@x,c
   458  000C84  0E08               	movlw	high STR_1
   459  000C86  6E14               	movwf	Lcd_Out@buffer+1,c
   460  000C88  0E01               	movlw	low STR_1
   461  000C8A  6E13               	movwf	Lcd_Out@buffer,c
   462  000C8C  0E01               	movlw	1
   463  000C8E  EC3B  F009         	call	_Lcd_Out
   464                           
   465                           ;main.c: 102: Ini_nRF();
   466  000C92  EC8F  F008         	call	_Ini_nRF	;wreg free
   467                           
   468                           ;main.c: 103: _delay((unsigned long)((100)*(4000000/4000.0)));
   469  000C96  0E82               	movlw	130
   470  000C98  6E30               	movwf	??_main& (0+255),c
   471  000C9A  0EDE               	movlw	222
   472  000C9C                     u497:
   473  000C9C  2EE8               	decfsz	wreg,f,c
   474  000C9E  D7FE               	goto	u497
   475  000CA0  2E30               	decfsz	??_main& (0+255),f,c
   476  000CA2  D7FC               	goto	u497
   477                           
   478                           ;main.c: 104: RXmod_nRF();
   479  000CA4  EC82  F00A         	call	_RXmod_nRF	;wreg free
   480                           
   481                           ;main.c: 105: _delay((unsigned long)((100)*(4000000/4000.0)));
   482  000CA8  0E82               	movlw	130
   483  000CAA  6E30               	movwf	??_main& (0+255),c
   484  000CAC  0EDE               	movlw	222
   485  000CAE                     u507:
   486  000CAE  2EE8               	decfsz	wreg,f,c
   487  000CB0  D7FE               	goto	u507
   488  000CB2  2E30               	decfsz	??_main& (0+255),f,c
   489  000CB4  D7FC               	goto	u507
   490                           
   491                           ;main.c: 106: FlushRx_nRF();
   492  000CB6  ECED  F00A         	call	_FlushRx_nRF	;wreg free
   493  000CBA                     l1881:
   494                           
   495                           ;main.c: 108: {
   496                           ;main.c: 152: status=Read_Status_nRF();
   497  000CBA  EC6E  F00A         	call	_Read_Status_nRF	;wreg free
   498  000CBE  C011  F033         	movff	?_Read_Status_nRF,main@status
   499  000CC2  C012  F034         	movff	?_Read_Status_nRF+1,main@status+1
   500                           
   501                           ;main.c: 153: if(status){FlushRx_nRF();_delay((unsigned long)((100)*(4000000/4000.0))); 
      +                          _delay((unsigned long)((100)*(4000000/4000.0))); _delay((unsigned long)((100)*(4000000/4
      +                          000.0))); _delay((unsigned long)((100)*(4000000/4000.0))); _delay((unsigned long)((100)*
   502  000CC6  5034               	movf	main@status+1,w,c
   503  000CC8  1033               	iorwf	main@status,w,c
   504  000CCA  B4D8               	btfsc	status,2,c
   505  000CCC  D033               	goto	l1901
   506  000CCE  ECED  F00A         	call	_FlushRx_nRF	;wreg free
   507  000CD2  0E82               	movlw	130
   508  000CD4  6E30               	movwf	??_main& (0+255),c
   509  000CD6  0EDE               	movlw	222
   510  000CD8                     u517:
   511  000CD8  2EE8               	decfsz	wreg,f,c
   512  000CDA  D7FE               	goto	u517
   513  000CDC  2E30               	decfsz	??_main& (0+255),f,c
   514  000CDE  D7FC               	goto	u517
   515  000CE0  0E82               	movlw	130
   516  000CE2  6E30               	movwf	??_main& (0+255),c
   517  000CE4  0EDE               	movlw	222
   518  000CE6                     u527:
   519  000CE6  2EE8               	decfsz	wreg,f,c
   520  000CE8  D7FE               	goto	u527
   521  000CEA  2E30               	decfsz	??_main& (0+255),f,c
   522  000CEC  D7FC               	goto	u527
   523  000CEE  0E82               	movlw	130
   524  000CF0  6E30               	movwf	??_main& (0+255),c
   525  000CF2  0EDE               	movlw	222
   526  000CF4                     u537:
   527  000CF4  2EE8               	decfsz	wreg,f,c
   528  000CF6  D7FE               	goto	u537
   529  000CF8  2E30               	decfsz	??_main& (0+255),f,c
   530  000CFA  D7FC               	goto	u537
   531  000CFC  0E82               	movlw	130
   532  000CFE  6E30               	movwf	??_main& (0+255),c
   533  000D00  0EDE               	movlw	222
   534  000D02                     u547:
   535  000D02  2EE8               	decfsz	wreg,f,c
   536  000D04  D7FE               	goto	u547
   537  000D06  2E30               	decfsz	??_main& (0+255),f,c
   538  000D08  D7FC               	goto	u547
   539  000D0A  0E82               	movlw	130
   540  000D0C  6E30               	movwf	??_main& (0+255),c
   541  000D0E  0EDE               	movlw	222
   542  000D10                     u557:
   543  000D10  2EE8               	decfsz	wreg,f,c
   544  000D12  D7FE               	goto	u557
   545  000D14  2E30               	decfsz	??_main& (0+255),f,c
   546  000D16  D7FC               	goto	u557
   547  000D18  0E82               	movlw	130
   548  000D1A  6E30               	movwf	??_main& (0+255),c
   549  000D1C  0EDE               	movlw	222
   550  000D1E                     u567:
   551  000D1E  2EE8               	decfsz	wreg,f,c
   552  000D20  D7FE               	goto	u567
   553  000D22  2E30               	decfsz	??_main& (0+255),f,c
   554  000D24  D7FC               	goto	u567
   555  000D26  0E82               	movlw	130
   556  000D28  6E30               	movwf	??_main& (0+255),c
   557  000D2A  0EDE               	movlw	222
   558  000D2C                     u577:
   559  000D2C  2EE8               	decfsz	wreg,f,c
   560  000D2E  D7FE               	goto	u577
   561  000D30  2E30               	decfsz	??_main& (0+255),f,c
   562  000D32  D7FC               	goto	u577
   563  000D34                     l1901:
   564                           
   565                           ;main.c: 154: nrf24=Read_Char_nRF();
   566  000D34  ECA7  F00A         	call	_Read_Char_nRF	;wreg free
   567  000D38  6E32               	movwf	main@nrf24,c
   568                           
   569                           ;main.c: 155: switch(status)
   570  000D3A  D015               	goto	l1919
   571  000D3C                     l1903:
   572  000D3C  EC07  F00B         	call	_Derecho	;wreg free
   573  000D40  D7BC               	goto	l1881
   574  000D42                     l1905:
   575  000D42  ECE6  F00A         	call	_Reversa	;wreg free
   576  000D46  D7B9               	goto	l1881
   577  000D48                     l1907:
   578  000D48  EC59  F00A         	call	_velocidad_1	;wreg free
   579  000D4C  D7B6               	goto	l1881
   580  000D4E                     l1909:
   581  000D4E  EC44  F00A         	call	_velocidad_2	;wreg free
   582  000D52  D7B3               	goto	l1881
   583  000D54                     l1911:
   584  000D54  EC2F  F00A         	call	_velocidad_3	;wreg free
   585  000D58  D7B0               	goto	l1881
   586  000D5A                     l1913:
   587  000D5A  EC16  F00A         	call	_Stop	;wreg free
   588  000D5E  D7AD               	goto	l1881
   589  000D60                     l1915:
   590  000D60  EC16  F00A         	call	_Stop	;wreg free
   591  000D64  D7AA               	goto	l1881
   592  000D66                     l1919:
   593  000D66  C033  F030         	movff	main@status,??_main
   594  000D6A  C034  F031         	movff	main@status+1,??_main+1
   595                           
   596                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   597                           ; Switch size 1, requested type "space"
   598                           ; Number of cases is 1, Range of values is 0 to 0
   599                           ; switch strategies available:
   600                           ; Name         Instructions Cycles
   601                           ; simple_byte            4     3 (average)
   602                           ;	Chosen strategy is simple_byte
   603  000D6E  5031               	movf	??_main+1,w,c
   604  000D70  0A00               	xorlw	0	; case 0
   605  000D72  A4D8               	btfss	status,2,c
   606  000D74  D7F5               	goto	l1915
   607                           
   608                           ; Switch size 1, requested type "space"
   609                           ; Number of cases is 6, Range of values is 49 to 115
   610                           ; switch strategies available:
   611                           ; Name         Instructions Cycles
   612                           ; simple_byte           19    10 (average)
   613                           ;	Chosen strategy is simple_byte
   614  000D76  5030               	movf	??_main,w,c
   615  000D78  0A31               	xorlw	49	; case 49
   616  000D7A  B4D8               	btfsc	status,2,c
   617  000D7C  D7E5               	goto	l1907
   618  000D7E  0A03               	xorlw	3	; case 50
   619  000D80  B4D8               	btfsc	status,2,c
   620  000D82  D7E5               	goto	l1909
   621  000D84  0A01               	xorlw	1	; case 51
   622  000D86  B4D8               	btfsc	status,2,c
   623  000D88  D7E5               	goto	l1911
   624  000D8A  0A52               	xorlw	82	; case 97
   625  000D8C  B4D8               	btfsc	status,2,c
   626  000D8E  D7D6               	goto	l1903
   627  000D90  0A03               	xorlw	3	; case 98
   628  000D92  B4D8               	btfsc	status,2,c
   629  000D94  D7D6               	goto	l1905
   630  000D96  0A11               	xorlw	17	; case 115
   631  000D98  B4D8               	btfsc	status,2,c
   632  000D9A  D7DF               	goto	l1913
   633  000D9C  D7E1               	goto	l1915
   634  000D9E                     __end_of_main:
   635                           	opt stack 0
   636                           tblptru	equ	0xFF8
   637                           intcon	equ	0xFF2
   638                           postinc0	equ	0xFEE
   639                           wreg	equ	0xFE8
   640                           status	equ	0xFD8
   641                           
   642 ;; *************** function _velocidad_3 *****************
   643 ;; Defined at:
   644 ;;		line 224 in file "main.c"
   645 ;; Parameters:    Size  Location     Type
   646 ;;		None
   647 ;; Auto vars:     Size  Location     Type
   648 ;;		None
   649 ;; Return value:  Size  Location     Type
   650 ;;		None               void
   651 ;; Registers used:
   652 ;;		wreg, status,2, status,0, cstack
   653 ;; Tracked objects:
   654 ;;		On entry : 0/0
   655 ;;		On exit  : 0/0
   656 ;;		Unchanged: 0/0
   657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   658 ;;      Params:         0       0       0       0       0       0       0       0       0
   659 ;;      Locals:         0       0       0       0       0       0       0       0       0
   660 ;;      Temps:          0       0       0       0       0       0       0       0       0
   661 ;;      Totals:         0       0       0       0       0       0       0       0       0
   662 ;;Total ram usage:        0 bytes
   663 ;; Hardware stack levels used:    1
   664 ;; Hardware stack levels required when called:    3
   665 ;; This function calls:
   666 ;;		_PWM_CCP1
   667 ;;		_PWM_CCP2
   668 ;; This function is called by:
   669 ;;		_main
   670 ;; This function uses a non-reentrant model
   671 ;;
   672                           
   673                           	psect	text1
   674  00145E                     __ptext1:
   675                           	opt stack 0
   676  00145E                     _velocidad_3:
   677                           	opt stack 27
   678                           
   679                           ;main.c: 225: PWM_CCP1(99,1000);
   680                           
   681                           ;incstack = 0
   682  00145E  0E00               	movlw	0
   683  001460  6E1D               	movwf	PWM_CCP1@duty+1,c
   684  001462  0E63               	movlw	99
   685  001464  6E1C               	movwf	PWM_CCP1@duty,c
   686  001466  0E03               	movlw	3
   687  001468  6E1F               	movwf	PWM_CCP1@fpwm+1,c
   688  00146A  0EE8               	movlw	232
   689  00146C  6E1E               	movwf	PWM_CCP1@fpwm,c
   690  00146E  EC1D  F005         	call	_PWM_CCP1	;wreg free
   691                           
   692                           ;main.c: 226: PWM_CCP2(99,1000);
   693  001472  0E00               	movlw	0
   694  001474  6E1D               	movwf	PWM_CCP2@duty+1,c
   695  001476  0E63               	movlw	99
   696  001478  6E1C               	movwf	PWM_CCP2@duty,c
   697  00147A  0E03               	movlw	3
   698  00147C  6E1F               	movwf	PWM_CCP2@fpwm+1,c
   699  00147E  0EE8               	movlw	232
   700  001480  6E1E               	movwf	PWM_CCP2@fpwm,c
   701  001482  EC03  F004         	call	_PWM_CCP2	;wreg free
   702  001486  0012               	return	
   703  001488                     __end_of_velocidad_3:
   704                           	opt stack 0
   705                           tblptru	equ	0xFF8
   706                           intcon	equ	0xFF2
   707                           postinc0	equ	0xFEE
   708                           wreg	equ	0xFE8
   709                           status	equ	0xFD8
   710                           
   711 ;; *************** function _velocidad_2 *****************
   712 ;; Defined at:
   713 ;;		line 220 in file "main.c"
   714 ;; Parameters:    Size  Location     Type
   715 ;;		None
   716 ;; Auto vars:     Size  Location     Type
   717 ;;		None
   718 ;; Return value:  Size  Location     Type
   719 ;;		None               void
   720 ;; Registers used:
   721 ;;		wreg, status,2, status,0, cstack
   722 ;; Tracked objects:
   723 ;;		On entry : 0/0
   724 ;;		On exit  : 0/0
   725 ;;		Unchanged: 0/0
   726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   727 ;;      Params:         0       0       0       0       0       0       0       0       0
   728 ;;      Locals:         0       0       0       0       0       0       0       0       0
   729 ;;      Temps:          0       0       0       0       0       0       0       0       0
   730 ;;      Totals:         0       0       0       0       0       0       0       0       0
   731 ;;Total ram usage:        0 bytes
   732 ;; Hardware stack levels used:    1
   733 ;; Hardware stack levels required when called:    3
   734 ;; This function calls:
   735 ;;		_PWM_CCP1
   736 ;;		_PWM_CCP2
   737 ;; This function is called by:
   738 ;;		_main
   739 ;; This function uses a non-reentrant model
   740 ;;
   741                           
   742                           	psect	text2
   743  001488                     __ptext2:
   744                           	opt stack 0
   745  001488                     _velocidad_2:
   746                           	opt stack 27
   747                           
   748                           ;main.c: 221: PWM_CCP1(50,1000);
   749                           
   750                           ;incstack = 0
   751  001488  0E00               	movlw	0
   752  00148A  6E1D               	movwf	PWM_CCP1@duty+1,c
   753  00148C  0E32               	movlw	50
   754  00148E  6E1C               	movwf	PWM_CCP1@duty,c
   755  001490  0E03               	movlw	3
   756  001492  6E1F               	movwf	PWM_CCP1@fpwm+1,c
   757  001494  0EE8               	movlw	232
   758  001496  6E1E               	movwf	PWM_CCP1@fpwm,c
   759  001498  EC1D  F005         	call	_PWM_CCP1	;wreg free
   760                           
   761                           ;main.c: 222: PWM_CCP2(50,1000);
   762  00149C  0E00               	movlw	0
   763  00149E  6E1D               	movwf	PWM_CCP2@duty+1,c
   764  0014A0  0E32               	movlw	50
   765  0014A2  6E1C               	movwf	PWM_CCP2@duty,c
   766  0014A4  0E03               	movlw	3
   767  0014A6  6E1F               	movwf	PWM_CCP2@fpwm+1,c
   768  0014A8  0EE8               	movlw	232
   769  0014AA  6E1E               	movwf	PWM_CCP2@fpwm,c
   770  0014AC  EC03  F004         	call	_PWM_CCP2	;wreg free
   771  0014B0  0012               	return	
   772  0014B2                     __end_of_velocidad_2:
   773                           	opt stack 0
   774                           tblptru	equ	0xFF8
   775                           intcon	equ	0xFF2
   776                           postinc0	equ	0xFEE
   777                           wreg	equ	0xFE8
   778                           status	equ	0xFD8
   779                           
   780 ;; *************** function _velocidad_1 *****************
   781 ;; Defined at:
   782 ;;		line 216 in file "main.c"
   783 ;; Parameters:    Size  Location     Type
   784 ;;		None
   785 ;; Auto vars:     Size  Location     Type
   786 ;;		None
   787 ;; Return value:  Size  Location     Type
   788 ;;		None               void
   789 ;; Registers used:
   790 ;;		wreg, status,2, status,0, cstack
   791 ;; Tracked objects:
   792 ;;		On entry : 0/0
   793 ;;		On exit  : 0/0
   794 ;;		Unchanged: 0/0
   795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   796 ;;      Params:         0       0       0       0       0       0       0       0       0
   797 ;;      Locals:         0       0       0       0       0       0       0       0       0
   798 ;;      Temps:          0       0       0       0       0       0       0       0       0
   799 ;;      Totals:         0       0       0       0       0       0       0       0       0
   800 ;;Total ram usage:        0 bytes
   801 ;; Hardware stack levels used:    1
   802 ;; Hardware stack levels required when called:    3
   803 ;; This function calls:
   804 ;;		_PWM_CCP1
   805 ;;		_PWM_CCP2
   806 ;; This function is called by:
   807 ;;		_main
   808 ;; This function uses a non-reentrant model
   809 ;;
   810                           
   811                           	psect	text3
   812  0014B2                     __ptext3:
   813                           	opt stack 0
   814  0014B2                     _velocidad_1:
   815                           	opt stack 27
   816                           
   817                           ;main.c: 217: PWM_CCP1(30,1000);
   818                           
   819                           ;incstack = 0
   820  0014B2  0E00               	movlw	0
   821  0014B4  6E1D               	movwf	PWM_CCP1@duty+1,c
   822  0014B6  0E1E               	movlw	30
   823  0014B8  6E1C               	movwf	PWM_CCP1@duty,c
   824  0014BA  0E03               	movlw	3
   825  0014BC  6E1F               	movwf	PWM_CCP1@fpwm+1,c
   826  0014BE  0EE8               	movlw	232
   827  0014C0  6E1E               	movwf	PWM_CCP1@fpwm,c
   828  0014C2  EC1D  F005         	call	_PWM_CCP1	;wreg free
   829                           
   830                           ;main.c: 218: PWM_CCP2(30,1000);
   831  0014C6  0E00               	movlw	0
   832  0014C8  6E1D               	movwf	PWM_CCP2@duty+1,c
   833  0014CA  0E1E               	movlw	30
   834  0014CC  6E1C               	movwf	PWM_CCP2@duty,c
   835  0014CE  0E03               	movlw	3
   836  0014D0  6E1F               	movwf	PWM_CCP2@fpwm+1,c
   837  0014D2  0EE8               	movlw	232
   838  0014D4  6E1E               	movwf	PWM_CCP2@fpwm,c
   839  0014D6  EC03  F004         	call	_PWM_CCP2	;wreg free
   840  0014DA  0012               	return	
   841  0014DC                     __end_of_velocidad_1:
   842                           	opt stack 0
   843                           tblptru	equ	0xFF8
   844                           intcon	equ	0xFF2
   845                           postinc0	equ	0xFEE
   846                           wreg	equ	0xFE8
   847                           status	equ	0xFD8
   848                           
   849 ;; *************** function _Stop *****************
   850 ;; Defined at:
   851 ;;		line 228 in file "main.c"
   852 ;; Parameters:    Size  Location     Type
   853 ;;		None
   854 ;; Auto vars:     Size  Location     Type
   855 ;;		None
   856 ;; Return value:  Size  Location     Type
   857 ;;		None               void
   858 ;; Registers used:
   859 ;;		wreg, status,2, status,0, cstack
   860 ;; Tracked objects:
   861 ;;		On entry : 0/0
   862 ;;		On exit  : 0/0
   863 ;;		Unchanged: 0/0
   864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   865 ;;      Params:         0       0       0       0       0       0       0       0       0
   866 ;;      Locals:         0       0       0       0       0       0       0       0       0
   867 ;;      Temps:          0       0       0       0       0       0       0       0       0
   868 ;;      Totals:         0       0       0       0       0       0       0       0       0
   869 ;;Total ram usage:        0 bytes
   870 ;; Hardware stack levels used:    1
   871 ;; Hardware stack levels required when called:    3
   872 ;; This function calls:
   873 ;;		_PWM_CCP1
   874 ;;		_PWM_CCP2
   875 ;; This function is called by:
   876 ;;		_main
   877 ;; This function uses a non-reentrant model
   878 ;;
   879                           
   880                           	psect	text4
   881  00142C                     __ptext4:
   882                           	opt stack 0
   883  00142C                     _Stop:
   884                           	opt stack 27
   885                           
   886                           ;main.c: 230: PWM_CCP1(0,1000);
   887                           
   888                           ;incstack = 0
   889  00142C  0E00               	movlw	0
   890  00142E  6E1D               	movwf	PWM_CCP1@duty+1,c
   891  001430  0E00               	movlw	0
   892  001432  6E1C               	movwf	PWM_CCP1@duty,c
   893  001434  0E03               	movlw	3
   894  001436  6E1F               	movwf	PWM_CCP1@fpwm+1,c
   895  001438  0EE8               	movlw	232
   896  00143A  6E1E               	movwf	PWM_CCP1@fpwm,c
   897  00143C  EC1D  F005         	call	_PWM_CCP1	;wreg free
   898                           
   899                           ;main.c: 231: PWM_CCP2(0,1000);
   900  001440  0E00               	movlw	0
   901  001442  6E1D               	movwf	PWM_CCP2@duty+1,c
   902  001444  0E00               	movlw	0
   903  001446  6E1C               	movwf	PWM_CCP2@duty,c
   904  001448  0E03               	movlw	3
   905  00144A  6E1F               	movwf	PWM_CCP2@fpwm+1,c
   906  00144C  0EE8               	movlw	232
   907  00144E  6E1E               	movwf	PWM_CCP2@fpwm,c
   908  001450  EC03  F004         	call	_PWM_CCP2	;wreg free
   909                           
   910                           ;main.c: 232: LATBbits.LATB2=0;
   911  001454  948A               	bcf	3978,2,c	;volatile
   912                           
   913                           ;main.c: 233: LATBbits.LATB3=0;
   914  001456  968A               	bcf	3978,3,c	;volatile
   915                           
   916                           ;main.c: 234: LATBbits.LATB4=0;
   917  001458  988A               	bcf	3978,4,c	;volatile
   918                           
   919                           ;main.c: 235: LATBbits.LATB5=0;
   920  00145A  9A8A               	bcf	3978,5,c	;volatile
   921  00145C  0012               	return	
   922  00145E                     __end_of_Stop:
   923                           	opt stack 0
   924                           tblptru	equ	0xFF8
   925                           intcon	equ	0xFF2
   926                           postinc0	equ	0xFEE
   927                           wreg	equ	0xFE8
   928                           status	equ	0xFD8
   929                           
   930 ;; *************** function _PWM_CCP2 *****************
   931 ;; Defined at:
   932 ;;		line 55 in file "PWM.c"
   933 ;; Parameters:    Size  Location     Type
   934 ;;  duty            2   27[COMRAM] unsigned int 
   935 ;;  fpwm            2   29[COMRAM] unsigned int 
   936 ;; Auto vars:     Size  Location     Type
   937 ;;  AuxCCPR2L       4   43[COMRAM] unsigned long 
   938 ;;  PR2cal          4   39[COMRAM] unsigned long 
   939 ;;  AuxCCP2CON      2   37[COMRAM] unsigned int 
   940 ;;  prescalador     2   35[COMRAM] unsigned int 
   941 ;; Return value:  Size  Location     Type
   942 ;;		None               void
   943 ;; Registers used:
   944 ;;		wreg, status,2, status,0, cstack
   945 ;; Tracked objects:
   946 ;;		On entry : 0/0
   947 ;;		On exit  : 0/0
   948 ;;		Unchanged: 0/0
   949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   950 ;;      Params:         4       0       0       0       0       0       0       0       0
   951 ;;      Locals:        12       0       0       0       0       0       0       0       0
   952 ;;      Temps:          4       0       0       0       0       0       0       0       0
   953 ;;      Totals:        20       0       0       0       0       0       0       0       0
   954 ;;Total ram usage:       20 bytes
   955 ;; Hardware stack levels used:    1
   956 ;; Hardware stack levels required when called:    2
   957 ;; This function calls:
   958 ;;		___lldiv
   959 ;;		___lmul
   960 ;; This function is called by:
   961 ;;		_velocidad_1
   962 ;;		_velocidad_2
   963 ;;		_velocidad_3
   964 ;;		_Stop
   965 ;;		_Giro
   966 ;; This function uses a non-reentrant model
   967 ;;
   968                           
   969                           	psect	text5
   970  000806                     __ptext5:
   971                           	opt stack 0
   972  000806                     _PWM_CCP2:
   973                           	opt stack 27
   974                           
   975                           ;PWM.c: 62: TRISCbits.RC1=0;
   976                           
   977                           ;incstack = 0
   978  000806  9294               	bcf	3988,1,c	;volatile
   979                           
   980                           ;PWM.c: 63: ANSELC=0;
   981  000808  0E00               	movlw	0
   982  00080A  010F               	movlb	15	; () banked
   983  00080C  6F5D               	movwf	93,b	;volatile
   984                           
   985                           ;PWM.c: 64: unsigned int prescalador=1;
   986  00080E  0E00               	movlw	0
   987  000810  6E25               	movwf	PWM_CCP2@prescalador+1,c
   988  000812  0E01               	movlw	1
   989  000814  6E24               	movwf	PWM_CCP2@prescalador,c
   990                           
   991                           ;PWM.c: 65: unsigned long PR2cal=4000000;
   992  000816  0E00               	movlw	0
   993  000818  6E28               	movwf	PWM_CCP2@PR2cal,c
   994  00081A  0E09               	movlw	9
   995  00081C  6E29               	movwf	PWM_CCP2@PR2cal+1,c
   996  00081E  0E3D               	movlw	61
   997  000820  6E2A               	movwf	PWM_CCP2@PR2cal+2,c
   998  000822  0E00               	movlw	0
   999  000824  6E2B               	movwf	PWM_CCP2@PR2cal+3,c
  1000                           
  1001                           ; BSR set to: 15
  1002                           ;PWM.c: 66: PR2cal=PR2cal/fpwm;
  1003  000826  C028  F00F         	movff	PWM_CCP2@PR2cal,___lldiv@dividend
  1004  00082A  C029  F010         	movff	PWM_CCP2@PR2cal+1,___lldiv@dividend+1
  1005  00082E  C02A  F011         	movff	PWM_CCP2@PR2cal+2,___lldiv@dividend+2
  1006  000832  C02B  F012         	movff	PWM_CCP2@PR2cal+3,___lldiv@dividend+3
  1007  000836  C01E  F013         	movff	PWM_CCP2@fpwm,___lldiv@divisor
  1008  00083A  C01F  F014         	movff	PWM_CCP2@fpwm+1,___lldiv@divisor+1
  1009  00083E  6A15               	clrf	___lldiv@divisor+2,c
  1010  000840  6A16               	clrf	___lldiv@divisor+3,c
  1011  000842  ECFA  F008         	call	___lldiv	;wreg free
  1012  000846  C00F  F028         	movff	?___lldiv,PWM_CCP2@PR2cal
  1013  00084A  C010  F029         	movff	?___lldiv+1,PWM_CCP2@PR2cal+1
  1014  00084E  C011  F02A         	movff	?___lldiv+2,PWM_CCP2@PR2cal+2
  1015  000852  C012  F02B         	movff	?___lldiv+3,PWM_CCP2@PR2cal+3
  1016                           
  1017                           ;PWM.c: 67: PR2cal=PR2cal/4;
  1018  000856  C028  F020         	movff	PWM_CCP2@PR2cal,??_PWM_CCP2
  1019  00085A  C029  F021         	movff	PWM_CCP2@PR2cal+1,??_PWM_CCP2+1
  1020  00085E  C02A  F022         	movff	PWM_CCP2@PR2cal+2,??_PWM_CCP2+2
  1021  000862  C02B  F023         	movff	PWM_CCP2@PR2cal+3,??_PWM_CCP2+3
  1022  000866  0E03               	movlw	3
  1023  000868  D005               	goto	u170
  1024  00086A                     u175:
  1025  00086A  90D8               	bcf	status,0,c
  1026  00086C  3223               	rrcf	??_PWM_CCP2+3,f,c
  1027  00086E  3222               	rrcf	??_PWM_CCP2+2,f,c
  1028  000870  3221               	rrcf	??_PWM_CCP2+1,f,c
  1029  000872  3220               	rrcf	??_PWM_CCP2,f,c
  1030  000874                     u170:
  1031  000874  2EE8               	decfsz	wreg,f,c
  1032  000876  D7F9               	goto	u175
  1033  000878  C020  F028         	movff	??_PWM_CCP2,PWM_CCP2@PR2cal
  1034  00087C  C021  F029         	movff	??_PWM_CCP2+1,PWM_CCP2@PR2cal+1
  1035  000880  C022  F02A         	movff	??_PWM_CCP2+2,PWM_CCP2@PR2cal+2
  1036  000884  C023  F02B         	movff	??_PWM_CCP2+3,PWM_CCP2@PR2cal+3
  1037                           
  1038                           ;PWM.c: 68: T2CON=0b00000000;
  1039  000888  0E00               	movlw	0
  1040  00088A  6EBA               	movwf	4026,c	;volatile
  1041                           
  1042                           ;PWM.c: 69: while(PR2cal>256){
  1043  00088C  D028               	goto	l1351
  1044  00088E                     l1347:
  1045                           
  1046                           ;PWM.c: 70: prescalador=prescalador*4;
  1047  00088E  C024  F020         	movff	PWM_CCP2@prescalador,??_PWM_CCP2
  1048  000892  C025  F021         	movff	PWM_CCP2@prescalador+1,??_PWM_CCP2+1
  1049  000896  90D8               	bcf	status,0,c
  1050  000898  3620               	rlcf	??_PWM_CCP2,f,c
  1051  00089A  3621               	rlcf	??_PWM_CCP2+1,f,c
  1052  00089C  90D8               	bcf	status,0,c
  1053  00089E  3620               	rlcf	??_PWM_CCP2,f,c
  1054  0008A0  3621               	rlcf	??_PWM_CCP2+1,f,c
  1055  0008A2  C020  F024         	movff	??_PWM_CCP2,PWM_CCP2@prescalador
  1056  0008A6  C021  F025         	movff	??_PWM_CCP2+1,PWM_CCP2@prescalador+1
  1057                           
  1058                           ;PWM.c: 71: T2CON++;
  1059  0008AA  2ABA               	incf	4026,f,c	;volatile
  1060                           
  1061                           ;PWM.c: 72: PR2cal=PR2cal/4;
  1062  0008AC  C028  F020         	movff	PWM_CCP2@PR2cal,??_PWM_CCP2
  1063  0008B0  C029  F021         	movff	PWM_CCP2@PR2cal+1,??_PWM_CCP2+1
  1064  0008B4  C02A  F022         	movff	PWM_CCP2@PR2cal+2,??_PWM_CCP2+2
  1065  0008B8  C02B  F023         	movff	PWM_CCP2@PR2cal+3,??_PWM_CCP2+3
  1066  0008BC  0E03               	movlw	3
  1067  0008BE  D005               	goto	u180
  1068  0008C0                     u185:
  1069  0008C0  90D8               	bcf	status,0,c
  1070  0008C2  3223               	rrcf	??_PWM_CCP2+3,f,c
  1071  0008C4  3222               	rrcf	??_PWM_CCP2+2,f,c
  1072  0008C6  3221               	rrcf	??_PWM_CCP2+1,f,c
  1073  0008C8  3220               	rrcf	??_PWM_CCP2,f,c
  1074  0008CA                     u180:
  1075  0008CA  2EE8               	decfsz	wreg,f,c
  1076  0008CC  D7F9               	goto	u185
  1077  0008CE  C020  F028         	movff	??_PWM_CCP2,PWM_CCP2@PR2cal
  1078  0008D2  C021  F029         	movff	??_PWM_CCP2+1,PWM_CCP2@PR2cal+1
  1079  0008D6  C022  F02A         	movff	??_PWM_CCP2+2,PWM_CCP2@PR2cal+2
  1080  0008DA  C023  F02B         	movff	??_PWM_CCP2+3,PWM_CCP2@PR2cal+3
  1081  0008DE                     l1351:
  1082  0008DE  0E01               	movlw	1
  1083  0008E0  6E20               	movwf	??_PWM_CCP2& (0+255),c
  1084  0008E2  0E01               	movlw	1
  1085  0008E4  6E21               	movwf	(??_PWM_CCP2+1)& (0+255),c
  1086  0008E6  0E00               	movlw	0
  1087  0008E8  6E22               	movwf	(??_PWM_CCP2+2)& (0+255),c
  1088  0008EA  0E00               	movlw	0
  1089  0008EC  6E23               	movwf	(??_PWM_CCP2+3)& (0+255),c
  1090  0008EE  5020               	movf	??_PWM_CCP2,w,c
  1091  0008F0  5C28               	subwf	PWM_CCP2@PR2cal,w,c
  1092  0008F2  5021               	movf	??_PWM_CCP2+1,w,c
  1093  0008F4  5829               	subwfb	PWM_CCP2@PR2cal+1,w,c
  1094  0008F6  5022               	movf	??_PWM_CCP2+2,w,c
  1095  0008F8  582A               	subwfb	PWM_CCP2@PR2cal+2,w,c
  1096  0008FA  5023               	movf	??_PWM_CCP2+3,w,c
  1097  0008FC  582B               	subwfb	PWM_CCP2@PR2cal+3,w,c
  1098  0008FE  B0D8               	btfsc	status,0,c
  1099  000900  D7C6               	goto	l1347
  1100                           
  1101                           ;PWM.c: 73: }
  1102                           ;PWM.c: 74: PR2cal--;
  1103  000902  0628               	decf	PWM_CCP2@PR2cal,f,c
  1104  000904  0E00               	movlw	0
  1105  000906  5A29               	subwfb	PWM_CCP2@PR2cal+1,f,c
  1106  000908  5A2A               	subwfb	PWM_CCP2@PR2cal+2,f,c
  1107  00090A  5A2B               	subwfb	PWM_CCP2@PR2cal+3,f,c
  1108                           
  1109                           ;PWM.c: 75: PR2=PR2cal;
  1110  00090C  C028  FFBB         	movff	PWM_CCP2@PR2cal,4027	;volatile
  1111                           
  1112                           ;PWM.c: 82: unsigned long AuxCCPR2L=PR2cal;
  1113  000910  C028  F02C         	movff	PWM_CCP2@PR2cal,PWM_CCP2@AuxCCPR2L
  1114  000914  C029  F02D         	movff	PWM_CCP2@PR2cal+1,PWM_CCP2@AuxCCPR2L+1
  1115  000918  C02A  F02E         	movff	PWM_CCP2@PR2cal+2,PWM_CCP2@AuxCCPR2L+2
  1116  00091C  C02B  F02F         	movff	PWM_CCP2@PR2cal+3,PWM_CCP2@AuxCCPR2L+3
  1117                           
  1118                           ;PWM.c: 83: AuxCCPR2L++;
  1119  000920  0E01               	movlw	1
  1120  000922  262C               	addwf	PWM_CCP2@AuxCCPR2L,f,c
  1121  000924  0E00               	movlw	0
  1122  000926  222D               	addwfc	PWM_CCP2@AuxCCPR2L+1,f,c
  1123  000928  222E               	addwfc	PWM_CCP2@AuxCCPR2L+2,f,c
  1124  00092A  222F               	addwfc	PWM_CCP2@AuxCCPR2L+3,f,c
  1125                           
  1126                           ;PWM.c: 84: AuxCCPR2L=AuxCCPR2L*duty;
  1127  00092C  C01C  F00F         	movff	PWM_CCP2@duty,___lmul@multiplier
  1128  000930  C01D  F010         	movff	PWM_CCP2@duty+1,___lmul@multiplier+1
  1129  000934  6A11               	clrf	___lmul@multiplier+2,c
  1130  000936  6A12               	clrf	___lmul@multiplier+3,c
  1131  000938  C02C  F013         	movff	PWM_CCP2@AuxCCPR2L,___lmul@multiplicand
  1132  00093C  C02D  F014         	movff	PWM_CCP2@AuxCCPR2L+1,___lmul@multiplicand+1
  1133  000940  C02E  F015         	movff	PWM_CCP2@AuxCCPR2L+2,___lmul@multiplicand+2
  1134  000944  C02F  F016         	movff	PWM_CCP2@AuxCCPR2L+3,___lmul@multiplicand+3
  1135  000948  EC9C  F009         	call	___lmul	;wreg free
  1136  00094C  C00F  F02C         	movff	?___lmul,PWM_CCP2@AuxCCPR2L
  1137  000950  C010  F02D         	movff	?___lmul+1,PWM_CCP2@AuxCCPR2L+1
  1138  000954  C011  F02E         	movff	?___lmul+2,PWM_CCP2@AuxCCPR2L+2
  1139  000958  C012  F02F         	movff	?___lmul+3,PWM_CCP2@AuxCCPR2L+3
  1140                           
  1141                           ;PWM.c: 85: AuxCCPR2L=AuxCCPR2L*4;
  1142  00095C  C02C  F020         	movff	PWM_CCP2@AuxCCPR2L,??_PWM_CCP2
  1143  000960  C02D  F021         	movff	PWM_CCP2@AuxCCPR2L+1,??_PWM_CCP2+1
  1144  000964  C02E  F022         	movff	PWM_CCP2@AuxCCPR2L+2,??_PWM_CCP2+2
  1145  000968  C02F  F023         	movff	PWM_CCP2@AuxCCPR2L+3,??_PWM_CCP2+3
  1146  00096C  0E02               	movlw	2
  1147  00096E                     u205:
  1148  00096E  90D8               	bcf	status,0,c
  1149  000970  3620               	rlcf	??_PWM_CCP2,f,c
  1150  000972  3621               	rlcf	??_PWM_CCP2+1,f,c
  1151  000974  3622               	rlcf	??_PWM_CCP2+2,f,c
  1152  000976  3623               	rlcf	??_PWM_CCP2+3,f,c
  1153  000978  2EE8               	decfsz	wreg,f,c
  1154  00097A  D7F9               	goto	u205
  1155  00097C  C020  F02C         	movff	??_PWM_CCP2,PWM_CCP2@AuxCCPR2L
  1156  000980  C021  F02D         	movff	??_PWM_CCP2+1,PWM_CCP2@AuxCCPR2L+1
  1157  000984  C022  F02E         	movff	??_PWM_CCP2+2,PWM_CCP2@AuxCCPR2L+2
  1158  000988  C023  F02F         	movff	??_PWM_CCP2+3,PWM_CCP2@AuxCCPR2L+3
  1159                           
  1160                           ;PWM.c: 86: AuxCCPR2L=AuxCCPR2L/100;
  1161  00098C  C02C  F00F         	movff	PWM_CCP2@AuxCCPR2L,___lldiv@dividend
  1162  000990  C02D  F010         	movff	PWM_CCP2@AuxCCPR2L+1,___lldiv@dividend+1
  1163  000994  C02E  F011         	movff	PWM_CCP2@AuxCCPR2L+2,___lldiv@dividend+2
  1164  000998  C02F  F012         	movff	PWM_CCP2@AuxCCPR2L+3,___lldiv@dividend+3
  1165  00099C  0E64               	movlw	100
  1166  00099E  6E13               	movwf	___lldiv@divisor,c
  1167  0009A0  0E00               	movlw	0
  1168  0009A2  6E14               	movwf	___lldiv@divisor+1,c
  1169  0009A4  0E00               	movlw	0
  1170  0009A6  6E15               	movwf	___lldiv@divisor+2,c
  1171  0009A8  0E00               	movlw	0
  1172  0009AA  6E16               	movwf	___lldiv@divisor+3,c
  1173  0009AC  ECFA  F008         	call	___lldiv	;wreg free
  1174  0009B0  C00F  F02C         	movff	?___lldiv,PWM_CCP2@AuxCCPR2L
  1175  0009B4  C010  F02D         	movff	?___lldiv+1,PWM_CCP2@AuxCCPR2L+1
  1176  0009B8  C011  F02E         	movff	?___lldiv+2,PWM_CCP2@AuxCCPR2L+2
  1177  0009BC  C012  F02F         	movff	?___lldiv+3,PWM_CCP2@AuxCCPR2L+3
  1178                           
  1179                           ;PWM.c: 87: unsigned int AuxCCP2CON= AuxCCPR2L;
  1180  0009C0  C02C  F026         	movff	PWM_CCP2@AuxCCPR2L,PWM_CCP2@AuxCCP2CON
  1181  0009C4  C02D  F027         	movff	PWM_CCP2@AuxCCPR2L+1,PWM_CCP2@AuxCCP2CON+1
  1182                           
  1183                           ;PWM.c: 88: AuxCCP2CON= AuxCCP2CON & 0b00000011 ;
  1184  0009C8  0E03               	movlw	3
  1185  0009CA  1426               	andwf	PWM_CCP2@AuxCCP2CON,w,c
  1186  0009CC  6E26               	movwf	PWM_CCP2@AuxCCP2CON,c
  1187  0009CE  6A27               	clrf	PWM_CCP2@AuxCCP2CON+1,c
  1188                           
  1189                           ;PWM.c: 89: AuxCCP2CON= AuxCCP2CON*16;
  1190  0009D0  C026  F020         	movff	PWM_CCP2@AuxCCP2CON,??_PWM_CCP2
  1191  0009D4  C027  F021         	movff	PWM_CCP2@AuxCCP2CON+1,??_PWM_CCP2+1
  1192  0009D8  3A20               	swapf	??_PWM_CCP2,f,c
  1193  0009DA  3A21               	swapf	??_PWM_CCP2+1,f,c
  1194  0009DC  0EF0               	movlw	240
  1195  0009DE  1621               	andwf	??_PWM_CCP2+1,f,c
  1196  0009E0  5020               	movf	??_PWM_CCP2,w,c
  1197  0009E2  0B0F               	andlw	15
  1198  0009E4  1221               	iorwf	??_PWM_CCP2+1,f,c
  1199  0009E6  0EF0               	movlw	240
  1200  0009E8  1620               	andwf	??_PWM_CCP2,f,c
  1201  0009EA  C020  F026         	movff	??_PWM_CCP2,PWM_CCP2@AuxCCP2CON
  1202  0009EE  C021  F027         	movff	??_PWM_CCP2+1,PWM_CCP2@AuxCCP2CON+1
  1203                           
  1204                           ;PWM.c: 90: CCP2CON= 0b00001100;
  1205  0009F2  0E0C               	movlw	12
  1206  0009F4  6E97               	movwf	3991,c	;volatile
  1207                           
  1208                           ;PWM.c: 91: CCP2CON= CCP2CON|AuxCCP2CON;
  1209  0009F6  5097               	movf	3991,w,c
  1210  0009F8  1026               	iorwf	PWM_CCP2@AuxCCP2CON,w,c
  1211  0009FA  6E97               	movwf	3991,c	;volatile
  1212                           
  1213                           ;PWM.c: 92: AuxCCPR2L=AuxCCPR2L/4;
  1214  0009FC  C02C  F020         	movff	PWM_CCP2@AuxCCPR2L,??_PWM_CCP2
  1215  000A00  C02D  F021         	movff	PWM_CCP2@AuxCCPR2L+1,??_PWM_CCP2+1
  1216  000A04  C02E  F022         	movff	PWM_CCP2@AuxCCPR2L+2,??_PWM_CCP2+2
  1217  000A08  C02F  F023         	movff	PWM_CCP2@AuxCCPR2L+3,??_PWM_CCP2+3
  1218  000A0C  0E03               	movlw	3
  1219  000A0E  D005               	goto	u210
  1220  000A10                     u215:
  1221  000A10  90D8               	bcf	status,0,c
  1222  000A12  3223               	rrcf	??_PWM_CCP2+3,f,c
  1223  000A14  3222               	rrcf	??_PWM_CCP2+2,f,c
  1224  000A16  3221               	rrcf	??_PWM_CCP2+1,f,c
  1225  000A18  3220               	rrcf	??_PWM_CCP2,f,c
  1226  000A1A                     u210:
  1227  000A1A  2EE8               	decfsz	wreg,f,c
  1228  000A1C  D7F9               	goto	u215
  1229  000A1E  C020  F02C         	movff	??_PWM_CCP2,PWM_CCP2@AuxCCPR2L
  1230  000A22  C021  F02D         	movff	??_PWM_CCP2+1,PWM_CCP2@AuxCCPR2L+1
  1231  000A26  C022  F02E         	movff	??_PWM_CCP2+2,PWM_CCP2@AuxCCPR2L+2
  1232  000A2A  C023  F02F         	movff	??_PWM_CCP2+3,PWM_CCP2@AuxCCPR2L+3
  1233                           
  1234                           ;PWM.c: 93: CCPR2L=AuxCCPR2L;
  1235  000A2E  C02C  FF90         	movff	PWM_CCP2@AuxCCPR2L,3984	;volatile
  1236                           
  1237                           ;PWM.c: 94: T2CONbits.TMR2ON=1;
  1238  000A32  84BA               	bsf	4026,2,c	;volatile
  1239                           
  1240                           ;PWM.c: 95: TMR2=0;
  1241  000A34  0E00               	movlw	0
  1242  000A36  6EBC               	movwf	4028,c	;volatile
  1243  000A38  0012               	return	
  1244  000A3A                     __end_of_PWM_CCP2:
  1245                           	opt stack 0
  1246                           tblptru	equ	0xFF8
  1247                           intcon	equ	0xFF2
  1248                           postinc0	equ	0xFEE
  1249                           wreg	equ	0xFE8
  1250                           status	equ	0xFD8
  1251                           
  1252 ;; *************** function _PWM_CCP1 *****************
  1253 ;; Defined at:
  1254 ;;		line 12 in file "PWM.c"
  1255 ;; Parameters:    Size  Location     Type
  1256 ;;  duty            2   27[COMRAM] unsigned int 
  1257 ;;  fpwm            2   29[COMRAM] unsigned int 
  1258 ;; Auto vars:     Size  Location     Type
  1259 ;;  AuxCCPR2L       4   43[COMRAM] unsigned long 
  1260 ;;  PR2cal          4   39[COMRAM] unsigned long 
  1261 ;;  AuxCCP2CON      2   37[COMRAM] unsigned int 
  1262 ;;  prescalador     2   35[COMRAM] unsigned int 
  1263 ;; Return value:  Size  Location     Type
  1264 ;;		None               void
  1265 ;; Registers used:
  1266 ;;		wreg, status,2, status,0, cstack
  1267 ;; Tracked objects:
  1268 ;;		On entry : 0/0
  1269 ;;		On exit  : 0/0
  1270 ;;		Unchanged: 0/0
  1271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1272 ;;      Params:         4       0       0       0       0       0       0       0       0
  1273 ;;      Locals:        12       0       0       0       0       0       0       0       0
  1274 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1275 ;;      Totals:        20       0       0       0       0       0       0       0       0
  1276 ;;Total ram usage:       20 bytes
  1277 ;; Hardware stack levels used:    1
  1278 ;; Hardware stack levels required when called:    2
  1279 ;; This function calls:
  1280 ;;		___lldiv
  1281 ;;		___lmul
  1282 ;; This function is called by:
  1283 ;;		_velocidad_1
  1284 ;;		_velocidad_2
  1285 ;;		_velocidad_3
  1286 ;;		_Stop
  1287 ;;		_Giro
  1288 ;; This function uses a non-reentrant model
  1289 ;;
  1290                           
  1291                           	psect	text6
  1292  000A3A                     __ptext6:
  1293                           	opt stack 0
  1294  000A3A                     _PWM_CCP1:
  1295                           	opt stack 27
  1296                           
  1297                           ;PWM.c: 19: TRISCbits.RC1=0;
  1298                           
  1299                           ;incstack = 0
  1300  000A3A  9294               	bcf	3988,1,c	;volatile
  1301                           
  1302                           ;PWM.c: 20: ANSELC=0;
  1303  000A3C  0E00               	movlw	0
  1304  000A3E  010F               	movlb	15	; () banked
  1305  000A40  6F5D               	movwf	93,b	;volatile
  1306                           
  1307                           ;PWM.c: 21: unsigned int prescalador=1;
  1308  000A42  0E00               	movlw	0
  1309  000A44  6E25               	movwf	PWM_CCP1@prescalador+1,c
  1310  000A46  0E01               	movlw	1
  1311  000A48  6E24               	movwf	PWM_CCP1@prescalador,c
  1312                           
  1313                           ;PWM.c: 22: unsigned long PR2cal=4000000;
  1314  000A4A  0E00               	movlw	0
  1315  000A4C  6E28               	movwf	PWM_CCP1@PR2cal,c
  1316  000A4E  0E09               	movlw	9
  1317  000A50  6E29               	movwf	PWM_CCP1@PR2cal+1,c
  1318  000A52  0E3D               	movlw	61
  1319  000A54  6E2A               	movwf	PWM_CCP1@PR2cal+2,c
  1320  000A56  0E00               	movlw	0
  1321  000A58  6E2B               	movwf	PWM_CCP1@PR2cal+3,c
  1322                           
  1323                           ; BSR set to: 15
  1324                           ;PWM.c: 23: PR2cal=PR2cal/fpwm;
  1325  000A5A  C028  F00F         	movff	PWM_CCP1@PR2cal,___lldiv@dividend
  1326  000A5E  C029  F010         	movff	PWM_CCP1@PR2cal+1,___lldiv@dividend+1
  1327  000A62  C02A  F011         	movff	PWM_CCP1@PR2cal+2,___lldiv@dividend+2
  1328  000A66  C02B  F012         	movff	PWM_CCP1@PR2cal+3,___lldiv@dividend+3
  1329  000A6A  C01E  F013         	movff	PWM_CCP1@fpwm,___lldiv@divisor
  1330  000A6E  C01F  F014         	movff	PWM_CCP1@fpwm+1,___lldiv@divisor+1
  1331  000A72  6A15               	clrf	___lldiv@divisor+2,c
  1332  000A74  6A16               	clrf	___lldiv@divisor+3,c
  1333  000A76  ECFA  F008         	call	___lldiv	;wreg free
  1334  000A7A  C00F  F028         	movff	?___lldiv,PWM_CCP1@PR2cal
  1335  000A7E  C010  F029         	movff	?___lldiv+1,PWM_CCP1@PR2cal+1
  1336  000A82  C011  F02A         	movff	?___lldiv+2,PWM_CCP1@PR2cal+2
  1337  000A86  C012  F02B         	movff	?___lldiv+3,PWM_CCP1@PR2cal+3
  1338                           
  1339                           ;PWM.c: 24: PR2cal=PR2cal/4;
  1340  000A8A  C028  F020         	movff	PWM_CCP1@PR2cal,??_PWM_CCP1
  1341  000A8E  C029  F021         	movff	PWM_CCP1@PR2cal+1,??_PWM_CCP1+1
  1342  000A92  C02A  F022         	movff	PWM_CCP1@PR2cal+2,??_PWM_CCP1+2
  1343  000A96  C02B  F023         	movff	PWM_CCP1@PR2cal+3,??_PWM_CCP1+3
  1344  000A9A  0E03               	movlw	3
  1345  000A9C  D005               	goto	u120
  1346  000A9E                     u125:
  1347  000A9E  90D8               	bcf	status,0,c
  1348  000AA0  3223               	rrcf	??_PWM_CCP1+3,f,c
  1349  000AA2  3222               	rrcf	??_PWM_CCP1+2,f,c
  1350  000AA4  3221               	rrcf	??_PWM_CCP1+1,f,c
  1351  000AA6  3220               	rrcf	??_PWM_CCP1,f,c
  1352  000AA8                     u120:
  1353  000AA8  2EE8               	decfsz	wreg,f,c
  1354  000AAA  D7F9               	goto	u125
  1355  000AAC  C020  F028         	movff	??_PWM_CCP1,PWM_CCP1@PR2cal
  1356  000AB0  C021  F029         	movff	??_PWM_CCP1+1,PWM_CCP1@PR2cal+1
  1357  000AB4  C022  F02A         	movff	??_PWM_CCP1+2,PWM_CCP1@PR2cal+2
  1358  000AB8  C023  F02B         	movff	??_PWM_CCP1+3,PWM_CCP1@PR2cal+3
  1359                           
  1360                           ;PWM.c: 25: T2CON=0b00000000;
  1361  000ABC  0E00               	movlw	0
  1362  000ABE  6EBA               	movwf	4026,c	;volatile
  1363                           
  1364                           ;PWM.c: 26: while(PR2cal>256){
  1365  000AC0  D028               	goto	l1307
  1366  000AC2                     l1303:
  1367                           
  1368                           ;PWM.c: 27: prescalador=prescalador*4;
  1369  000AC2  C024  F020         	movff	PWM_CCP1@prescalador,??_PWM_CCP1
  1370  000AC6  C025  F021         	movff	PWM_CCP1@prescalador+1,??_PWM_CCP1+1
  1371  000ACA  90D8               	bcf	status,0,c
  1372  000ACC  3620               	rlcf	??_PWM_CCP1,f,c
  1373  000ACE  3621               	rlcf	??_PWM_CCP1+1,f,c
  1374  000AD0  90D8               	bcf	status,0,c
  1375  000AD2  3620               	rlcf	??_PWM_CCP1,f,c
  1376  000AD4  3621               	rlcf	??_PWM_CCP1+1,f,c
  1377  000AD6  C020  F024         	movff	??_PWM_CCP1,PWM_CCP1@prescalador
  1378  000ADA  C021  F025         	movff	??_PWM_CCP1+1,PWM_CCP1@prescalador+1
  1379                           
  1380                           ;PWM.c: 28: T2CON++;
  1381  000ADE  2ABA               	incf	4026,f,c	;volatile
  1382                           
  1383                           ;PWM.c: 29: PR2cal=PR2cal/4;
  1384  000AE0  C028  F020         	movff	PWM_CCP1@PR2cal,??_PWM_CCP1
  1385  000AE4  C029  F021         	movff	PWM_CCP1@PR2cal+1,??_PWM_CCP1+1
  1386  000AE8  C02A  F022         	movff	PWM_CCP1@PR2cal+2,??_PWM_CCP1+2
  1387  000AEC  C02B  F023         	movff	PWM_CCP1@PR2cal+3,??_PWM_CCP1+3
  1388  000AF0  0E03               	movlw	3
  1389  000AF2  D005               	goto	u130
  1390  000AF4                     u135:
  1391  000AF4  90D8               	bcf	status,0,c
  1392  000AF6  3223               	rrcf	??_PWM_CCP1+3,f,c
  1393  000AF8  3222               	rrcf	??_PWM_CCP1+2,f,c
  1394  000AFA  3221               	rrcf	??_PWM_CCP1+1,f,c
  1395  000AFC  3220               	rrcf	??_PWM_CCP1,f,c
  1396  000AFE                     u130:
  1397  000AFE  2EE8               	decfsz	wreg,f,c
  1398  000B00  D7F9               	goto	u135
  1399  000B02  C020  F028         	movff	??_PWM_CCP1,PWM_CCP1@PR2cal
  1400  000B06  C021  F029         	movff	??_PWM_CCP1+1,PWM_CCP1@PR2cal+1
  1401  000B0A  C022  F02A         	movff	??_PWM_CCP1+2,PWM_CCP1@PR2cal+2
  1402  000B0E  C023  F02B         	movff	??_PWM_CCP1+3,PWM_CCP1@PR2cal+3
  1403  000B12                     l1307:
  1404  000B12  0E01               	movlw	1
  1405  000B14  6E20               	movwf	??_PWM_CCP1& (0+255),c
  1406  000B16  0E01               	movlw	1
  1407  000B18  6E21               	movwf	(??_PWM_CCP1+1)& (0+255),c
  1408  000B1A  0E00               	movlw	0
  1409  000B1C  6E22               	movwf	(??_PWM_CCP1+2)& (0+255),c
  1410  000B1E  0E00               	movlw	0
  1411  000B20  6E23               	movwf	(??_PWM_CCP1+3)& (0+255),c
  1412  000B22  5020               	movf	??_PWM_CCP1,w,c
  1413  000B24  5C28               	subwf	PWM_CCP1@PR2cal,w,c
  1414  000B26  5021               	movf	??_PWM_CCP1+1,w,c
  1415  000B28  5829               	subwfb	PWM_CCP1@PR2cal+1,w,c
  1416  000B2A  5022               	movf	??_PWM_CCP1+2,w,c
  1417  000B2C  582A               	subwfb	PWM_CCP1@PR2cal+2,w,c
  1418  000B2E  5023               	movf	??_PWM_CCP1+3,w,c
  1419  000B30  582B               	subwfb	PWM_CCP1@PR2cal+3,w,c
  1420  000B32  B0D8               	btfsc	status,0,c
  1421  000B34  D7C6               	goto	l1303
  1422                           
  1423                           ;PWM.c: 30: }
  1424                           ;PWM.c: 31: PR2cal--;
  1425  000B36  0628               	decf	PWM_CCP1@PR2cal,f,c
  1426  000B38  0E00               	movlw	0
  1427  000B3A  5A29               	subwfb	PWM_CCP1@PR2cal+1,f,c
  1428  000B3C  5A2A               	subwfb	PWM_CCP1@PR2cal+2,f,c
  1429  000B3E  5A2B               	subwfb	PWM_CCP1@PR2cal+3,f,c
  1430                           
  1431                           ;PWM.c: 32: PR2=PR2cal;
  1432  000B40  C028  FFBB         	movff	PWM_CCP1@PR2cal,4027	;volatile
  1433                           
  1434                           ;PWM.c: 39: unsigned long AuxCCPR2L=PR2cal;
  1435  000B44  C028  F02C         	movff	PWM_CCP1@PR2cal,PWM_CCP1@AuxCCPR2L
  1436  000B48  C029  F02D         	movff	PWM_CCP1@PR2cal+1,PWM_CCP1@AuxCCPR2L+1
  1437  000B4C  C02A  F02E         	movff	PWM_CCP1@PR2cal+2,PWM_CCP1@AuxCCPR2L+2
  1438  000B50  C02B  F02F         	movff	PWM_CCP1@PR2cal+3,PWM_CCP1@AuxCCPR2L+3
  1439                           
  1440                           ;PWM.c: 40: AuxCCPR2L++;
  1441  000B54  0E01               	movlw	1
  1442  000B56  262C               	addwf	PWM_CCP1@AuxCCPR2L,f,c
  1443  000B58  0E00               	movlw	0
  1444  000B5A  222D               	addwfc	PWM_CCP1@AuxCCPR2L+1,f,c
  1445  000B5C  222E               	addwfc	PWM_CCP1@AuxCCPR2L+2,f,c
  1446  000B5E  222F               	addwfc	PWM_CCP1@AuxCCPR2L+3,f,c
  1447                           
  1448                           ;PWM.c: 41: AuxCCPR2L=AuxCCPR2L*duty;
  1449  000B60  C01C  F00F         	movff	PWM_CCP1@duty,___lmul@multiplier
  1450  000B64  C01D  F010         	movff	PWM_CCP1@duty+1,___lmul@multiplier+1
  1451  000B68  6A11               	clrf	___lmul@multiplier+2,c
  1452  000B6A  6A12               	clrf	___lmul@multiplier+3,c
  1453  000B6C  C02C  F013         	movff	PWM_CCP1@AuxCCPR2L,___lmul@multiplicand
  1454  000B70  C02D  F014         	movff	PWM_CCP1@AuxCCPR2L+1,___lmul@multiplicand+1
  1455  000B74  C02E  F015         	movff	PWM_CCP1@AuxCCPR2L+2,___lmul@multiplicand+2
  1456  000B78  C02F  F016         	movff	PWM_CCP1@AuxCCPR2L+3,___lmul@multiplicand+3
  1457  000B7C  EC9C  F009         	call	___lmul	;wreg free
  1458  000B80  C00F  F02C         	movff	?___lmul,PWM_CCP1@AuxCCPR2L
  1459  000B84  C010  F02D         	movff	?___lmul+1,PWM_CCP1@AuxCCPR2L+1
  1460  000B88  C011  F02E         	movff	?___lmul+2,PWM_CCP1@AuxCCPR2L+2
  1461  000B8C  C012  F02F         	movff	?___lmul+3,PWM_CCP1@AuxCCPR2L+3
  1462                           
  1463                           ;PWM.c: 42: AuxCCPR2L=AuxCCPR2L*4;
  1464  000B90  C02C  F020         	movff	PWM_CCP1@AuxCCPR2L,??_PWM_CCP1
  1465  000B94  C02D  F021         	movff	PWM_CCP1@AuxCCPR2L+1,??_PWM_CCP1+1
  1466  000B98  C02E  F022         	movff	PWM_CCP1@AuxCCPR2L+2,??_PWM_CCP1+2
  1467  000B9C  C02F  F023         	movff	PWM_CCP1@AuxCCPR2L+3,??_PWM_CCP1+3
  1468  000BA0  0E02               	movlw	2
  1469  000BA2                     u155:
  1470  000BA2  90D8               	bcf	status,0,c
  1471  000BA4  3620               	rlcf	??_PWM_CCP1,f,c
  1472  000BA6  3621               	rlcf	??_PWM_CCP1+1,f,c
  1473  000BA8  3622               	rlcf	??_PWM_CCP1+2,f,c
  1474  000BAA  3623               	rlcf	??_PWM_CCP1+3,f,c
  1475  000BAC  2EE8               	decfsz	wreg,f,c
  1476  000BAE  D7F9               	goto	u155
  1477  000BB0  C020  F02C         	movff	??_PWM_CCP1,PWM_CCP1@AuxCCPR2L
  1478  000BB4  C021  F02D         	movff	??_PWM_CCP1+1,PWM_CCP1@AuxCCPR2L+1
  1479  000BB8  C022  F02E         	movff	??_PWM_CCP1+2,PWM_CCP1@AuxCCPR2L+2
  1480  000BBC  C023  F02F         	movff	??_PWM_CCP1+3,PWM_CCP1@AuxCCPR2L+3
  1481                           
  1482                           ;PWM.c: 43: AuxCCPR2L=AuxCCPR2L/100;
  1483  000BC0  C02C  F00F         	movff	PWM_CCP1@AuxCCPR2L,___lldiv@dividend
  1484  000BC4  C02D  F010         	movff	PWM_CCP1@AuxCCPR2L+1,___lldiv@dividend+1
  1485  000BC8  C02E  F011         	movff	PWM_CCP1@AuxCCPR2L+2,___lldiv@dividend+2
  1486  000BCC  C02F  F012         	movff	PWM_CCP1@AuxCCPR2L+3,___lldiv@dividend+3
  1487  000BD0  0E64               	movlw	100
  1488  000BD2  6E13               	movwf	___lldiv@divisor,c
  1489  000BD4  0E00               	movlw	0
  1490  000BD6  6E14               	movwf	___lldiv@divisor+1,c
  1491  000BD8  0E00               	movlw	0
  1492  000BDA  6E15               	movwf	___lldiv@divisor+2,c
  1493  000BDC  0E00               	movlw	0
  1494  000BDE  6E16               	movwf	___lldiv@divisor+3,c
  1495  000BE0  ECFA  F008         	call	___lldiv	;wreg free
  1496  000BE4  C00F  F02C         	movff	?___lldiv,PWM_CCP1@AuxCCPR2L
  1497  000BE8  C010  F02D         	movff	?___lldiv+1,PWM_CCP1@AuxCCPR2L+1
  1498  000BEC  C011  F02E         	movff	?___lldiv+2,PWM_CCP1@AuxCCPR2L+2
  1499  000BF0  C012  F02F         	movff	?___lldiv+3,PWM_CCP1@AuxCCPR2L+3
  1500                           
  1501                           ;PWM.c: 44: unsigned int AuxCCP2CON= AuxCCPR2L;
  1502  000BF4  C02C  F026         	movff	PWM_CCP1@AuxCCPR2L,PWM_CCP1@AuxCCP2CON
  1503  000BF8  C02D  F027         	movff	PWM_CCP1@AuxCCPR2L+1,PWM_CCP1@AuxCCP2CON+1
  1504                           
  1505                           ;PWM.c: 45: AuxCCP2CON= AuxCCP2CON & 0b00000011 ;
  1506  000BFC  0E03               	movlw	3
  1507  000BFE  1426               	andwf	PWM_CCP1@AuxCCP2CON,w,c
  1508  000C00  6E26               	movwf	PWM_CCP1@AuxCCP2CON,c
  1509  000C02  6A27               	clrf	PWM_CCP1@AuxCCP2CON+1,c
  1510                           
  1511                           ;PWM.c: 46: AuxCCP2CON= AuxCCP2CON*16;
  1512  000C04  C026  F020         	movff	PWM_CCP1@AuxCCP2CON,??_PWM_CCP1
  1513  000C08  C027  F021         	movff	PWM_CCP1@AuxCCP2CON+1,??_PWM_CCP1+1
  1514  000C0C  3A20               	swapf	??_PWM_CCP1,f,c
  1515  000C0E  3A21               	swapf	??_PWM_CCP1+1,f,c
  1516  000C10  0EF0               	movlw	240
  1517  000C12  1621               	andwf	??_PWM_CCP1+1,f,c
  1518  000C14  5020               	movf	??_PWM_CCP1,w,c
  1519  000C16  0B0F               	andlw	15
  1520  000C18  1221               	iorwf	??_PWM_CCP1+1,f,c
  1521  000C1A  0EF0               	movlw	240
  1522  000C1C  1620               	andwf	??_PWM_CCP1,f,c
  1523  000C1E  C020  F026         	movff	??_PWM_CCP1,PWM_CCP1@AuxCCP2CON
  1524  000C22  C021  F027         	movff	??_PWM_CCP1+1,PWM_CCP1@AuxCCP2CON+1
  1525                           
  1526                           ;PWM.c: 47: CCP1CON= 0b00001100;
  1527  000C26  0E0C               	movlw	12
  1528  000C28  6EBD               	movwf	4029,c	;volatile
  1529                           
  1530                           ;PWM.c: 48: CCP1CON= CCP1CON|AuxCCP2CON;
  1531  000C2A  50BD               	movf	4029,w,c
  1532  000C2C  1026               	iorwf	PWM_CCP1@AuxCCP2CON,w,c
  1533  000C2E  6EBD               	movwf	4029,c	;volatile
  1534                           
  1535                           ;PWM.c: 49: AuxCCPR2L=AuxCCPR2L/4;
  1536  000C30  C02C  F020         	movff	PWM_CCP1@AuxCCPR2L,??_PWM_CCP1
  1537  000C34  C02D  F021         	movff	PWM_CCP1@AuxCCPR2L+1,??_PWM_CCP1+1
  1538  000C38  C02E  F022         	movff	PWM_CCP1@AuxCCPR2L+2,??_PWM_CCP1+2
  1539  000C3C  C02F  F023         	movff	PWM_CCP1@AuxCCPR2L+3,??_PWM_CCP1+3
  1540  000C40  0E03               	movlw	3
  1541  000C42  D005               	goto	u160
  1542  000C44                     u165:
  1543  000C44  90D8               	bcf	status,0,c
  1544  000C46  3223               	rrcf	??_PWM_CCP1+3,f,c
  1545  000C48  3222               	rrcf	??_PWM_CCP1+2,f,c
  1546  000C4A  3221               	rrcf	??_PWM_CCP1+1,f,c
  1547  000C4C  3220               	rrcf	??_PWM_CCP1,f,c
  1548  000C4E                     u160:
  1549  000C4E  2EE8               	decfsz	wreg,f,c
  1550  000C50  D7F9               	goto	u165
  1551  000C52  C020  F02C         	movff	??_PWM_CCP1,PWM_CCP1@AuxCCPR2L
  1552  000C56  C021  F02D         	movff	??_PWM_CCP1+1,PWM_CCP1@AuxCCPR2L+1
  1553  000C5A  C022  F02E         	movff	??_PWM_CCP1+2,PWM_CCP1@AuxCCPR2L+2
  1554  000C5E  C023  F02F         	movff	??_PWM_CCP1+3,PWM_CCP1@AuxCCPR2L+3
  1555                           
  1556                           ;PWM.c: 50: CCPR1L=AuxCCPR2L;
  1557  000C62  C02C  FFBE         	movff	PWM_CCP1@AuxCCPR2L,4030	;volatile
  1558                           
  1559                           ;PWM.c: 51: T2CONbits.TMR2ON=1;
  1560  000C66  84BA               	bsf	4026,2,c	;volatile
  1561                           
  1562                           ;PWM.c: 52: TMR2=0;
  1563  000C68  0E00               	movlw	0
  1564  000C6A  6EBC               	movwf	4028,c	;volatile
  1565  000C6C  0012               	return	
  1566  000C6E                     __end_of_PWM_CCP1:
  1567                           	opt stack 0
  1568                           tblptru	equ	0xFF8
  1569                           intcon	equ	0xFF2
  1570                           postinc0	equ	0xFEE
  1571                           wreg	equ	0xFE8
  1572                           status	equ	0xFD8
  1573                           
  1574 ;; *************** function ___lmul *****************
  1575 ;; Defined at:
  1576 ;;		line 15 in file "/opt/microchip/xc8/v1.32/sources/common/Umul32.c"
  1577 ;; Parameters:    Size  Location     Type
  1578 ;;  multiplier      4   14[COMRAM] unsigned long 
  1579 ;;  multiplicand    4   18[COMRAM] unsigned long 
  1580 ;; Auto vars:     Size  Location     Type
  1581 ;;  product         4   22[COMRAM] unsigned long 
  1582 ;; Return value:  Size  Location     Type
  1583 ;;                  4   14[COMRAM] unsigned long 
  1584 ;; Registers used:
  1585 ;;		wreg, status,2, status,0
  1586 ;; Tracked objects:
  1587 ;;		On entry : 0/0
  1588 ;;		On exit  : 0/0
  1589 ;;		Unchanged: 0/0
  1590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1591 ;;      Params:         8       0       0       0       0       0       0       0       0
  1592 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1593 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1594 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1595 ;;Total ram usage:       12 bytes
  1596 ;; Hardware stack levels used:    1
  1597 ;; Hardware stack levels required when called:    1
  1598 ;; This function calls:
  1599 ;;		Nothing
  1600 ;; This function is called by:
  1601 ;;		_PWM_CCP1
  1602 ;;		_PWM_CCP2
  1603 ;; This function uses a non-reentrant model
  1604 ;;
  1605                           
  1606                           	psect	text7
  1607  001338                     __ptext7:
  1608                           	opt stack 0
  1609  001338                     ___lmul:
  1610                           	opt stack 27
  1611                           
  1612                           ;incstack = 0
  1613  001338  0E00               	movlw	0
  1614  00133A  6E17               	movwf	___lmul@product,c
  1615  00133C  0E00               	movlw	0
  1616  00133E  6E18               	movwf	___lmul@product+1,c
  1617  001340  0E00               	movlw	0
  1618  001342  6E19               	movwf	___lmul@product+2,c
  1619  001344  0E00               	movlw	0
  1620  001346  6E1A               	movwf	___lmul@product+3,c
  1621  001348                     l1169:
  1622  001348  A00F               	btfss	___lmul@multiplier,0,c
  1623  00134A  D008               	goto	l1173
  1624  00134C  5013               	movf	___lmul@multiplicand,w,c
  1625  00134E  2617               	addwf	___lmul@product,f,c
  1626  001350  5014               	movf	___lmul@multiplicand+1,w,c
  1627  001352  2218               	addwfc	___lmul@product+1,f,c
  1628  001354  5015               	movf	___lmul@multiplicand+2,w,c
  1629  001356  2219               	addwfc	___lmul@product+2,f,c
  1630  001358  5016               	movf	___lmul@multiplicand+3,w,c
  1631  00135A  221A               	addwfc	___lmul@product+3,f,c
  1632  00135C                     l1173:
  1633  00135C  90D8               	bcf	status,0,c
  1634  00135E  3613               	rlcf	___lmul@multiplicand,f,c
  1635  001360  3614               	rlcf	___lmul@multiplicand+1,f,c
  1636  001362  3615               	rlcf	___lmul@multiplicand+2,f,c
  1637  001364  3616               	rlcf	___lmul@multiplicand+3,f,c
  1638  001366  90D8               	bcf	status,0,c
  1639  001368  3212               	rrcf	___lmul@multiplier+3,f,c
  1640  00136A  3211               	rrcf	___lmul@multiplier+2,f,c
  1641  00136C  3210               	rrcf	___lmul@multiplier+1,f,c
  1642  00136E  320F               	rrcf	___lmul@multiplier,f,c
  1643  001370  5012               	movf	___lmul@multiplier+3,w,c
  1644  001372  100F               	iorwf	___lmul@multiplier,w,c
  1645  001374  1010               	iorwf	___lmul@multiplier+1,w,c
  1646  001376  1011               	iorwf	___lmul@multiplier+2,w,c
  1647  001378  A4D8               	btfss	status,2,c
  1648  00137A  D7E6               	goto	l1169
  1649  00137C  C017  F00F         	movff	___lmul@product,?___lmul
  1650  001380  C018  F010         	movff	___lmul@product+1,?___lmul+1
  1651  001384  C019  F011         	movff	___lmul@product+2,?___lmul+2
  1652  001388  C01A  F012         	movff	___lmul@product+3,?___lmul+3
  1653  00138C  0012               	return	
  1654  00138E                     __end_of___lmul:
  1655                           	opt stack 0
  1656                           tblptru	equ	0xFF8
  1657                           intcon	equ	0xFF2
  1658                           postinc0	equ	0xFEE
  1659                           wreg	equ	0xFE8
  1660                           status	equ	0xFD8
  1661                           
  1662 ;; *************** function ___lldiv *****************
  1663 ;; Defined at:
  1664 ;;		line 8 in file "/opt/microchip/xc8/v1.32/sources/common/lldiv.c"
  1665 ;; Parameters:    Size  Location     Type
  1666 ;;  dividend        4   14[COMRAM] unsigned long 
  1667 ;;  divisor         4   18[COMRAM] unsigned long 
  1668 ;; Auto vars:     Size  Location     Type
  1669 ;;  quotient        4   22[COMRAM] unsigned long 
  1670 ;;  counter         1   26[COMRAM] unsigned char 
  1671 ;; Return value:  Size  Location     Type
  1672 ;;                  4   14[COMRAM] unsigned long 
  1673 ;; Registers used:
  1674 ;;		wreg, status,2, status,0
  1675 ;; Tracked objects:
  1676 ;;		On entry : 0/0
  1677 ;;		On exit  : 0/0
  1678 ;;		Unchanged: 0/0
  1679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1680 ;;      Params:         8       0       0       0       0       0       0       0       0
  1681 ;;      Locals:         5       0       0       0       0       0       0       0       0
  1682 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1683 ;;      Totals:        13       0       0       0       0       0       0       0       0
  1684 ;;Total ram usage:       13 bytes
  1685 ;; Hardware stack levels used:    1
  1686 ;; Hardware stack levels required when called:    1
  1687 ;; This function calls:
  1688 ;;		Nothing
  1689 ;; This function is called by:
  1690 ;;		_PWM_CCP1
  1691 ;;		_PWM_CCP2
  1692 ;; This function uses a non-reentrant model
  1693 ;;
  1694                           
  1695                           	psect	text8
  1696  0011F4                     __ptext8:
  1697                           	opt stack 0
  1698  0011F4                     ___lldiv:
  1699                           	opt stack 27
  1700                           
  1701                           ;incstack = 0
  1702  0011F4  0E00               	movlw	0
  1703  0011F6  6E17               	movwf	___lldiv@quotient,c
  1704  0011F8  0E00               	movlw	0
  1705  0011FA  6E18               	movwf	___lldiv@quotient+1,c
  1706  0011FC  0E00               	movlw	0
  1707  0011FE  6E19               	movwf	___lldiv@quotient+2,c
  1708  001200  0E00               	movlw	0
  1709  001202  6E1A               	movwf	___lldiv@quotient+3,c
  1710  001204  5016               	movf	___lldiv@divisor+3,w,c
  1711  001206  1013               	iorwf	___lldiv@divisor,w,c
  1712  001208  1014               	iorwf	___lldiv@divisor+1,w,c
  1713  00120A  1015               	iorwf	___lldiv@divisor+2,w,c
  1714  00120C  B4D8               	btfsc	status,2,c
  1715  00120E  D02A               	goto	l1019
  1716  001210  0E01               	movlw	1
  1717  001212  6E1B               	movwf	___lldiv@counter,c
  1718  001214  D006               	goto	l1185
  1719  001216                     l1183:
  1720  001216  90D8               	bcf	status,0,c
  1721  001218  3613               	rlcf	___lldiv@divisor,f,c
  1722  00121A  3614               	rlcf	___lldiv@divisor+1,f,c
  1723  00121C  3615               	rlcf	___lldiv@divisor+2,f,c
  1724  00121E  3616               	rlcf	___lldiv@divisor+3,f,c
  1725  001220  2A1B               	incf	___lldiv@counter,f,c
  1726  001222                     l1185:
  1727  001222  AE16               	btfss	___lldiv@divisor+3,7,c
  1728  001224  D7F8               	goto	l1183
  1729  001226                     l1187:
  1730  001226  90D8               	bcf	status,0,c
  1731  001228  3617               	rlcf	___lldiv@quotient,f,c
  1732  00122A  3618               	rlcf	___lldiv@quotient+1,f,c
  1733  00122C  3619               	rlcf	___lldiv@quotient+2,f,c
  1734  00122E  361A               	rlcf	___lldiv@quotient+3,f,c
  1735  001230  5013               	movf	___lldiv@divisor,w,c
  1736  001232  5C0F               	subwf	___lldiv@dividend,w,c
  1737  001234  5014               	movf	___lldiv@divisor+1,w,c
  1738  001236  5810               	subwfb	___lldiv@dividend+1,w,c
  1739  001238  5015               	movf	___lldiv@divisor+2,w,c
  1740  00123A  5811               	subwfb	___lldiv@dividend+2,w,c
  1741  00123C  5016               	movf	___lldiv@divisor+3,w,c
  1742  00123E  5812               	subwfb	___lldiv@dividend+3,w,c
  1743  001240  A0D8               	btfss	status,0,c
  1744  001242  D009               	goto	l1195
  1745  001244  5013               	movf	___lldiv@divisor,w,c
  1746  001246  5E0F               	subwf	___lldiv@dividend,f,c
  1747  001248  5014               	movf	___lldiv@divisor+1,w,c
  1748  00124A  5A10               	subwfb	___lldiv@dividend+1,f,c
  1749  00124C  5015               	movf	___lldiv@divisor+2,w,c
  1750  00124E  5A11               	subwfb	___lldiv@dividend+2,f,c
  1751  001250  5016               	movf	___lldiv@divisor+3,w,c
  1752  001252  5A12               	subwfb	___lldiv@dividend+3,f,c
  1753  001254  8017               	bsf	___lldiv@quotient,0,c
  1754  001256                     l1195:
  1755  001256  90D8               	bcf	status,0,c
  1756  001258  3216               	rrcf	___lldiv@divisor+3,f,c
  1757  00125A  3215               	rrcf	___lldiv@divisor+2,f,c
  1758  00125C  3214               	rrcf	___lldiv@divisor+1,f,c
  1759  00125E  3213               	rrcf	___lldiv@divisor,f,c
  1760  001260  2E1B               	decfsz	___lldiv@counter,f,c
  1761  001262  D7E1               	goto	l1187
  1762  001264                     l1019:
  1763  001264  C017  F00F         	movff	___lldiv@quotient,?___lldiv
  1764  001268  C018  F010         	movff	___lldiv@quotient+1,?___lldiv+1
  1765  00126C  C019  F011         	movff	___lldiv@quotient+2,?___lldiv+2
  1766  001270  C01A  F012         	movff	___lldiv@quotient+3,?___lldiv+3
  1767  001274  0012               	return	
  1768  001276                     __end_of___lldiv:
  1769                           	opt stack 0
  1770                           tblptru	equ	0xFF8
  1771                           intcon	equ	0xFF2
  1772                           postinc0	equ	0xFEE
  1773                           wreg	equ	0xFE8
  1774                           status	equ	0xFD8
  1775                           
  1776 ;; *************** function _SYSTEM_Initialize *****************
  1777 ;; Defined at:
  1778 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1779 ;; Parameters:    Size  Location     Type
  1780 ;;		None
  1781 ;; Auto vars:     Size  Location     Type
  1782 ;;		None
  1783 ;; Return value:  Size  Location     Type
  1784 ;;		None               void
  1785 ;; Registers used:
  1786 ;;		wreg, status,2, status,0, cstack
  1787 ;; Tracked objects:
  1788 ;;		On entry : 0/0
  1789 ;;		On exit  : 0/0
  1790 ;;		Unchanged: 0/0
  1791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1792 ;;      Params:         0       0       0       0       0       0       0       0       0
  1793 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1794 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1795 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1796 ;;Total ram usage:        0 bytes
  1797 ;; Hardware stack levels used:    1
  1798 ;; Hardware stack levels required when called:    3
  1799 ;; This function calls:
  1800 ;;		_EUSART1_Initialize
  1801 ;;		_INTERRUPT_Initialize
  1802 ;;		_OSCILLATOR_Initialize
  1803 ;;		_PIN_MANAGER_Initialize
  1804 ;; This function is called by:
  1805 ;;		_main
  1806 ;; This function uses a non-reentrant model
  1807 ;;
  1808                           
  1809                           	psect	text9
  1810  001596                     __ptext9:
  1811                           	opt stack 0
  1812  001596                     _SYSTEM_Initialize:
  1813                           	opt stack 27
  1814                           
  1815                           ;mcc.c: 53: INTERRUPT_Initialize();
  1816                           
  1817                           ;incstack = 0
  1818  001596  EC0C  F00B         	call	_INTERRUPT_Initialize	;wreg free
  1819                           
  1820                           ;mcc.c: 54: PIN_MANAGER_Initialize();
  1821  00159A  ECF2  F009         	call	_PIN_MANAGER_Initialize	;wreg free
  1822                           
  1823                           ;mcc.c: 55: OSCILLATOR_Initialize();
  1824  00159E  ECD4  F00A         	call	_OSCILLATOR_Initialize	;wreg free
  1825                           
  1826                           ;mcc.c: 56: EUSART1_Initialize();
  1827  0015A2  EC6F  F009         	call	_EUSART1_Initialize	;wreg free
  1828  0015A6  0012               	return	
  1829  0015A8                     __end_of_SYSTEM_Initialize:
  1830                           	opt stack 0
  1831                           tblptru	equ	0xFF8
  1832                           intcon	equ	0xFF2
  1833                           postinc0	equ	0xFEE
  1834                           wreg	equ	0xFE8
  1835                           status	equ	0xFD8
  1836                           
  1837 ;; *************** function _PIN_MANAGER_Initialize *****************
  1838 ;; Defined at:
  1839 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1840 ;; Parameters:    Size  Location     Type
  1841 ;;		None
  1842 ;; Auto vars:     Size  Location     Type
  1843 ;;		None
  1844 ;; Return value:  Size  Location     Type
  1845 ;;		None               void
  1846 ;; Registers used:
  1847 ;;		wreg, status,2
  1848 ;; Tracked objects:
  1849 ;;		On entry : 0/0
  1850 ;;		On exit  : 0/0
  1851 ;;		Unchanged: 0/0
  1852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1853 ;;      Params:         0       0       0       0       0       0       0       0       0
  1854 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1855 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1856 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1857 ;;Total ram usage:        0 bytes
  1858 ;; Hardware stack levels used:    1
  1859 ;; Hardware stack levels required when called:    1
  1860 ;; This function calls:
  1861 ;;		Nothing
  1862 ;; This function is called by:
  1863 ;;		_SYSTEM_Initialize
  1864 ;; This function uses a non-reentrant model
  1865 ;;
  1866                           
  1867                           	psect	text10
  1868  0013E4                     __ptext10:
  1869                           	opt stack 0
  1870  0013E4                     _PIN_MANAGER_Initialize:
  1871                           	opt stack 28
  1872                           
  1873                           ;pin_manager.c: 60: LATE = 0x00;
  1874                           
  1875                           ;incstack = 0
  1876  0013E4  0E00               	movlw	0
  1877  0013E6  6E8D               	movwf	3981,c	;volatile
  1878                           
  1879                           ;pin_manager.c: 61: LATD = 0x00;
  1880  0013E8  0E00               	movlw	0
  1881  0013EA  6E8C               	movwf	3980,c	;volatile
  1882                           
  1883                           ;pin_manager.c: 62: LATA = 0x00;
  1884  0013EC  0E00               	movlw	0
  1885  0013EE  6E89               	movwf	3977,c	;volatile
  1886                           
  1887                           ;pin_manager.c: 63: LATB = 0x00;
  1888  0013F0  0E00               	movlw	0
  1889  0013F2  6E8A               	movwf	3978,c	;volatile
  1890                           
  1891                           ;pin_manager.c: 64: LATC = 0x00;
  1892  0013F4  0E00               	movlw	0
  1893  0013F6  6E8B               	movwf	3979,c	;volatile
  1894                           
  1895                           ;pin_manager.c: 69: TRISE = 0x05;
  1896  0013F8  0E05               	movlw	5
  1897  0013FA  6E96               	movwf	3990,c	;volatile
  1898                           
  1899                           ;pin_manager.c: 70: TRISA = 0xFE;
  1900  0013FC  0EFE               	movlw	254
  1901  0013FE  6E92               	movwf	3986,c	;volatile
  1902                           
  1903                           ;pin_manager.c: 71: TRISB = 0xC2;
  1904  001400  0EC2               	movlw	194
  1905  001402  6E93               	movwf	3987,c	;volatile
  1906                           
  1907                           ;pin_manager.c: 72: TRISC = 0x81;
  1908  001404  0E81               	movlw	129
  1909  001406  6E94               	movwf	3988,c	;volatile
  1910                           
  1911                           ;pin_manager.c: 73: TRISD = 0xFF;
  1912  001408  6895               	setf	3989,c	;volatile
  1913                           
  1914                           ;pin_manager.c: 78: ANSELD = 0x01;
  1915  00140A  0E01               	movlw	1
  1916  00140C  010F               	movlb	15	; () banked
  1917  00140E  6F5E               	movwf	94,b	;volatile
  1918                           
  1919                           ;pin_manager.c: 79: ANSELC = 0x00;
  1920  001410  0E00               	movlw	0
  1921  001412  010F               	movlb	15	; () banked
  1922  001414  6F5D               	movwf	93,b	;volatile
  1923                           
  1924                           ;pin_manager.c: 80: ANSELB = 0x00;
  1925  001416  0E00               	movlw	0
  1926  001418  010F               	movlb	15	; () banked
  1927  00141A  6F5C               	movwf	92,b	;volatile
  1928                           
  1929                           ;pin_manager.c: 81: ANSELE = 0x05;
  1930  00141C  0E05               	movlw	5
  1931  00141E  010F               	movlb	15	; () banked
  1932  001420  6F5F               	movwf	95,b	;volatile
  1933                           
  1934                           ;pin_manager.c: 82: ANSELA = 0x2E;
  1935  001422  0E2E               	movlw	46
  1936  001424  010F               	movlb	15	; () banked
  1937  001426  6F5B               	movwf	91,b	;volatile
  1938                           
  1939                           ; BSR set to: 15
  1940                           ;pin_manager.c: 88: INTCON2bits.nRBPU = 1;
  1941  001428  8EF1               	bsf	intcon2,7,c	;volatile
  1942                           
  1943                           ; BSR set to: 15
  1944  00142A  0012               	return	
  1945  00142C                     __end_of_PIN_MANAGER_Initialize:
  1946                           	opt stack 0
  1947                           tblptru	equ	0xFF8
  1948                           intcon	equ	0xFF2
  1949                           intcon2	equ	0xFF1
  1950                           postinc0	equ	0xFEE
  1951                           wreg	equ	0xFE8
  1952                           status	equ	0xFD8
  1953                           
  1954 ;; *************** function _OSCILLATOR_Initialize *****************
  1955 ;; Defined at:
  1956 ;;		line 60 in file "mcc_generated_files/mcc.c"
  1957 ;; Parameters:    Size  Location     Type
  1958 ;;		None
  1959 ;; Auto vars:     Size  Location     Type
  1960 ;;		None
  1961 ;; Return value:  Size  Location     Type
  1962 ;;		None               void
  1963 ;; Registers used:
  1964 ;;		wreg, status,2
  1965 ;; Tracked objects:
  1966 ;;		On entry : 0/0
  1967 ;;		On exit  : 0/0
  1968 ;;		Unchanged: 0/0
  1969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1970 ;;      Params:         0       0       0       0       0       0       0       0       0
  1971 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1972 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1973 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1974 ;;Total ram usage:        0 bytes
  1975 ;; Hardware stack levels used:    1
  1976 ;; Hardware stack levels required when called:    1
  1977 ;; This function calls:
  1978 ;;		Nothing
  1979 ;; This function is called by:
  1980 ;;		_SYSTEM_Initialize
  1981 ;; This function uses a non-reentrant model
  1982 ;;
  1983                           
  1984                           	psect	text11
  1985  0015A8                     __ptext11:
  1986                           	opt stack 0
  1987  0015A8                     _OSCILLATOR_Initialize:
  1988                           	opt stack 28
  1989                           
  1990                           ;mcc.c: 63: OSCCON = 0x52;
  1991                           
  1992                           ; BSR set to: 15
  1993                           ;incstack = 0
  1994  0015A8  0E52               	movlw	82
  1995  0015AA  6ED3               	movwf	4051,c	;volatile
  1996                           
  1997                           ;mcc.c: 65: OSCCON2 = 0x00;
  1998  0015AC  0E00               	movlw	0
  1999  0015AE  6ED2               	movwf	4050,c	;volatile
  2000                           
  2001                           ;mcc.c: 67: OSCTUNE = 0x00;
  2002  0015B0  0E00               	movlw	0
  2003  0015B2  6E9B               	movwf	3995,c	;volatile
  2004                           
  2005                           ;mcc.c: 69: ACTCON = 0x00;
  2006  0015B4  0E00               	movlw	0
  2007  0015B6  6EB5               	movwf	4021,c	;volatile
  2008  0015B8  0012               	return	
  2009  0015BA                     __end_of_OSCILLATOR_Initialize:
  2010                           	opt stack 0
  2011                           tblptru	equ	0xFF8
  2012                           intcon	equ	0xFF2
  2013                           intcon2	equ	0xFF1
  2014                           postinc0	equ	0xFEE
  2015                           wreg	equ	0xFE8
  2016                           status	equ	0xFD8
  2017                           
  2018 ;; *************** function _INTERRUPT_Initialize *****************
  2019 ;; Defined at:
  2020 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2021 ;; Parameters:    Size  Location     Type
  2022 ;;		None
  2023 ;; Auto vars:     Size  Location     Type
  2024 ;;		None
  2025 ;; Return value:  Size  Location     Type
  2026 ;;		None               void
  2027 ;; Registers used:
  2028 ;;		None
  2029 ;; Tracked objects:
  2030 ;;		On entry : 0/0
  2031 ;;		On exit  : 0/0
  2032 ;;		Unchanged: 0/0
  2033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2034 ;;      Params:         0       0       0       0       0       0       0       0       0
  2035 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2036 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2037 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2038 ;;Total ram usage:        0 bytes
  2039 ;; Hardware stack levels used:    1
  2040 ;; Hardware stack levels required when called:    1
  2041 ;; This function calls:
  2042 ;;		Nothing
  2043 ;; This function is called by:
  2044 ;;		_SYSTEM_Initialize
  2045 ;; This function uses a non-reentrant model
  2046 ;;
  2047                           
  2048                           	psect	text12
  2049  001618                     __ptext12:
  2050                           	opt stack 0
  2051  001618                     _INTERRUPT_Initialize:
  2052                           	opt stack 28
  2053                           
  2054                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
  2055                           
  2056                           ;incstack = 0
  2057  001618  9ED0               	bcf	4048,7,c	;volatile
  2058  00161A  0012               	return	
  2059  00161C                     __end_of_INTERRUPT_Initialize:
  2060                           	opt stack 0
  2061                           tblptru	equ	0xFF8
  2062                           intcon	equ	0xFF2
  2063                           intcon2	equ	0xFF1
  2064                           postinc0	equ	0xFEE
  2065                           wreg	equ	0xFE8
  2066                           status	equ	0xFD8
  2067                           
  2068 ;; *************** function _EUSART1_Initialize *****************
  2069 ;; Defined at:
  2070 ;;		line 83 in file "mcc_generated_files/eusart1.c"
  2071 ;; Parameters:    Size  Location     Type
  2072 ;;		None
  2073 ;; Auto vars:     Size  Location     Type
  2074 ;;		None
  2075 ;; Return value:  Size  Location     Type
  2076 ;;		None               void
  2077 ;; Registers used:
  2078 ;;		wreg, status,2, status,0, cstack
  2079 ;; Tracked objects:
  2080 ;;		On entry : 0/0
  2081 ;;		On exit  : 0/0
  2082 ;;		Unchanged: 0/0
  2083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2084 ;;      Params:         0       0       0       0       0       0       0       0       0
  2085 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2086 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2087 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2088 ;;Total ram usage:        0 bytes
  2089 ;; Hardware stack levels used:    1
  2090 ;; Hardware stack levels required when called:    2
  2091 ;; This function calls:
  2092 ;;		_EUSART1_SetErrorHandler
  2093 ;;		_EUSART1_SetFramingErrorHandler
  2094 ;;		_EUSART1_SetOverrunErrorHandler
  2095 ;;		_EUSART1_SetRxInterruptHandler
  2096 ;; This function is called by:
  2097 ;;		_SYSTEM_Initialize
  2098 ;; This function uses a non-reentrant model
  2099 ;;
  2100                           
  2101                           	psect	text13
  2102  0012DE                     __ptext13:
  2103                           	opt stack 0
  2104  0012DE                     _EUSART1_Initialize:
  2105                           	opt stack 27
  2106                           
  2107                           ;eusart1.c: 86: PIE1bits.RC1IE = 0;
  2108                           
  2109                           ;incstack = 0
  2110  0012DE  9A9D               	bcf	3997,5,c	;volatile
  2111                           
  2112                           ;eusart1.c: 87: EUSART1_SetRxInterruptHandler(EUSART1_Receive_ISR);
  2113  0012E0  0E00               	movlw	0
  2114  0012E2  6E10               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler+1,c
  2115  0012E4  0E00               	movlw	0
  2116  0012E6  6E0F               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler,c
  2117  0012E8  ECF3  F00A         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  2118                           
  2119                           ;eusart1.c: 91: BAUDCON1 = 0x08;
  2120  0012EC  0E08               	movlw	8
  2121  0012EE  6EB8               	movwf	4024,c	;volatile
  2122                           
  2123                           ;eusart1.c: 94: RCSTA1 = 0x90;
  2124  0012F0  0E90               	movlw	144
  2125  0012F2  6EAB               	movwf	4011,c	;volatile
  2126                           
  2127                           ;eusart1.c: 97: TXSTA1 = 0x24;
  2128  0012F4  0E24               	movlw	36
  2129  0012F6  6EAC               	movwf	4012,c	;volatile
  2130                           
  2131                           ;eusart1.c: 100: SPBRG1 = 0x67;
  2132  0012F8  0E67               	movlw	103
  2133  0012FA  6EAF               	movwf	4015,c	;volatile
  2134                           
  2135                           ;eusart1.c: 103: SPBRGH1 = 0x00;
  2136  0012FC  0E00               	movlw	0
  2137  0012FE  6EB0               	movwf	4016,c	;volatile
  2138                           
  2139                           ;eusart1.c: 106: EUSART1_SetFramingErrorHandler(EUSART1_DefaultFramingErrorHandler);
  2140  001300  0E00               	movlw	0
  2141  001302  6E10               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1,c
  2142  001304  0E00               	movlw	0
  2143  001306  6E0F               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler,c
  2144  001308  ECFD  F00A         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  2145                           
  2146                           ;eusart1.c: 107: EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOverrunErrorHandler);
  2147  00130C  0E00               	movlw	0
  2148  00130E  6E10               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,c
  2149  001310  0E00               	movlw	0
  2150  001312  6E0F               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler,c
  2151  001314  ECF8  F00A         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  2152                           
  2153                           ;eusart1.c: 108: EUSART1_SetErrorHandler(EUSART1_DefaultErrorHandler);
  2154  001318  0E00               	movlw	0
  2155  00131A  6E10               	movwf	EUSART1_SetErrorHandler@interruptHandler+1,c
  2156  00131C  0E00               	movlw	0
  2157  00131E  6E0F               	movwf	EUSART1_SetErrorHandler@interruptHandler,c
  2158  001320  EC02  F00B         	call	_EUSART1_SetErrorHandler	;wreg free
  2159                           
  2160                           ;eusart1.c: 110: eusart1RxLastError.status = 0;
  2161  001324  0E00               	movlw	0
  2162  001326  6E4C               	movwf	_eusart1RxLastError,c	;volatile
  2163                           
  2164                           ;eusart1.c: 113: eusart1RxHead = 0;
  2165  001328  0E00               	movlw	0
  2166  00132A  6E4B               	movwf	_eusart1RxHead,c	;volatile
  2167                           
  2168                           ;eusart1.c: 114: eusart1RxTail = 0;
  2169  00132C  0E00               	movlw	0
  2170  00132E  6E4D               	movwf	_eusart1RxTail,c	;volatile
  2171                           
  2172                           ;eusart1.c: 115: eusart1RxCount = 0;
  2173  001330  0E00               	movlw	0
  2174  001332  6E4A               	movwf	_eusart1RxCount,c	;volatile
  2175                           
  2176                           ;eusart1.c: 118: PIE1bits.RC1IE = 1;
  2177  001334  8A9D               	bsf	3997,5,c	;volatile
  2178  001336  0012               	return	
  2179  001338                     __end_of_EUSART1_Initialize:
  2180                           	opt stack 0
  2181                           tblptru	equ	0xFF8
  2182                           intcon	equ	0xFF2
  2183                           intcon2	equ	0xFF1
  2184                           postinc0	equ	0xFEE
  2185                           wreg	equ	0xFE8
  2186                           status	equ	0xFD8
  2187                           
  2188 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  2189 ;; Defined at:
  2190 ;;		line 255 in file "mcc_generated_files/eusart1.c"
  2191 ;; Parameters:    Size  Location     Type
  2192 ;;  interruptHan    2   14[COMRAM] PTR FTN()void 
  2193 ;;		 -> EUSART1_Receive_ISR(0), 
  2194 ;; Auto vars:     Size  Location     Type
  2195 ;;		None
  2196 ;; Return value:  Size  Location     Type
  2197 ;;		None               void
  2198 ;; Registers used:
  2199 ;;		wreg, status,2, status,0
  2200 ;; Tracked objects:
  2201 ;;		On entry : 0/0
  2202 ;;		On exit  : 0/0
  2203 ;;		Unchanged: 0/0
  2204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2205 ;;      Params:         2       0       0       0       0       0       0       0       0
  2206 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2207 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2208 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2209 ;;Total ram usage:        2 bytes
  2210 ;; Hardware stack levels used:    1
  2211 ;; Hardware stack levels required when called:    1
  2212 ;; This function calls:
  2213 ;;		Nothing
  2214 ;; This function is called by:
  2215 ;;		_EUSART1_Initialize
  2216 ;; This function uses a non-reentrant model
  2217 ;;
  2218                           
  2219                           	psect	text14
  2220  0015E6                     __ptext14:
  2221                           	opt stack 0
  2222  0015E6                     _EUSART1_SetRxInterruptHandler:
  2223                           	opt stack 27
  2224                           
  2225                           ;eusart1.c: 256: EUSART1_RxDefaultInterruptHandler = interruptHandler;
  2226                           
  2227                           ;incstack = 0
  2228  0015E6  C010  F055         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  2229  0015EA  C00F  F054         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  2230  0015EE  0012               	return	
  2231  0015F0                     __end_of_EUSART1_SetRxInterruptHandler:
  2232                           	opt stack 0
  2233                           tblptru	equ	0xFF8
  2234                           intcon	equ	0xFF2
  2235                           intcon2	equ	0xFF1
  2236                           postinc0	equ	0xFEE
  2237                           wreg	equ	0xFE8
  2238                           status	equ	0xFD8
  2239                           
  2240 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  2241 ;; Defined at:
  2242 ;;		line 246 in file "mcc_generated_files/eusart1.c"
  2243 ;; Parameters:    Size  Location     Type
  2244 ;;  interruptHan    2   14[COMRAM] PTR FTN()void 
  2245 ;;		 -> EUSART1_DefaultOverrunErrorHandler(0), 
  2246 ;; Auto vars:     Size  Location     Type
  2247 ;;		None
  2248 ;; Return value:  Size  Location     Type
  2249 ;;		None               void
  2250 ;; Registers used:
  2251 ;;		wreg, status,2, status,0
  2252 ;; Tracked objects:
  2253 ;;		On entry : 0/0
  2254 ;;		On exit  : 0/0
  2255 ;;		Unchanged: 0/0
  2256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2257 ;;      Params:         2       0       0       0       0       0       0       0       0
  2258 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2259 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2260 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2261 ;;Total ram usage:        2 bytes
  2262 ;; Hardware stack levels used:    1
  2263 ;; Hardware stack levels required when called:    1
  2264 ;; This function calls:
  2265 ;;		Nothing
  2266 ;; This function is called by:
  2267 ;;		_EUSART1_Initialize
  2268 ;; This function uses a non-reentrant model
  2269 ;;
  2270                           
  2271                           	psect	text15
  2272  0015F0                     __ptext15:
  2273                           	opt stack 0
  2274  0015F0                     _EUSART1_SetOverrunErrorHandler:
  2275                           	opt stack 27
  2276                           
  2277                           ;eusart1.c: 247: EUSART1_OverrunErrorHandler = interruptHandler;
  2278                           
  2279                           ;incstack = 0
  2280  0015F0  C010  F053         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  2281  0015F4  C00F  F052         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  2282  0015F8  0012               	return	
  2283  0015FA                     __end_of_EUSART1_SetOverrunErrorHandler:
  2284                           	opt stack 0
  2285                           tblptru	equ	0xFF8
  2286                           intcon	equ	0xFF2
  2287                           intcon2	equ	0xFF1
  2288                           postinc0	equ	0xFEE
  2289                           wreg	equ	0xFE8
  2290                           status	equ	0xFD8
  2291                           
  2292 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  2293 ;; Defined at:
  2294 ;;		line 242 in file "mcc_generated_files/eusart1.c"
  2295 ;; Parameters:    Size  Location     Type
  2296 ;;  interruptHan    2   14[COMRAM] PTR FTN()void 
  2297 ;;		 -> EUSART1_DefaultFramingErrorHandler(0), 
  2298 ;; Auto vars:     Size  Location     Type
  2299 ;;		None
  2300 ;; Return value:  Size  Location     Type
  2301 ;;		None               void
  2302 ;; Registers used:
  2303 ;;		wreg, status,2, status,0
  2304 ;; Tracked objects:
  2305 ;;		On entry : 0/0
  2306 ;;		On exit  : 0/0
  2307 ;;		Unchanged: 0/0
  2308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2309 ;;      Params:         2       0       0       0       0       0       0       0       0
  2310 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2311 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2312 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2313 ;;Total ram usage:        2 bytes
  2314 ;; Hardware stack levels used:    1
  2315 ;; Hardware stack levels required when called:    1
  2316 ;; This function calls:
  2317 ;;		Nothing
  2318 ;; This function is called by:
  2319 ;;		_EUSART1_Initialize
  2320 ;; This function uses a non-reentrant model
  2321 ;;
  2322                           
  2323                           	psect	text16
  2324  0015FA                     __ptext16:
  2325                           	opt stack 0
  2326  0015FA                     _EUSART1_SetFramingErrorHandler:
  2327                           	opt stack 27
  2328                           
  2329                           ;eusart1.c: 243: EUSART1_FramingErrorHandler = interruptHandler;
  2330                           
  2331                           ;incstack = 0
  2332  0015FA  C010  F051         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  2333  0015FE  C00F  F050         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  2334  001602  0012               	return	
  2335  001604                     __end_of_EUSART1_SetFramingErrorHandler:
  2336                           	opt stack 0
  2337                           tblptru	equ	0xFF8
  2338                           intcon	equ	0xFF2
  2339                           intcon2	equ	0xFF1
  2340                           postinc0	equ	0xFEE
  2341                           wreg	equ	0xFE8
  2342                           status	equ	0xFD8
  2343                           
  2344 ;; *************** function _EUSART1_SetErrorHandler *****************
  2345 ;; Defined at:
  2346 ;;		line 250 in file "mcc_generated_files/eusart1.c"
  2347 ;; Parameters:    Size  Location     Type
  2348 ;;  interruptHan    2   14[COMRAM] PTR FTN()void 
  2349 ;;		 -> EUSART1_DefaultErrorHandler(0), 
  2350 ;; Auto vars:     Size  Location     Type
  2351 ;;		None
  2352 ;; Return value:  Size  Location     Type
  2353 ;;		None               void
  2354 ;; Registers used:
  2355 ;;		wreg, status,2, status,0
  2356 ;; Tracked objects:
  2357 ;;		On entry : 0/0
  2358 ;;		On exit  : 0/0
  2359 ;;		Unchanged: 0/0
  2360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2361 ;;      Params:         2       0       0       0       0       0       0       0       0
  2362 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2363 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2364 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2365 ;;Total ram usage:        2 bytes
  2366 ;; Hardware stack levels used:    1
  2367 ;; Hardware stack levels required when called:    1
  2368 ;; This function calls:
  2369 ;;		Nothing
  2370 ;; This function is called by:
  2371 ;;		_EUSART1_Initialize
  2372 ;; This function uses a non-reentrant model
  2373 ;;
  2374                           
  2375                           	psect	text17
  2376  001604                     __ptext17:
  2377                           	opt stack 0
  2378  001604                     _EUSART1_SetErrorHandler:
  2379                           	opt stack 27
  2380                           
  2381                           ;eusart1.c: 251: EUSART1_ErrorHandler = interruptHandler;
  2382                           
  2383                           ;incstack = 0
  2384  001604  C010  F04F         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  2385  001608  C00F  F04E         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  2386  00160C  0012               	return	
  2387  00160E                     __end_of_EUSART1_SetErrorHandler:
  2388                           	opt stack 0
  2389                           tblptru	equ	0xFF8
  2390                           intcon	equ	0xFF2
  2391                           intcon2	equ	0xFF1
  2392                           postinc0	equ	0xFEE
  2393                           wreg	equ	0xFE8
  2394                           status	equ	0xFD8
  2395                           
  2396 ;; *************** function _Reversa *****************
  2397 ;; Defined at:
  2398 ;;		line 243 in file "main.c"
  2399 ;; Parameters:    Size  Location     Type
  2400 ;;		None
  2401 ;; Auto vars:     Size  Location     Type
  2402 ;;		None
  2403 ;; Return value:  Size  Location     Type
  2404 ;;		None               void
  2405 ;; Registers used:
  2406 ;;		wreg, cstack
  2407 ;; Tracked objects:
  2408 ;;		On entry : 0/0
  2409 ;;		On exit  : 0/0
  2410 ;;		Unchanged: 0/0
  2411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2412 ;;      Params:         0       0       0       0       0       0       0       0       0
  2413 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2414 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2415 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2416 ;;Total ram usage:        0 bytes
  2417 ;; Hardware stack levels used:    1
  2418 ;; Hardware stack levels required when called:    2
  2419 ;; This function calls:
  2420 ;;		_Sound
  2421 ;; This function is called by:
  2422 ;;		_main
  2423 ;; This function uses a non-reentrant model
  2424 ;;
  2425                           
  2426                           	psect	text18
  2427  0015CC                     __ptext18:
  2428                           	opt stack 0
  2429  0015CC                     _Reversa:
  2430                           	opt stack 28
  2431                           
  2432                           ;main.c: 244: LATBbits.LATB2=0;
  2433                           
  2434                           ;incstack = 0
  2435  0015CC  948A               	bcf	3978,2,c	;volatile
  2436                           
  2437                           ;main.c: 245: LATBbits.LATB3=1;
  2438  0015CE  868A               	bsf	3978,3,c	;volatile
  2439                           
  2440                           ;main.c: 246: LATBbits.LATB4=0;
  2441  0015D0  988A               	bcf	3978,4,c	;volatile
  2442                           
  2443                           ;main.c: 247: LATBbits.LATB5=1;
  2444  0015D2  8A8A               	bsf	3978,5,c	;volatile
  2445                           
  2446                           ;main.c: 248: Sound();
  2447  0015D4  EC96  F00A         	call	_Sound	;wreg free
  2448  0015D8  0012               	return	
  2449  0015DA                     __end_of_Reversa:
  2450                           	opt stack 0
  2451                           tblptru	equ	0xFF8
  2452                           intcon	equ	0xFF2
  2453                           intcon2	equ	0xFF1
  2454                           postinc0	equ	0xFEE
  2455                           wreg	equ	0xFE8
  2456                           status	equ	0xFD8
  2457                           
  2458 ;; *************** function _Sound *****************
  2459 ;; Defined at:
  2460 ;;		line 260 in file "main.c"
  2461 ;; Parameters:    Size  Location     Type
  2462 ;;		None
  2463 ;; Auto vars:     Size  Location     Type
  2464 ;;		None
  2465 ;; Return value:  Size  Location     Type
  2466 ;;		None               void
  2467 ;; Registers used:
  2468 ;;		wreg
  2469 ;; Tracked objects:
  2470 ;;		On entry : 0/0
  2471 ;;		On exit  : 0/0
  2472 ;;		Unchanged: 0/0
  2473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2474 ;;      Params:         0       0       0       0       0       0       0       0       0
  2475 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2476 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2477 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2478 ;;Total ram usage:        1 bytes
  2479 ;; Hardware stack levels used:    1
  2480 ;; Hardware stack levels required when called:    1
  2481 ;; This function calls:
  2482 ;;		Nothing
  2483 ;; This function is called by:
  2484 ;;		_Reversa
  2485 ;; This function uses a non-reentrant model
  2486 ;;
  2487                           
  2488                           	psect	text19
  2489  00152C                     __ptext19:
  2490                           	opt stack 0
  2491  00152C                     _Sound:
  2492                           	opt stack 28
  2493                           
  2494                           ;main.c: 261: LATCbits.LATC6=1;
  2495                           
  2496                           ;incstack = 0
  2497  00152C  8C8B               	bsf	3979,6,c	;volatile
  2498                           
  2499                           ;main.c: 262: _delay((unsigned long)((100)*(4000000/4000.0)));
  2500  00152E  0E82               	movlw	130
  2501  001530  6E0F               	movwf	??_Sound& (0+255),c
  2502  001532  0EDE               	movlw	222
  2503  001534                     u587:
  2504  001534  2EE8               	decfsz	wreg,f,c
  2505  001536  D7FE               	goto	u587
  2506  001538  2E0F               	decfsz	??_Sound& (0+255),f,c
  2507  00153A  D7FC               	goto	u587
  2508                           
  2509                           ;main.c: 263: LATCbits.LATC6=0;
  2510  00153C  9C8B               	bcf	3979,6,c	;volatile
  2511                           
  2512                           ;main.c: 264: _delay((unsigned long)((100)*(4000000/4000.0)));
  2513  00153E  0E82               	movlw	130
  2514  001540  6E0F               	movwf	??_Sound& (0+255),c
  2515  001542  0EDE               	movlw	222
  2516  001544                     u597:
  2517  001544  2EE8               	decfsz	wreg,f,c
  2518  001546  D7FE               	goto	u597
  2519  001548  2E0F               	decfsz	??_Sound& (0+255),f,c
  2520  00154A  D7FC               	goto	u597
  2521  00154C  0012               	return	
  2522  00154E                     __end_of_Sound:
  2523                           	opt stack 0
  2524                           tblptru	equ	0xFF8
  2525                           intcon	equ	0xFF2
  2526                           intcon2	equ	0xFF1
  2527                           postinc0	equ	0xFEE
  2528                           wreg	equ	0xFE8
  2529                           status	equ	0xFD8
  2530                           
  2531 ;; *************** function _Read_Status_nRF *****************
  2532 ;; Defined at:
  2533 ;;		line 105 in file "sensor.c"
  2534 ;; Parameters:    Size  Location     Type
  2535 ;;		None
  2536 ;; Auto vars:     Size  Location     Type
  2537 ;;  state           2   19[COMRAM] unsigned int 
  2538 ;; Return value:  Size  Location     Type
  2539 ;;                  2   16[COMRAM] int 
  2540 ;; Registers used:
  2541 ;;		wreg, status,2, status,0, cstack
  2542 ;; Tracked objects:
  2543 ;;		On entry : 0/0
  2544 ;;		On exit  : 0/0
  2545 ;;		Unchanged: 0/0
  2546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2547 ;;      Params:         2       0       0       0       0       0       0       0       0
  2548 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2549 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2550 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2551 ;;Total ram usage:        5 bytes
  2552 ;; Hardware stack levels used:    1
  2553 ;; Hardware stack levels required when called:    2
  2554 ;; This function calls:
  2555 ;;		_ReadSPI1
  2556 ;;		_WriteSPI1
  2557 ;; This function is called by:
  2558 ;;		_main
  2559 ;; This function uses a non-reentrant model
  2560 ;;
  2561                           
  2562                           	psect	text20
  2563  0014DC                     __ptext20:
  2564                           	opt stack 0
  2565  0014DC                     _Read_Status_nRF:
  2566                           	opt stack 28
  2567                           
  2568                           ;sensor.c: 107: unsigned int state=0;
  2569                           
  2570                           ;incstack = 0
  2571  0014DC  0E00               	movlw	0
  2572  0014DE  6E15               	movwf	Read_Status_nRF@state+1,c
  2573  0014E0  0E00               	movlw	0
  2574  0014E2  6E14               	movwf	Read_Status_nRF@state,c
  2575                           
  2576                           ;sensor.c: 108: PORTBbits.RB4=0;
  2577  0014E4  9881               	bcf	3969,4,c	;volatile
  2578                           
  2579                           ;sensor.c: 109: WriteSPI1(0x07);
  2580  0014E6  0E07               	movlw	7
  2581  0014E8  ECB4  F00A         	call	_WriteSPI1
  2582                           
  2583                           ;sensor.c: 110: state = ReadSPI1();
  2584  0014EC  ECDD  F00A         	call	_ReadSPI1	;wreg free
  2585  0014F0  6E13               	movwf	??_Read_Status_nRF& (0+255),c
  2586  0014F2  5013               	movf	??_Read_Status_nRF,w,c
  2587  0014F4  6E14               	movwf	Read_Status_nRF@state,c
  2588  0014F6  6A15               	clrf	Read_Status_nRF@state+1,c
  2589                           
  2590                           ;sensor.c: 111: PORTBbits.RB4=1;
  2591  0014F8  8881               	bsf	3969,4,c	;volatile
  2592                           
  2593                           ;sensor.c: 112: return state;
  2594  0014FA  C014  F011         	movff	Read_Status_nRF@state,?_Read_Status_nRF
  2595  0014FE  C015  F012         	movff	Read_Status_nRF@state+1,?_Read_Status_nRF+1
  2596  001502  0012               	return	
  2597  001504                     __end_of_Read_Status_nRF:
  2598                           	opt stack 0
  2599                           tblptru	equ	0xFF8
  2600                           intcon	equ	0xFF2
  2601                           intcon2	equ	0xFF1
  2602                           postinc0	equ	0xFEE
  2603                           wreg	equ	0xFE8
  2604                           status	equ	0xFD8
  2605                           
  2606 ;; *************** function _Read_Char_nRF *****************
  2607 ;; Defined at:
  2608 ;;		line 125 in file "sensor.c"
  2609 ;; Parameters:    Size  Location     Type
  2610 ;;		None
  2611 ;; Auto vars:     Size  Location     Type
  2612 ;;  caracter        1   16[COMRAM] unsigned char 
  2613 ;; Return value:  Size  Location     Type
  2614 ;;                  1    wreg      unsigned char 
  2615 ;; Registers used:
  2616 ;;		wreg, status,2, cstack
  2617 ;; Tracked objects:
  2618 ;;		On entry : 0/0
  2619 ;;		On exit  : 0/0
  2620 ;;		Unchanged: 0/0
  2621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2622 ;;      Params:         0       0       0       0       0       0       0       0       0
  2623 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2624 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2625 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2626 ;;Total ram usage:        1 bytes
  2627 ;; Hardware stack levels used:    1
  2628 ;; Hardware stack levels required when called:    2
  2629 ;; This function calls:
  2630 ;;		_ReadSPI1
  2631 ;;		_WriteSPI1
  2632 ;; This function is called by:
  2633 ;;		_main
  2634 ;; This function uses a non-reentrant model
  2635 ;;
  2636                           
  2637                           	psect	text21
  2638  00154E                     __ptext21:
  2639                           	opt stack 0
  2640  00154E                     _Read_Char_nRF:
  2641                           	opt stack 28
  2642                           
  2643                           ;sensor.c: 127: unsigned char caracter;
  2644                           ;sensor.c: 128: PORTBbits.RB4=0;
  2645                           
  2646                           ;incstack = 0
  2647  00154E  9881               	bcf	3969,4,c	;volatile
  2648                           
  2649                           ;sensor.c: 129: WriteSPI1(0x61);
  2650  001550  0E61               	movlw	97
  2651  001552  ECB4  F00A         	call	_WriteSPI1
  2652                           
  2653                           ;sensor.c: 130: WriteSPI1(0x00);
  2654  001556  0E00               	movlw	0
  2655  001558  ECB4  F00A         	call	_WriteSPI1
  2656                           
  2657                           ;sensor.c: 131: caracter = ReadSPI1();
  2658  00155C  ECDD  F00A         	call	_ReadSPI1	;wreg free
  2659  001560  6E11               	movwf	Read_Char_nRF@caracter,c
  2660                           
  2661                           ;sensor.c: 132: PORTBbits.RB4=1;
  2662  001562  8881               	bsf	3969,4,c	;volatile
  2663                           
  2664                           ;sensor.c: 133: return caracter;
  2665  001564  5011               	movf	Read_Char_nRF@caracter,w,c
  2666  001566  0012               	return	
  2667  001568                     __end_of_Read_Char_nRF:
  2668                           	opt stack 0
  2669                           tblptru	equ	0xFF8
  2670                           intcon	equ	0xFF2
  2671                           intcon2	equ	0xFF1
  2672                           postinc0	equ	0xFEE
  2673                           wreg	equ	0xFE8
  2674                           status	equ	0xFD8
  2675                           
  2676 ;; *************** function _ReadSPI1 *****************
  2677 ;; Defined at:
  2678 ;;		line 12 in file "/opt/microchip/xc8/v1.32/sources/pic18/plib/SPI/spi1read.c"
  2679 ;; Parameters:    Size  Location     Type
  2680 ;;		None
  2681 ;; Auto vars:     Size  Location     Type
  2682 ;;  TempVar         1   14[COMRAM] unsigned char 
  2683 ;; Return value:  Size  Location     Type
  2684 ;;                  1    wreg      unsigned char 
  2685 ;; Registers used:
  2686 ;;		wreg, status,2
  2687 ;; Tracked objects:
  2688 ;;		On entry : 0/0
  2689 ;;		On exit  : 0/0
  2690 ;;		Unchanged: 0/0
  2691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2692 ;;      Params:         0       0       0       0       0       0       0       0       0
  2693 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2694 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2695 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2696 ;;Total ram usage:        1 bytes
  2697 ;; Hardware stack levels used:    1
  2698 ;; Hardware stack levels required when called:    1
  2699 ;; This function calls:
  2700 ;;		Nothing
  2701 ;; This function is called by:
  2702 ;;		_Read_Status_nRF
  2703 ;;		_Read_Char_nRF
  2704 ;; This function uses a non-reentrant model
  2705 ;;
  2706                           
  2707                           	psect	text22
  2708  0015BA                     __ptext22:
  2709                           	opt stack 0
  2710  0015BA                     _ReadSPI1:
  2711                           	opt stack 28
  2712                           
  2713                           ;incstack = 0
  2714  0015BA  CFC9 F00F          	movff	4041,ReadSPI1@TempVar	;volatile
  2715  0015BE  969E               	bcf	3998,3,c	;volatile
  2716  0015C0  0E00               	movlw	0
  2717  0015C2  6EC9               	movwf	4041,c	;volatile
  2718  0015C4                     l548:
  2719  0015C4  A69E               	btfss	3998,3,c	;volatile
  2720  0015C6  D7FE               	goto	l548
  2721  0015C8  50C9               	movf	4041,w,c	;volatile
  2722  0015CA  0012               	return	
  2723  0015CC                     __end_of_ReadSPI1:
  2724                           	opt stack 0
  2725                           tblptru	equ	0xFF8
  2726                           intcon	equ	0xFF2
  2727                           intcon2	equ	0xFF1
  2728                           postinc0	equ	0xFEE
  2729                           wreg	equ	0xFE8
  2730                           status	equ	0xFD8
  2731                           
  2732 ;; *************** function _RXmod_nRF *****************
  2733 ;; Defined at:
  2734 ;;		line 76 in file "sensor.c"
  2735 ;; Parameters:    Size  Location     Type
  2736 ;;		None
  2737 ;; Auto vars:     Size  Location     Type
  2738 ;;		None
  2739 ;; Return value:  Size  Location     Type
  2740 ;;		None               void
  2741 ;; Registers used:
  2742 ;;		wreg, cstack
  2743 ;; Tracked objects:
  2744 ;;		On entry : 0/0
  2745 ;;		On exit  : 0/0
  2746 ;;		Unchanged: 0/0
  2747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2748 ;;      Params:         0       0       0       0       0       0       0       0       0
  2749 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2750 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2751 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2752 ;;Total ram usage:        0 bytes
  2753 ;; Hardware stack levels used:    1
  2754 ;; Hardware stack levels required when called:    2
  2755 ;; This function calls:
  2756 ;;		_WriteSPI1
  2757 ;; This function is called by:
  2758 ;;		_main
  2759 ;; This function uses a non-reentrant model
  2760 ;;
  2761                           
  2762                           	psect	text23
  2763  001504                     __ptext23:
  2764                           	opt stack 0
  2765  001504                     _RXmod_nRF:
  2766                           	opt stack 28
  2767                           
  2768                           ;sensor.c: 78: PORTBbits.RB5=0;
  2769                           
  2770                           ;incstack = 0
  2771  001504  9A81               	bcf	3969,5,c	;volatile
  2772                           
  2773                           ;sensor.c: 79: _delay((unsigned long)((150)*(4000000/4000000.0)));
  2774  001506  0E32               	movlw	50
  2775  001508                     u607:
  2776  001508  2EE8               	decfsz	wreg,f,c
  2777  00150A  D7FE               	goto	u607
  2778                           
  2779                           ;sensor.c: 80: PORTBbits.RB4=0;
  2780  00150C  9881               	bcf	3969,4,c	;volatile
  2781                           
  2782                           ;sensor.c: 81: WriteSPI1(0x20);
  2783  00150E  0E20               	movlw	32
  2784  001510  ECB4  F00A         	call	_WriteSPI1
  2785                           
  2786                           ;sensor.c: 82: WriteSPI1(0x03);
  2787  001514  0E03               	movlw	3
  2788  001516  ECB4  F00A         	call	_WriteSPI1
  2789                           
  2790                           ;sensor.c: 83: PORTBbits.RB4=1;
  2791  00151A  8881               	bsf	3969,4,c	;volatile
  2792                           
  2793                           ;sensor.c: 84: _delay((unsigned long)((150)*(4000000/4000000.0)));
  2794  00151C  0E32               	movlw	50
  2795  00151E                     u617:
  2796  00151E  2EE8               	decfsz	wreg,f,c
  2797  001520  D7FE               	goto	u617
  2798                           
  2799                           ;sensor.c: 85: PORTBbits.RB5=1;
  2800  001522  8A81               	bsf	3969,5,c	;volatile
  2801                           
  2802                           ;sensor.c: 86: _delay((unsigned long)((150)*(4000000/4000000.0)));
  2803  001524  0E32               	movlw	50
  2804  001526                     u627:
  2805  001526  2EE8               	decfsz	wreg,f,c
  2806  001528  D7FE               	goto	u627
  2807  00152A  0012               	return	
  2808  00152C                     __end_of_RXmod_nRF:
  2809                           	opt stack 0
  2810                           tblptru	equ	0xFF8
  2811                           intcon	equ	0xFF2
  2812                           intcon2	equ	0xFF1
  2813                           postinc0	equ	0xFEE
  2814                           wreg	equ	0xFE8
  2815                           status	equ	0xFD8
  2816                           
  2817 ;; *************** function _Lcd_Out *****************
  2818 ;; Defined at:
  2819 ;;		line 116 in file "LCD.h"
  2820 ;; Parameters:    Size  Location     Type
  2821 ;;  y               1    wreg     unsigned char 
  2822 ;;  x               1   17[COMRAM] unsigned char 
  2823 ;;  buffer          2   18[COMRAM] PTR const unsigned char 
  2824 ;;		 -> STR_1(4), 
  2825 ;; Auto vars:     Size  Location     Type
  2826 ;;  y               1   20[COMRAM] unsigned char 
  2827 ;;  data            1   21[COMRAM] unsigned char 
  2828 ;; Return value:  Size  Location     Type
  2829 ;;		None               void
  2830 ;; Registers used:
  2831 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2832 ;; Tracked objects:
  2833 ;;		On entry : 0/0
  2834 ;;		On exit  : 0/0
  2835 ;;		Unchanged: 0/0
  2836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2837 ;;      Params:         3       0       0       0       0       0       0       0       0
  2838 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2839 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2840 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2841 ;;Total ram usage:        5 bytes
  2842 ;; Hardware stack levels used:    1
  2843 ;; Hardware stack levels required when called:    2
  2844 ;; This function calls:
  2845 ;;		_Lcd_Chr_CP
  2846 ;;		_Lcd_Cmd
  2847 ;; This function is called by:
  2848 ;;		_main
  2849 ;; This function uses a non-reentrant model
  2850 ;;
  2851                           
  2852                           	psect	text24
  2853  001276                     __ptext24:
  2854                           	opt stack 0
  2855  001276                     _Lcd_Out:
  2856                           	opt stack 28
  2857                           
  2858                           ;incstack = 0
  2859                           ;Lcd_Out@y stored from wreg
  2860  001276  6E15               	movwf	Lcd_Out@y,c
  2861                           
  2862                           ;LCD.h: 118: unsigned char data;
  2863                           ;LCD.h: 119: switch (y)
  2864  001278  D00D               	goto	l1549
  2865  00127A                     l1539:
  2866  00127A  5012               	movf	Lcd_Out@x,w,c
  2867  00127C  0F80               	addlw	128
  2868  00127E  D008               	goto	L3
  2869  001280                     l1541:
  2870  001280  5012               	movf	Lcd_Out@x,w,c
  2871  001282  0FC0               	addlw	192
  2872  001284  D005               	goto	L3
  2873  001286                     l1543:
  2874  001286  5012               	movf	Lcd_Out@x,w,c
  2875  001288  0F94               	addlw	148
  2876  00128A  D002               	goto	L3
  2877  00128C                     l1545:
  2878  00128C  5012               	movf	Lcd_Out@x,w,c
  2879  00128E  0FD4               	addlw	212
  2880  001290                     L3:
  2881  001290  6E16               	movwf	Lcd_Out@data,c
  2882  001292  D00D               	goto	l1551
  2883  001294                     l1549:
  2884  001294  5015               	movf	Lcd_Out@y,w,c
  2885                           
  2886                           ; Switch size 1, requested type "space"
  2887                           ; Number of cases is 4, Range of values is 1 to 4
  2888                           ; switch strategies available:
  2889                           ; Name         Instructions Cycles
  2890                           ; simple_byte           13     7 (average)
  2891                           ;	Chosen strategy is simple_byte
  2892  001296  0A01               	xorlw	1	; case 1
  2893  001298  B4D8               	btfsc	status,2,c
  2894  00129A  D7EF               	goto	l1539
  2895  00129C  0A03               	xorlw	3	; case 2
  2896  00129E  B4D8               	btfsc	status,2,c
  2897  0012A0  D7EF               	goto	l1541
  2898  0012A2  0A01               	xorlw	1	; case 3
  2899  0012A4  B4D8               	btfsc	status,2,c
  2900  0012A6  D7EF               	goto	l1543
  2901  0012A8  0A07               	xorlw	7	; case 4
  2902  0012AA  B4D8               	btfsc	status,2,c
  2903  0012AC  D7EF               	goto	l1545
  2904  0012AE                     l1551:
  2905                           
  2906                           ;LCD.h: 127: Lcd_Cmd(data);
  2907  0012AE  5016               	movf	Lcd_Out@data,w,c
  2908  0012B0  ECFC  F007         	call	_Lcd_Cmd
  2909                           
  2910                           ;LCD.h: 128: while(*buffer)
  2911  0012B4  D00A               	goto	l1557
  2912  0012B6                     l1553:
  2913                           
  2914                           ;LCD.h: 129: {
  2915                           ;LCD.h: 130: Lcd_Chr_CP(*buffer);
  2916  0012B6  C013  FFF6         	movff	Lcd_Out@buffer,tblptrl
  2917  0012BA  C014  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
  2918  0012BE                     	if	0	;tblptru may be non-zero
  2919  0012BE                     	endif
  2920  0012BE                     	if	0	;tblptru may be non-zero
  2921  0012BE                     	endif
  2922  0012BE  0008               	tblrd		*
  2923  0012C0  50F5               	movf	tablat,w,c
  2924  0012C2  EC66  F007         	call	_Lcd_Chr_CP
  2925                           
  2926                           ;LCD.h: 131: buffer++;
  2927  0012C6  4A13               	infsnz	Lcd_Out@buffer,f,c
  2928  0012C8  2A14               	incf	Lcd_Out@buffer+1,f,c
  2929  0012CA                     l1557:
  2930  0012CA  C013  FFF6         	movff	Lcd_Out@buffer,tblptrl
  2931  0012CE  C014  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
  2932  0012D2                     	if	0	;tblptru may be non-zero
  2933  0012D2                     	endif
  2934  0012D2                     	if	0	;tblptru may be non-zero
  2935  0012D2                     	endif
  2936  0012D2  0008               	tblrd		*
  2937  0012D4  50F5               	movf	tablat,w,c
  2938  0012D6  0900               	iorlw	0
  2939  0012D8  B4D8               	btfsc	status,2,c
  2940                           
  2941                           ;LCD.h: 132: }
  2942                           ;LCD.h: 133: return;
  2943  0012DA  0012               	return	
  2944  0012DC  D7EC               	goto	l1553
  2945  0012DE                     __end_of_Lcd_Out:
  2946                           	opt stack 0
  2947                           tblptru	equ	0xFF8
  2948                           tblptrh	equ	0xFF7
  2949                           tblptrl	equ	0xFF6
  2950                           tablat	equ	0xFF5
  2951                           intcon	equ	0xFF2
  2952                           intcon2	equ	0xFF1
  2953                           postinc0	equ	0xFEE
  2954                           wreg	equ	0xFE8
  2955                           status	equ	0xFD8
  2956                           
  2957 ;; *************** function _Lcd_Chr_CP *****************
  2958 ;; Defined at:
  2959 ;;		line 158 in file "LCD.h"
  2960 ;; Parameters:    Size  Location     Type
  2961 ;;  data            1    wreg     unsigned char 
  2962 ;; Auto vars:     Size  Location     Type
  2963 ;;  data            1   16[COMRAM] unsigned char 
  2964 ;; Return value:  Size  Location     Type
  2965 ;;		None               void
  2966 ;; Registers used:
  2967 ;;		wreg, status,2, status,0
  2968 ;; Tracked objects:
  2969 ;;		On entry : 0/0
  2970 ;;		On exit  : 0/0
  2971 ;;		Unchanged: 0/0
  2972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2973 ;;      Params:         0       0       0       0       0       0       0       0       0
  2974 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2975 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2976 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2977 ;;Total ram usage:        3 bytes
  2978 ;; Hardware stack levels used:    1
  2979 ;; Hardware stack levels required when called:    1
  2980 ;; This function calls:
  2981 ;;		Nothing
  2982 ;; This function is called by:
  2983 ;;		_Lcd_Out
  2984 ;;		_Lcd_Out2
  2985 ;; This function uses a non-reentrant model
  2986 ;;
  2987                           
  2988                           	psect	text25
  2989  000ECC                     __ptext25:
  2990                           	opt stack 0
  2991  000ECC                     _Lcd_Chr_CP:
  2992                           	opt stack 28
  2993                           
  2994                           ;incstack = 0
  2995                           ;Lcd_Chr_CP@data stored from wreg
  2996  000ECC  6E11               	movwf	Lcd_Chr_CP@data,c
  2997                           
  2998                           ;LCD.h: 159: PORTDbits.RD3 = 0; PORTDbits.RD1 = 1;
  2999  000ECE  9683               	bcf	3971,3,c	;volatile
  3000  000ED0  8283               	bsf	3971,1,c	;volatile
  3001                           
  3002                           ;LCD.h: 160: PORTDbits.RD7 = (data & 0b10000000)>>7; PORTDbits.RD6 = (data & 0b01000000)
      +                          >>6;
  3003  000ED2  6A0F               	clrf	??_Lcd_Chr_CP& (0+255),c
  3004  000ED4  AE11               	btfss	Lcd_Chr_CP@data,7,c
  3005  000ED6  D001               	bra	u95
  3006  000ED8  2A0F               	incf	??_Lcd_Chr_CP& (0+255),f,c
  3007  000EDA                     u95:
  3008  000EDA  0E01               	movlw	1
  3009  000EDC  160F               	andwf	??_Lcd_Chr_CP,f,c
  3010  000EDE  320F               	rrcf	??_Lcd_Chr_CP,f,c
  3011  000EE0  320F               	rrcf	??_Lcd_Chr_CP,f,c
  3012  000EE2  5083               	movf	3971,w,c	;volatile
  3013  000EE4  180F               	xorwf	??_Lcd_Chr_CP,w,c
  3014  000EE6  0B7F               	andlw	-129
  3015  000EE8  180F               	xorwf	??_Lcd_Chr_CP,w,c
  3016  000EEA  6E83               	movwf	3971,c	;volatile
  3017  000EEC  C011  F00F         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  3018  000EF0  0E06               	movlw	6
  3019  000EF2  6E10               	movwf	(??_Lcd_Chr_CP+1)& (0+255),c
  3020  000EF4                     u105:
  3021  000EF4  90D8               	bcf	status,0,c
  3022  000EF6  320F               	rrcf	??_Lcd_Chr_CP,f,c
  3023  000EF8  2E10               	decfsz	(??_Lcd_Chr_CP+1)& (0+255),f,c
  3024  000EFA  D7FC               	goto	u105
  3025  000EFC  0E01               	movlw	1
  3026  000EFE  160F               	andwf	??_Lcd_Chr_CP,f,c
  3027  000F00  3A0F               	swapf	??_Lcd_Chr_CP,f,c
  3028  000F02  460F               	rlncf	??_Lcd_Chr_CP,f,c
  3029  000F04  460F               	rlncf	??_Lcd_Chr_CP,f,c
  3030  000F06  5083               	movf	3971,w,c	;volatile
  3031  000F08  180F               	xorwf	??_Lcd_Chr_CP,w,c
  3032  000F0A  0BBF               	andlw	-65
  3033  000F0C  180F               	xorwf	??_Lcd_Chr_CP,w,c
  3034  000F0E  6E83               	movwf	3971,c	;volatile
  3035                           
  3036                           ;LCD.h: 161: PORTDbits.RD5 = (data & 0b00100000)>>5; PORTDbits.RD4 = (data & 0b00010000)
      +                          >>4;
  3037  000F10  C011  F00F         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  3038  000F14  0E05               	movlw	5
  3039  000F16  6E10               	movwf	(??_Lcd_Chr_CP+1)& (0+255),c
  3040  000F18                     u115:
  3041  000F18  90D8               	bcf	status,0,c
  3042  000F1A  320F               	rrcf	??_Lcd_Chr_CP,f,c
  3043  000F1C  2E10               	decfsz	(??_Lcd_Chr_CP+1)& (0+255),f,c
  3044  000F1E  D7FC               	goto	u115
  3045  000F20  0E01               	movlw	1
  3046  000F22  160F               	andwf	??_Lcd_Chr_CP,f,c
  3047  000F24  3A0F               	swapf	??_Lcd_Chr_CP,f,c
  3048  000F26  460F               	rlncf	??_Lcd_Chr_CP,f,c
  3049  000F28  5083               	movf	3971,w,c	;volatile
  3050  000F2A  180F               	xorwf	??_Lcd_Chr_CP,w,c
  3051  000F2C  0BDF               	andlw	-33
  3052  000F2E  180F               	xorwf	??_Lcd_Chr_CP,w,c
  3053  000F30  6E83               	movwf	3971,c	;volatile
  3054  000F32  C011  F00F         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  3055  000F36  3A0F               	swapf	??_Lcd_Chr_CP,f,c
  3056  000F38  0E0F               	movlw	15
  3057  000F3A  160F               	andwf	??_Lcd_Chr_CP,f,c
  3058  000F3C  0E01               	movlw	1
  3059  000F3E  160F               	andwf	??_Lcd_Chr_CP,f,c
  3060  000F40  3A0F               	swapf	??_Lcd_Chr_CP,f,c
  3061  000F42  5083               	movf	3971,w,c	;volatile
  3062  000F44  180F               	xorwf	??_Lcd_Chr_CP,w,c
  3063  000F46  0BEF               	andlw	-17
  3064  000F48  180F               	xorwf	??_Lcd_Chr_CP,w,c
  3065  000F4A  6E83               	movwf	3971,c	;volatile
  3066                           
  3067                           ;LCD.h: 162: _delay((unsigned long)((10)*(4000000/4000000.0)));
  3068  000F4C  0E03               	movlw	3
  3069  000F4E                     u637:
  3070  000F4E  2EE8               	decfsz	wreg,f,c
  3071  000F50  D7FE               	goto	u637
  3072  000F52  F000               	nop	
  3073                           
  3074                           ;LCD.h: 163: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(4000000/4000000.0))); PORTDb
      +                          its.RD3 = 0;
  3075  000F54  8683               	bsf	3971,3,c	;volatile
  3076  000F56  F000               	nop	
  3077  000F58  D000               	nop2		;2 cycle nop
  3078  000F5A  D000               	nop2		;2 cycle nop
  3079  000F5C  9683               	bcf	3971,3,c	;volatile
  3080                           
  3081                           ;LCD.h: 164: PORTDbits.RD7 = (data & 0b00001000)>>3; PORTDbits.RD6 = (data & 0b00000100)
      +                          >>2;
  3082  000F5E  C011  F00F         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  3083  000F62  90D8               	bcf	status,0,c
  3084  000F64  320F               	rrcf	??_Lcd_Chr_CP,f,c
  3085  000F66  90D8               	bcf	status,0,c
  3086  000F68  320F               	rrcf	??_Lcd_Chr_CP,f,c
  3087  000F6A  90D8               	bcf	status,0,c
  3088  000F6C  320F               	rrcf	??_Lcd_Chr_CP,f,c
  3089  000F6E  0E01               	movlw	1
  3090  000F70  160F               	andwf	??_Lcd_Chr_CP,f,c
  3091  000F72  320F               	rrcf	??_Lcd_Chr_CP,f,c
  3092  000F74  320F               	rrcf	??_Lcd_Chr_CP,f,c
  3093  000F76  5083               	movf	3971,w,c	;volatile
  3094  000F78  180F               	xorwf	??_Lcd_Chr_CP,w,c
  3095  000F7A  0B7F               	andlw	-129
  3096  000F7C  180F               	xorwf	??_Lcd_Chr_CP,w,c
  3097  000F7E  6E83               	movwf	3971,c	;volatile
  3098  000F80  C011  F00F         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  3099  000F84  90D8               	bcf	status,0,c
  3100  000F86  320F               	rrcf	??_Lcd_Chr_CP,f,c
  3101  000F88  90D8               	bcf	status,0,c
  3102  000F8A  320F               	rrcf	??_Lcd_Chr_CP,f,c
  3103  000F8C  0E01               	movlw	1
  3104  000F8E  160F               	andwf	??_Lcd_Chr_CP,f,c
  3105  000F90  3A0F               	swapf	??_Lcd_Chr_CP,f,c
  3106  000F92  460F               	rlncf	??_Lcd_Chr_CP,f,c
  3107  000F94  460F               	rlncf	??_Lcd_Chr_CP,f,c
  3108  000F96  5083               	movf	3971,w,c	;volatile
  3109  000F98  180F               	xorwf	??_Lcd_Chr_CP,w,c
  3110  000F9A  0BBF               	andlw	-65
  3111  000F9C  180F               	xorwf	??_Lcd_Chr_CP,w,c
  3112  000F9E  6E83               	movwf	3971,c	;volatile
  3113                           
  3114                           ;LCD.h: 165: PORTDbits.RD5 = (data & 0b00000010)>>1; PORTDbits.RD4 = (data & 0b00000001)
      +                          ;
  3115  000FA0  C011  F00F         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  3116  000FA4  90D8               	bcf	status,0,c
  3117  000FA6  320F               	rrcf	??_Lcd_Chr_CP,f,c
  3118  000FA8  0E01               	movlw	1
  3119  000FAA  160F               	andwf	??_Lcd_Chr_CP,f,c
  3120  000FAC  3A0F               	swapf	??_Lcd_Chr_CP,f,c
  3121  000FAE  460F               	rlncf	??_Lcd_Chr_CP,f,c
  3122  000FB0  5083               	movf	3971,w,c	;volatile
  3123  000FB2  180F               	xorwf	??_Lcd_Chr_CP,w,c
  3124  000FB4  0BDF               	andlw	-33
  3125  000FB6  180F               	xorwf	??_Lcd_Chr_CP,w,c
  3126  000FB8  6E83               	movwf	3971,c	;volatile
  3127  000FBA  C011  F00F         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  3128  000FBE  0E01               	movlw	1
  3129  000FC0  160F               	andwf	??_Lcd_Chr_CP,f,c
  3130  000FC2  3A0F               	swapf	??_Lcd_Chr_CP,f,c
  3131  000FC4  5083               	movf	3971,w,c	;volatile
  3132  000FC6  180F               	xorwf	??_Lcd_Chr_CP,w,c
  3133  000FC8  0BEF               	andlw	-17
  3134  000FCA  180F               	xorwf	??_Lcd_Chr_CP,w,c
  3135  000FCC  6E83               	movwf	3971,c	;volatile
  3136                           
  3137                           ;LCD.h: 166: _delay((unsigned long)((10)*(4000000/4000000.0)));
  3138  000FCE  0E03               	movlw	3
  3139  000FD0                     u647:
  3140  000FD0  2EE8               	decfsz	wreg,f,c
  3141  000FD2  D7FE               	goto	u647
  3142  000FD4  F000               	nop	
  3143                           
  3144                           ;LCD.h: 167: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(4000000/4000000.0))); PORTDb
      +                          its.RD3 = 0;
  3145  000FD6  8683               	bsf	3971,3,c	;volatile
  3146  000FD8  F000               	nop	
  3147  000FDA  D000               	nop2		;2 cycle nop
  3148  000FDC  D000               	nop2		;2 cycle nop
  3149  000FDE  9683               	bcf	3971,3,c	;volatile
  3150                           
  3151                           ;LCD.h: 168: _delay((unsigned long)((5)*(4000000/4000000.0))); _delay((unsigned long)((5
      +                          500)*(4000000/4000000.0)));
  3152  000FE0  F000               	nop	
  3153  000FE2  D000               	nop2		;2 cycle nop
  3154  000FE4  D000               	nop2		;2 cycle nop
  3155  000FE6  0E08               	movlw	8
  3156  000FE8  6E0F               	movwf	??_Lcd_Chr_CP& (0+255),c
  3157  000FEA  0E23               	movlw	35
  3158  000FEC                     u657:
  3159  000FEC  2EE8               	decfsz	wreg,f,c
  3160  000FEE  D7FE               	goto	u657
  3161  000FF0  2E0F               	decfsz	??_Lcd_Chr_CP& (0+255),f,c
  3162  000FF2  D7FC               	goto	u657
  3163  000FF4  F000               	nop	
  3164  000FF6  0012               	return	
  3165  000FF8                     __end_of_Lcd_Chr_CP:
  3166                           	opt stack 0
  3167                           tblptru	equ	0xFF8
  3168                           tblptrh	equ	0xFF7
  3169                           tblptrl	equ	0xFF6
  3170                           tablat	equ	0xFF5
  3171                           intcon	equ	0xFF2
  3172                           intcon2	equ	0xFF1
  3173                           postinc0	equ	0xFEE
  3174                           wreg	equ	0xFE8
  3175                           status	equ	0xFD8
  3176                           
  3177 ;; *************** function _Lcd_Init *****************
  3178 ;; Defined at:
  3179 ;;		line 71 in file "LCD.h"
  3180 ;; Parameters:    Size  Location     Type
  3181 ;;		None
  3182 ;; Auto vars:     Size  Location     Type
  3183 ;;  data            1   18[COMRAM] unsigned char 
  3184 ;; Return value:  Size  Location     Type
  3185 ;;		None               void
  3186 ;; Registers used:
  3187 ;;		wreg, status,2, status,0, cstack
  3188 ;; Tracked objects:
  3189 ;;		On entry : 0/0
  3190 ;;		On exit  : 0/0
  3191 ;;		Unchanged: 0/0
  3192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3193 ;;      Params:         0       0       0       0       0       0       0       0       0
  3194 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3195 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3196 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3197 ;;Total ram usage:        2 bytes
  3198 ;; Hardware stack levels used:    1
  3199 ;; Hardware stack levels required when called:    2
  3200 ;; This function calls:
  3201 ;;		_Lcd_Cmd
  3202 ;; This function is called by:
  3203 ;;		_main
  3204 ;; This function uses a non-reentrant model
  3205 ;;
  3206                           
  3207                           	psect	text26
  3208  000D9E                     __ptext26:
  3209                           	opt stack 0
  3210  000D9E                     _Lcd_Init:
  3211                           	opt stack 28
  3212                           
  3213                           ;LCD.h: 72: unsigned char data;
  3214                           ;LCD.h: 73: ANSELD=0;
  3215                           
  3216                           ;incstack = 0
  3217  000D9E  0E00               	movlw	0
  3218  000DA0  010F               	movlb	15	; () banked
  3219  000DA2  6F5E               	movwf	94,b	;volatile
  3220                           
  3221                           ; BSR set to: 15
  3222                           ;LCD.h: 74: TRISDbits.TRISD7 = 0;
  3223  000DA4  9E95               	bcf	3989,7,c	;volatile
  3224                           
  3225                           ; BSR set to: 15
  3226                           ;LCD.h: 75: TRISDbits.TRISD6 = 0;
  3227  000DA6  9C95               	bcf	3989,6,c	;volatile
  3228                           
  3229                           ; BSR set to: 15
  3230                           ;LCD.h: 76: TRISDbits.TRISD5 = 0;
  3231  000DA8  9A95               	bcf	3989,5,c	;volatile
  3232                           
  3233                           ; BSR set to: 15
  3234                           ;LCD.h: 77: TRISDbits.TRISD4 = 0;
  3235  000DAA  9895               	bcf	3989,4,c	;volatile
  3236                           
  3237                           ; BSR set to: 15
  3238                           ;LCD.h: 78: TRISDbits.TRISD3 = 0;
  3239  000DAC  9695               	bcf	3989,3,c	;volatile
  3240                           
  3241                           ; BSR set to: 15
  3242                           ;LCD.h: 79: TRISDbits.TRISD1 = 0;
  3243  000DAE  9295               	bcf	3989,1,c	;volatile
  3244                           
  3245                           ; BSR set to: 15
  3246                           ;LCD.h: 80: TRISDbits.TRISD2 = 0;
  3247  000DB0  9495               	bcf	3989,2,c	;volatile
  3248                           
  3249                           ; BSR set to: 15
  3250                           ;LCD.h: 81: PORTDbits.RD7 = 0;
  3251  000DB2  9E83               	bcf	3971,7,c	;volatile
  3252                           
  3253                           ; BSR set to: 15
  3254                           ;LCD.h: 82: PORTDbits.RD6 = 0;
  3255  000DB4  9C83               	bcf	3971,6,c	;volatile
  3256                           
  3257                           ; BSR set to: 15
  3258                           ;LCD.h: 83: PORTDbits.RD5 = 0;
  3259  000DB6  9A83               	bcf	3971,5,c	;volatile
  3260                           
  3261                           ; BSR set to: 15
  3262                           ;LCD.h: 84: PORTDbits.RD4 = 0;
  3263  000DB8  9883               	bcf	3971,4,c	;volatile
  3264                           
  3265                           ; BSR set to: 15
  3266                           ;LCD.h: 85: PORTDbits.RD3 = 0;
  3267  000DBA  9683               	bcf	3971,3,c	;volatile
  3268                           
  3269                           ; BSR set to: 15
  3270                           ;LCD.h: 86: PORTDbits.RD1 = 0;
  3271  000DBC  9283               	bcf	3971,1,c	;volatile
  3272                           
  3273                           ; BSR set to: 15
  3274                           ;LCD.h: 87: PORTDbits.RD2 = 0;
  3275  000DBE  9483               	bcf	3971,2,c	;volatile
  3276                           
  3277                           ; BSR set to: 15
  3278                           ;LCD.h: 88: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  3279  000DC0  0E08               	movlw	8
  3280  000DC2  6E12               	movwf	??_Lcd_Init& (0+255),c
  3281  000DC4  0E23               	movlw	35
  3282  000DC6                     u667:
  3283  000DC6  2EE8               	decfsz	wreg,f,c
  3284  000DC8  D7FE               	goto	u667
  3285  000DCA  2E12               	decfsz	??_Lcd_Init& (0+255),f,c
  3286  000DCC  D7FC               	goto	u667
  3287  000DCE  F000               	nop	
  3288                           
  3289                           ;LCD.h: 89: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  3290  000DD0  0E08               	movlw	8
  3291  000DD2  6E12               	movwf	??_Lcd_Init& (0+255),c
  3292  000DD4  0E23               	movlw	35
  3293  000DD6                     u677:
  3294  000DD6  2EE8               	decfsz	wreg,f,c
  3295  000DD8  D7FE               	goto	u677
  3296  000DDA  2E12               	decfsz	??_Lcd_Init& (0+255),f,c
  3297  000DDC  D7FC               	goto	u677
  3298  000DDE  F000               	nop	
  3299                           
  3300                           ;LCD.h: 90: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  3301  000DE0  0E08               	movlw	8
  3302  000DE2  6E12               	movwf	??_Lcd_Init& (0+255),c
  3303  000DE4  0E23               	movlw	35
  3304  000DE6                     u687:
  3305  000DE6  2EE8               	decfsz	wreg,f,c
  3306  000DE8  D7FE               	goto	u687
  3307  000DEA  2E12               	decfsz	??_Lcd_Init& (0+255),f,c
  3308  000DEC  D7FC               	goto	u687
  3309  000DEE  F000               	nop	
  3310                           
  3311                           ;LCD.h: 91: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  3312  000DF0  0E08               	movlw	8
  3313  000DF2  6E12               	movwf	??_Lcd_Init& (0+255),c
  3314  000DF4  0E23               	movlw	35
  3315  000DF6                     u697:
  3316  000DF6  2EE8               	decfsz	wreg,f,c
  3317  000DF8  D7FE               	goto	u697
  3318  000DFA  2E12               	decfsz	??_Lcd_Init& (0+255),f,c
  3319  000DFC  D7FC               	goto	u697
  3320  000DFE  F000               	nop	
  3321                           
  3322                           ;LCD.h: 92: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  3323  000E00  0E08               	movlw	8
  3324  000E02  6E12               	movwf	??_Lcd_Init& (0+255),c
  3325  000E04  0E23               	movlw	35
  3326  000E06                     u707:
  3327  000E06  2EE8               	decfsz	wreg,f,c
  3328  000E08  D7FE               	goto	u707
  3329  000E0A  2E12               	decfsz	??_Lcd_Init& (0+255),f,c
  3330  000E0C  D7FC               	goto	u707
  3331  000E0E  F000               	nop	
  3332                           
  3333                           ;LCD.h: 93: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  3334  000E10  0E08               	movlw	8
  3335  000E12  6E12               	movwf	??_Lcd_Init& (0+255),c
  3336  000E14  0E23               	movlw	35
  3337  000E16                     u717:
  3338  000E16  2EE8               	decfsz	wreg,f,c
  3339  000E18  D7FE               	goto	u717
  3340  000E1A  2E12               	decfsz	??_Lcd_Init& (0+255),f,c
  3341  000E1C  D7FC               	goto	u717
  3342  000E1E  F000               	nop	
  3343                           
  3344                           ;LCD.h: 94: for(data = 1; data < 4; data ++)
  3345  000E20  0E01               	movlw	1
  3346  000E22  6E13               	movwf	Lcd_Init@data,c
  3347  000E24  D01E               	goto	L4
  3348  000E26                     l307:
  3349                           
  3350                           ;LCD.h: 95: {
  3351                           ;LCD.h: 96: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 = 1; 
      +                          PORTDbits.RD3 = 0;
  3352  000E26  9E83               	bcf	3971,7,c	;volatile
  3353  000E28  9C83               	bcf	3971,6,c	;volatile
  3354  000E2A  8A83               	bsf	3971,5,c	;volatile
  3355  000E2C  8883               	bsf	3971,4,c	;volatile
  3356  000E2E  9683               	bcf	3971,3,c	;volatile
  3357                           
  3358                           ;LCD.h: 97: PORTDbits.RD1 = 0; PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; 
      +                          PORTDbits.RD4 = 1;
  3359  000E30  9283               	bcf	3971,1,c	;volatile
  3360  000E32  9E83               	bcf	3971,7,c	;volatile
  3361  000E34  9C83               	bcf	3971,6,c	;volatile
  3362  000E36  8A83               	bsf	3971,5,c	;volatile
  3363  000E38  8883               	bsf	3971,4,c	;volatile
  3364                           
  3365                           ;LCD.h: 98: PORTDbits.RD3 = 1; PORTDbits.RD1 = 0;
  3366  000E3A  8683               	bsf	3971,3,c	;volatile
  3367  000E3C  9283               	bcf	3971,1,c	;volatile
  3368                           
  3369                           ;LCD.h: 99: _delay((unsigned long)((5)*(4000000/4000000.0)));
  3370  000E3E  F000               	nop	
  3371  000E40  D000               	nop2		;2 cycle nop
  3372  000E42  D000               	nop2		;2 cycle nop
  3373                           
  3374                           ;LCD.h: 100: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 = 1;
      +                           PORTDbits.RD3 = 0;
  3375  000E44  9E83               	bcf	3971,7,c	;volatile
  3376  000E46  9C83               	bcf	3971,6,c	;volatile
  3377  000E48  8A83               	bsf	3971,5,c	;volatile
  3378  000E4A  8883               	bsf	3971,4,c	;volatile
  3379  000E4C  9683               	bcf	3971,3,c	;volatile
  3380                           
  3381                           ;LCD.h: 101: PORTDbits.RD1 = 0;
  3382  000E4E  9283               	bcf	3971,1,c	;volatile
  3383                           
  3384                           ;LCD.h: 102: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  3385  000E50  0E08               	movlw	8
  3386  000E52  6E12               	movwf	??_Lcd_Init& (0+255),c
  3387  000E54  0E23               	movlw	35
  3388  000E56                     u727:
  3389  000E56  2EE8               	decfsz	wreg,f,c
  3390  000E58  D7FE               	goto	u727
  3391  000E5A  2E12               	decfsz	??_Lcd_Init& (0+255),f,c
  3392  000E5C  D7FC               	goto	u727
  3393  000E5E  F000               	nop	
  3394  000E60  2A13               	incf	Lcd_Init@data,f,c
  3395  000E62                     L4:
  3396  000E62  0E03               	movlw	3
  3397  000E64  6413               	cpfsgt	Lcd_Init@data,c
  3398  000E66  D7DF               	goto	l307
  3399                           
  3400                           ;LCD.h: 103: }
  3401                           ;LCD.h: 104: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 = 0;
      +                           PORTDbits.RD3 = 0; PORTDbits.RD1 = 0;
  3402  000E68  9E83               	bcf	3971,7,c	;volatile
  3403  000E6A  9C83               	bcf	3971,6,c	;volatile
  3404  000E6C  8A83               	bsf	3971,5,c	;volatile
  3405  000E6E  9883               	bcf	3971,4,c	;volatile
  3406  000E70  9683               	bcf	3971,3,c	;volatile
  3407  000E72  9283               	bcf	3971,1,c	;volatile
  3408                           
  3409                           ;LCD.h: 105: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 = 0;
      +                           PORTDbits.RD3 = 1; PORTDbits.RD1 = 0;
  3410  000E74  9E83               	bcf	3971,7,c	;volatile
  3411  000E76  9C83               	bcf	3971,6,c	;volatile
  3412  000E78  8A83               	bsf	3971,5,c	;volatile
  3413  000E7A  9883               	bcf	3971,4,c	;volatile
  3414  000E7C  8683               	bsf	3971,3,c	;volatile
  3415  000E7E  9283               	bcf	3971,1,c	;volatile
  3416                           
  3417                           ;LCD.h: 106: _delay((unsigned long)((5)*(4000000/4000000.0)));
  3418  000E80  F000               	nop	
  3419  000E82  D000               	nop2		;2 cycle nop
  3420  000E84  D000               	nop2		;2 cycle nop
  3421                           
  3422                           ;LCD.h: 107: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 = 0;
      +                           PORTDbits.RD3 = 0; PORTDbits.RD1 = 0;
  3423  000E86  9E83               	bcf	3971,7,c	;volatile
  3424  000E88  9C83               	bcf	3971,6,c	;volatile
  3425  000E8A  8A83               	bsf	3971,5,c	;volatile
  3426  000E8C  9883               	bcf	3971,4,c	;volatile
  3427  000E8E  9683               	bcf	3971,3,c	;volatile
  3428  000E90  9283               	bcf	3971,1,c	;volatile
  3429                           
  3430                           ;LCD.h: 108: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  3431  000E92  0E08               	movlw	8
  3432  000E94  6E12               	movwf	??_Lcd_Init& (0+255),c
  3433  000E96  0E23               	movlw	35
  3434  000E98                     u737:
  3435  000E98  2EE8               	decfsz	wreg,f,c
  3436  000E9A  D7FE               	goto	u737
  3437  000E9C  2E12               	decfsz	??_Lcd_Init& (0+255),f,c
  3438  000E9E  D7FC               	goto	u737
  3439  000EA0  F000               	nop	
  3440                           
  3441                           ;LCD.h: 109: data = 40; Lcd_Cmd(data);
  3442  000EA2  0E28               	movlw	40
  3443  000EA4  6E13               	movwf	Lcd_Init@data,c
  3444  000EA6  5013               	movf	Lcd_Init@data,w,c
  3445  000EA8  ECFC  F007         	call	_Lcd_Cmd
  3446                           
  3447                           ;LCD.h: 110: data = 16; Lcd_Cmd(data);
  3448  000EAC  0E10               	movlw	16
  3449  000EAE  6E13               	movwf	Lcd_Init@data,c
  3450  000EB0  5013               	movf	Lcd_Init@data,w,c
  3451  000EB2  ECFC  F007         	call	_Lcd_Cmd
  3452                           
  3453                           ;LCD.h: 111: data = 1; Lcd_Cmd(data);
  3454  000EB6  0E01               	movlw	1
  3455  000EB8  6E13               	movwf	Lcd_Init@data,c
  3456  000EBA  5013               	movf	Lcd_Init@data,w,c
  3457  000EBC  ECFC  F007         	call	_Lcd_Cmd
  3458                           
  3459                           ;LCD.h: 112: data = 15; Lcd_Cmd(data);
  3460  000EC0  0E0F               	movlw	15
  3461  000EC2  6E13               	movwf	Lcd_Init@data,c
  3462  000EC4  5013               	movf	Lcd_Init@data,w,c
  3463  000EC6  ECFC  F007         	call	_Lcd_Cmd
  3464  000ECA  0012               	return	
  3465  000ECC                     __end_of_Lcd_Init:
  3466                           	opt stack 0
  3467                           tblptru	equ	0xFF8
  3468                           tblptrh	equ	0xFF7
  3469                           tblptrl	equ	0xFF6
  3470                           tablat	equ	0xFF5
  3471                           intcon	equ	0xFF2
  3472                           intcon2	equ	0xFF1
  3473                           postinc0	equ	0xFEE
  3474                           wreg	equ	0xFE8
  3475                           status	equ	0xFD8
  3476                           
  3477 ;; *************** function _Lcd_Cmd *****************
  3478 ;; Defined at:
  3479 ;;		line 172 in file "LCD.h"
  3480 ;; Parameters:    Size  Location     Type
  3481 ;;  data            1    wreg     unsigned char 
  3482 ;; Auto vars:     Size  Location     Type
  3483 ;;  data            1   16[COMRAM] unsigned char 
  3484 ;; Return value:  Size  Location     Type
  3485 ;;		None               void
  3486 ;; Registers used:
  3487 ;;		wreg, status,2, status,0
  3488 ;; Tracked objects:
  3489 ;;		On entry : 0/0
  3490 ;;		On exit  : 0/0
  3491 ;;		Unchanged: 0/0
  3492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3493 ;;      Params:         0       0       0       0       0       0       0       0       0
  3494 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3495 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3496 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3497 ;;Total ram usage:        3 bytes
  3498 ;; Hardware stack levels used:    1
  3499 ;; Hardware stack levels required when called:    1
  3500 ;; This function calls:
  3501 ;;		Nothing
  3502 ;; This function is called by:
  3503 ;;		_Lcd_Init
  3504 ;;		_Lcd_Out
  3505 ;;		_main
  3506 ;;		_Lcd_Out2
  3507 ;;		_lcd_goto
  3508 ;; This function uses a non-reentrant model
  3509 ;;
  3510                           
  3511                           	psect	text27
  3512  000FF8                     __ptext27:
  3513                           	opt stack 0
  3514  000FF8                     _Lcd_Cmd:
  3515                           	opt stack 28
  3516                           
  3517                           ;incstack = 0
  3518                           ;Lcd_Cmd@data stored from wreg
  3519  000FF8  6E11               	movwf	Lcd_Cmd@data,c
  3520                           
  3521                           ;LCD.h: 173: PORTDbits.RD3 = 0; PORTDbits.RD1 = 0;
  3522  000FFA  9683               	bcf	3971,3,c	;volatile
  3523  000FFC  9283               	bcf	3971,1,c	;volatile
  3524                           
  3525                           ;LCD.h: 174: PORTDbits.RD7 = (data & 0b10000000)>>7; PORTDbits.RD6 = (data & 0b01000000)
      +                          >>6;
  3526  000FFE  6A0F               	clrf	??_Lcd_Cmd& (0+255),c
  3527  001000  AE11               	btfss	Lcd_Cmd@data,7,c
  3528  001002  D001               	bra	u65
  3529  001004  2A0F               	incf	??_Lcd_Cmd& (0+255),f,c
  3530  001006                     u65:
  3531  001006  0E01               	movlw	1
  3532  001008  160F               	andwf	??_Lcd_Cmd,f,c
  3533  00100A  320F               	rrcf	??_Lcd_Cmd,f,c
  3534  00100C  320F               	rrcf	??_Lcd_Cmd,f,c
  3535  00100E  5083               	movf	3971,w,c	;volatile
  3536  001010  180F               	xorwf	??_Lcd_Cmd,w,c
  3537  001012  0B7F               	andlw	-129
  3538  001014  180F               	xorwf	??_Lcd_Cmd,w,c
  3539  001016  6E83               	movwf	3971,c	;volatile
  3540  001018  C011  F00F         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  3541  00101C  0E06               	movlw	6
  3542  00101E  6E10               	movwf	(??_Lcd_Cmd+1)& (0+255),c
  3543  001020                     u75:
  3544  001020  90D8               	bcf	status,0,c
  3545  001022  320F               	rrcf	??_Lcd_Cmd,f,c
  3546  001024  2E10               	decfsz	(??_Lcd_Cmd+1)& (0+255),f,c
  3547  001026  D7FC               	goto	u75
  3548  001028  0E01               	movlw	1
  3549  00102A  160F               	andwf	??_Lcd_Cmd,f,c
  3550  00102C  3A0F               	swapf	??_Lcd_Cmd,f,c
  3551  00102E  460F               	rlncf	??_Lcd_Cmd,f,c
  3552  001030  460F               	rlncf	??_Lcd_Cmd,f,c
  3553  001032  5083               	movf	3971,w,c	;volatile
  3554  001034  180F               	xorwf	??_Lcd_Cmd,w,c
  3555  001036  0BBF               	andlw	-65
  3556  001038  180F               	xorwf	??_Lcd_Cmd,w,c
  3557  00103A  6E83               	movwf	3971,c	;volatile
  3558                           
  3559                           ;LCD.h: 175: PORTDbits.RD5 = (data & 0b00100000)>>5; PORTDbits.RD4 = (data & 0b00010000)
      +                          >>4;
  3560  00103C  C011  F00F         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  3561  001040  0E05               	movlw	5
  3562  001042  6E10               	movwf	(??_Lcd_Cmd+1)& (0+255),c
  3563  001044                     u85:
  3564  001044  90D8               	bcf	status,0,c
  3565  001046  320F               	rrcf	??_Lcd_Cmd,f,c
  3566  001048  2E10               	decfsz	(??_Lcd_Cmd+1)& (0+255),f,c
  3567  00104A  D7FC               	goto	u85
  3568  00104C  0E01               	movlw	1
  3569  00104E  160F               	andwf	??_Lcd_Cmd,f,c
  3570  001050  3A0F               	swapf	??_Lcd_Cmd,f,c
  3571  001052  460F               	rlncf	??_Lcd_Cmd,f,c
  3572  001054  5083               	movf	3971,w,c	;volatile
  3573  001056  180F               	xorwf	??_Lcd_Cmd,w,c
  3574  001058  0BDF               	andlw	-33
  3575  00105A  180F               	xorwf	??_Lcd_Cmd,w,c
  3576  00105C  6E83               	movwf	3971,c	;volatile
  3577  00105E  C011  F00F         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  3578  001062  3A0F               	swapf	??_Lcd_Cmd,f,c
  3579  001064  0E0F               	movlw	15
  3580  001066  160F               	andwf	??_Lcd_Cmd,f,c
  3581  001068  0E01               	movlw	1
  3582  00106A  160F               	andwf	??_Lcd_Cmd,f,c
  3583  00106C  3A0F               	swapf	??_Lcd_Cmd,f,c
  3584  00106E  5083               	movf	3971,w,c	;volatile
  3585  001070  180F               	xorwf	??_Lcd_Cmd,w,c
  3586  001072  0BEF               	andlw	-17
  3587  001074  180F               	xorwf	??_Lcd_Cmd,w,c
  3588  001076  6E83               	movwf	3971,c	;volatile
  3589                           
  3590                           ;LCD.h: 176: _delay((unsigned long)((10)*(4000000/4000000.0)));
  3591  001078  0E03               	movlw	3
  3592  00107A                     u747:
  3593  00107A  2EE8               	decfsz	wreg,f,c
  3594  00107C  D7FE               	goto	u747
  3595  00107E  F000               	nop	
  3596                           
  3597                           ;LCD.h: 177: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(4000000/4000000.0))); PORTDb
      +                          its.RD3 = 0;
  3598  001080  8683               	bsf	3971,3,c	;volatile
  3599  001082  F000               	nop	
  3600  001084  D000               	nop2		;2 cycle nop
  3601  001086  D000               	nop2		;2 cycle nop
  3602  001088  9683               	bcf	3971,3,c	;volatile
  3603                           
  3604                           ;LCD.h: 178: PORTDbits.RD7 = (data & 0b00001000)>>3; PORTDbits.RD6 = (data & 0b00000100)
      +                          >>2;
  3605  00108A  C011  F00F         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  3606  00108E  90D8               	bcf	status,0,c
  3607  001090  320F               	rrcf	??_Lcd_Cmd,f,c
  3608  001092  90D8               	bcf	status,0,c
  3609  001094  320F               	rrcf	??_Lcd_Cmd,f,c
  3610  001096  90D8               	bcf	status,0,c
  3611  001098  320F               	rrcf	??_Lcd_Cmd,f,c
  3612  00109A  0E01               	movlw	1
  3613  00109C  160F               	andwf	??_Lcd_Cmd,f,c
  3614  00109E  320F               	rrcf	??_Lcd_Cmd,f,c
  3615  0010A0  320F               	rrcf	??_Lcd_Cmd,f,c
  3616  0010A2  5083               	movf	3971,w,c	;volatile
  3617  0010A4  180F               	xorwf	??_Lcd_Cmd,w,c
  3618  0010A6  0B7F               	andlw	-129
  3619  0010A8  180F               	xorwf	??_Lcd_Cmd,w,c
  3620  0010AA  6E83               	movwf	3971,c	;volatile
  3621  0010AC  C011  F00F         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  3622  0010B0  90D8               	bcf	status,0,c
  3623  0010B2  320F               	rrcf	??_Lcd_Cmd,f,c
  3624  0010B4  90D8               	bcf	status,0,c
  3625  0010B6  320F               	rrcf	??_Lcd_Cmd,f,c
  3626  0010B8  0E01               	movlw	1
  3627  0010BA  160F               	andwf	??_Lcd_Cmd,f,c
  3628  0010BC  3A0F               	swapf	??_Lcd_Cmd,f,c
  3629  0010BE  460F               	rlncf	??_Lcd_Cmd,f,c
  3630  0010C0  460F               	rlncf	??_Lcd_Cmd,f,c
  3631  0010C2  5083               	movf	3971,w,c	;volatile
  3632  0010C4  180F               	xorwf	??_Lcd_Cmd,w,c
  3633  0010C6  0BBF               	andlw	-65
  3634  0010C8  180F               	xorwf	??_Lcd_Cmd,w,c
  3635  0010CA  6E83               	movwf	3971,c	;volatile
  3636                           
  3637                           ;LCD.h: 179: PORTDbits.RD5 = (data & 0b00000010)>>1; PORTDbits.RD4 = (data & 0b00000001)
      +                          ;
  3638  0010CC  C011  F00F         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  3639  0010D0  90D8               	bcf	status,0,c
  3640  0010D2  320F               	rrcf	??_Lcd_Cmd,f,c
  3641  0010D4  0E01               	movlw	1
  3642  0010D6  160F               	andwf	??_Lcd_Cmd,f,c
  3643  0010D8  3A0F               	swapf	??_Lcd_Cmd,f,c
  3644  0010DA  460F               	rlncf	??_Lcd_Cmd,f,c
  3645  0010DC  5083               	movf	3971,w,c	;volatile
  3646  0010DE  180F               	xorwf	??_Lcd_Cmd,w,c
  3647  0010E0  0BDF               	andlw	-33
  3648  0010E2  180F               	xorwf	??_Lcd_Cmd,w,c
  3649  0010E4  6E83               	movwf	3971,c	;volatile
  3650  0010E6  C011  F00F         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  3651  0010EA  0E01               	movlw	1
  3652  0010EC  160F               	andwf	??_Lcd_Cmd,f,c
  3653  0010EE  3A0F               	swapf	??_Lcd_Cmd,f,c
  3654  0010F0  5083               	movf	3971,w,c	;volatile
  3655  0010F2  180F               	xorwf	??_Lcd_Cmd,w,c
  3656  0010F4  0BEF               	andlw	-17
  3657  0010F6  180F               	xorwf	??_Lcd_Cmd,w,c
  3658  0010F8  6E83               	movwf	3971,c	;volatile
  3659                           
  3660                           ;LCD.h: 180: _delay((unsigned long)((10)*(4000000/4000000.0)));;
  3661  0010FA  0E03               	movlw	3
  3662  0010FC                     u757:
  3663  0010FC  2EE8               	decfsz	wreg,f,c
  3664  0010FE  D7FE               	goto	u757
  3665  001100  F000               	nop	
  3666                           
  3667                           ;LCD.h: 181: PORTDbits.RD3 = 1; _delay((unsigned long)((5)*(4000000/4000000.0))); PORTDb
      +                          its.RD3 = 0;
  3668  001102  8683               	bsf	3971,3,c	;volatile
  3669  001104  F000               	nop	
  3670  001106  D000               	nop2		;2 cycle nop
  3671  001108  D000               	nop2		;2 cycle nop
  3672  00110A  9683               	bcf	3971,3,c	;volatile
  3673                           
  3674                           ;LCD.h: 182: _delay((unsigned long)((5500)*(4000000/4000000.0)));
  3675  00110C  0E08               	movlw	8
  3676  00110E  6E0F               	movwf	??_Lcd_Cmd& (0+255),c
  3677  001110  0E23               	movlw	35
  3678  001112                     u767:
  3679  001112  2EE8               	decfsz	wreg,f,c
  3680  001114  D7FE               	goto	u767
  3681  001116  2E0F               	decfsz	??_Lcd_Cmd& (0+255),f,c
  3682  001118  D7FC               	goto	u767
  3683  00111A  F000               	nop	
  3684  00111C  0012               	return	
  3685  00111E                     __end_of_Lcd_Cmd:
  3686                           	opt stack 0
  3687                           tblptru	equ	0xFF8
  3688                           tblptrh	equ	0xFF7
  3689                           tblptrl	equ	0xFF6
  3690                           tablat	equ	0xFF5
  3691                           intcon	equ	0xFF2
  3692                           intcon2	equ	0xFF1
  3693                           postinc0	equ	0xFEE
  3694                           wreg	equ	0xFE8
  3695                           status	equ	0xFD8
  3696                           
  3697 ;; *************** function _Ini_nRF *****************
  3698 ;; Defined at:
  3699 ;;		line 11 in file "sensor.c"
  3700 ;; Parameters:    Size  Location     Type
  3701 ;;		None
  3702 ;; Auto vars:     Size  Location     Type
  3703 ;;		None
  3704 ;; Return value:  Size  Location     Type
  3705 ;;		None               void
  3706 ;; Registers used:
  3707 ;;		wreg, status,2, status,0, cstack
  3708 ;; Tracked objects:
  3709 ;;		On entry : 0/0
  3710 ;;		On exit  : 0/0
  3711 ;;		Unchanged: 0/0
  3712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3713 ;;      Params:         0       0       0       0       0       0       0       0       0
  3714 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3715 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3716 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3717 ;;Total ram usage:        1 bytes
  3718 ;; Hardware stack levels used:    1
  3719 ;; Hardware stack levels required when called:    2
  3720 ;; This function calls:
  3721 ;;		_OpenSPI1
  3722 ;;		_WriteSPI1
  3723 ;; This function is called by:
  3724 ;;		_main
  3725 ;; This function uses a non-reentrant model
  3726 ;;
  3727                           
  3728                           	psect	text28
  3729  00111E                     __ptext28:
  3730                           	opt stack 0
  3731  00111E                     _Ini_nRF:
  3732                           	opt stack 28
  3733                           
  3734                           ;sensor.c: 13: OpenSPI1(0b00000001, 0b00000000, 0b10000000);
  3735                           
  3736                           ;incstack = 0
  3737  00111E  0E00               	movlw	0
  3738  001120  6E0F               	movwf	OpenSPI1@bus_mode,c
  3739  001122  0E80               	movlw	128
  3740  001124  6E10               	movwf	OpenSPI1@smp_phase,c
  3741  001126  0E01               	movlw	1
  3742  001128  ECC7  F009         	call	_OpenSPI1
  3743                           
  3744                           ;sensor.c: 15: PORTBbits.RB4=0;
  3745  00112C  9881               	bcf	3969,4,c	;volatile
  3746                           
  3747                           ;sensor.c: 16: WriteSPI1(0x20);
  3748  00112E  0E20               	movlw	32
  3749  001130  ECB4  F00A         	call	_WriteSPI1
  3750                           
  3751                           ;sensor.c: 17: WriteSPI1(0x02);
  3752  001134  0E02               	movlw	2
  3753  001136  ECB4  F00A         	call	_WriteSPI1
  3754                           
  3755                           ;sensor.c: 18: PORTBbits.RB4=1;
  3756  00113A  8881               	bsf	3969,4,c	;volatile
  3757                           
  3758                           ;sensor.c: 20: PORTBbits.RB4=0;
  3759  00113C  9881               	bcf	3969,4,c	;volatile
  3760                           
  3761                           ;sensor.c: 21: WriteSPI1(0x21);
  3762  00113E  0E21               	movlw	33
  3763  001140  ECB4  F00A         	call	_WriteSPI1
  3764                           
  3765                           ;sensor.c: 22: WriteSPI1(0x00);
  3766  001144  0E00               	movlw	0
  3767  001146  ECB4  F00A         	call	_WriteSPI1
  3768                           
  3769                           ;sensor.c: 23: PORTBbits.RB4=1;
  3770  00114A  8881               	bsf	3969,4,c	;volatile
  3771                           
  3772                           ;sensor.c: 25: PORTBbits.RB4=0;
  3773  00114C  9881               	bcf	3969,4,c	;volatile
  3774                           
  3775                           ;sensor.c: 26: WriteSPI1(0x22);
  3776  00114E  0E22               	movlw	34
  3777  001150  ECB4  F00A         	call	_WriteSPI1
  3778                           
  3779                           ;sensor.c: 27: WriteSPI1(0x01);
  3780  001154  0E01               	movlw	1
  3781  001156  ECB4  F00A         	call	_WriteSPI1
  3782                           
  3783                           ;sensor.c: 28: PORTBbits.RB4=1;
  3784  00115A  8881               	bsf	3969,4,c	;volatile
  3785                           
  3786                           ;sensor.c: 30: PORTBbits.RB4=0;
  3787  00115C  9881               	bcf	3969,4,c	;volatile
  3788                           
  3789                           ;sensor.c: 31: WriteSPI1(0x23);
  3790  00115E  0E23               	movlw	35
  3791  001160  ECB4  F00A         	call	_WriteSPI1
  3792                           
  3793                           ;sensor.c: 32: WriteSPI1(0x01);
  3794  001164  0E01               	movlw	1
  3795  001166  ECB4  F00A         	call	_WriteSPI1
  3796                           
  3797                           ;sensor.c: 33: PORTBbits.RB4=1;
  3798  00116A  8881               	bsf	3969,4,c	;volatile
  3799                           
  3800                           ;sensor.c: 36: PORTBbits.RB4=0;
  3801  00116C  9881               	bcf	3969,4,c	;volatile
  3802                           
  3803                           ;sensor.c: 37: WriteSPI1(0x24);
  3804  00116E  0E24               	movlw	36
  3805  001170  ECB4  F00A         	call	_WriteSPI1
  3806                           
  3807                           ;sensor.c: 38: WriteSPI1(0x00);
  3808  001174  0E00               	movlw	0
  3809  001176  ECB4  F00A         	call	_WriteSPI1
  3810                           
  3811                           ;sensor.c: 39: PORTBbits.RB4=1;
  3812  00117A  8881               	bsf	3969,4,c	;volatile
  3813                           
  3814                           ;sensor.c: 41: PORTBbits.RB4=0;
  3815  00117C  9881               	bcf	3969,4,c	;volatile
  3816                           
  3817                           ;sensor.c: 42: WriteSPI1(0x25);
  3818  00117E  0E25               	movlw	37
  3819  001180  ECB4  F00A         	call	_WriteSPI1
  3820                           
  3821                           ;sensor.c: 43: WriteSPI1(0x01);
  3822  001184  0E01               	movlw	1
  3823  001186  ECB4  F00A         	call	_WriteSPI1
  3824                           
  3825                           ;sensor.c: 44: PORTBbits.RB4=1;
  3826  00118A  8881               	bsf	3969,4,c	;volatile
  3827                           
  3828                           ;sensor.c: 46: PORTBbits.RB4=0;
  3829  00118C  9881               	bcf	3969,4,c	;volatile
  3830                           
  3831                           ;sensor.c: 47: WriteSPI1(0x26);
  3832  00118E  0E26               	movlw	38
  3833  001190  ECB4  F00A         	call	_WriteSPI1
  3834                           
  3835                           ;sensor.c: 48: WriteSPI1(0x26);
  3836  001194  0E26               	movlw	38
  3837  001196  ECB4  F00A         	call	_WriteSPI1
  3838                           
  3839                           ;sensor.c: 49: PORTBbits.RB4=1;
  3840  00119A  8881               	bsf	3969,4,c	;volatile
  3841                           
  3842                           ;sensor.c: 51: PORTBbits.RB4=0;
  3843  00119C  9881               	bcf	3969,4,c	;volatile
  3844                           
  3845                           ;sensor.c: 52: WriteSPI1(0x31);
  3846  00119E  0E31               	movlw	49
  3847  0011A0  ECB4  F00A         	call	_WriteSPI1
  3848                           
  3849                           ;sensor.c: 53: WriteSPI1(0x0C);
  3850  0011A4  0E0C               	movlw	12
  3851  0011A6  ECB4  F00A         	call	_WriteSPI1
  3852                           
  3853                           ;sensor.c: 54: PORTBbits.RB4=1;
  3854  0011AA  8881               	bsf	3969,4,c	;volatile
  3855                           
  3856                           ;sensor.c: 56: PORTBbits.RB4=0;
  3857  0011AC  9881               	bcf	3969,4,c	;volatile
  3858                           
  3859                           ;sensor.c: 57: WriteSPI1(0x2A);
  3860  0011AE  0E2A               	movlw	42
  3861  0011B0  ECB4  F00A         	call	_WriteSPI1
  3862                           
  3863                           ;sensor.c: 58: WriteSPI1(0xA3);
  3864  0011B4  0EA3               	movlw	163
  3865  0011B6  ECB4  F00A         	call	_WriteSPI1
  3866                           
  3867                           ;sensor.c: 59: WriteSPI1(0xA3);
  3868  0011BA  0EA3               	movlw	163
  3869  0011BC  ECB4  F00A         	call	_WriteSPI1
  3870                           
  3871                           ;sensor.c: 60: WriteSPI1(0xA3);
  3872  0011C0  0EA3               	movlw	163
  3873  0011C2  ECB4  F00A         	call	_WriteSPI1
  3874                           
  3875                           ;sensor.c: 61: PORTBbits.RB4=1;
  3876  0011C6  8881               	bsf	3969,4,c	;volatile
  3877                           
  3878                           ;sensor.c: 63: PORTBbits.RB4=0;
  3879  0011C8  9881               	bcf	3969,4,c	;volatile
  3880                           
  3881                           ;sensor.c: 64: WriteSPI1(0x30);
  3882  0011CA  0E30               	movlw	48
  3883  0011CC  ECB4  F00A         	call	_WriteSPI1
  3884                           
  3885                           ;sensor.c: 65: WriteSPI1(0xA3);
  3886  0011D0  0EA3               	movlw	163
  3887  0011D2  ECB4  F00A         	call	_WriteSPI1
  3888                           
  3889                           ;sensor.c: 66: WriteSPI1(0xA3);
  3890  0011D6  0EA3               	movlw	163
  3891  0011D8  ECB4  F00A         	call	_WriteSPI1
  3892                           
  3893                           ;sensor.c: 67: WriteSPI1(0xA3);
  3894  0011DC  0EA3               	movlw	163
  3895  0011DE  ECB4  F00A         	call	_WriteSPI1
  3896                           
  3897                           ;sensor.c: 68: PORTBbits.RB4=1;
  3898  0011E2  8881               	bsf	3969,4,c	;volatile
  3899                           
  3900                           ;sensor.c: 71: _delay((unsigned long)((100)*(4000000/4000.0)));
  3901  0011E4  0E82               	movlw	130
  3902  0011E6  6E12               	movwf	??_Ini_nRF& (0+255),c
  3903  0011E8  0EDE               	movlw	222
  3904  0011EA                     u777:
  3905  0011EA  2EE8               	decfsz	wreg,f,c
  3906  0011EC  D7FE               	goto	u777
  3907  0011EE  2E12               	decfsz	??_Ini_nRF& (0+255),f,c
  3908  0011F0  D7FC               	goto	u777
  3909  0011F2  0012               	return	
  3910  0011F4                     __end_of_Ini_nRF:
  3911                           	opt stack 0
  3912                           tblptru	equ	0xFF8
  3913                           tblptrh	equ	0xFF7
  3914                           tblptrl	equ	0xFF6
  3915                           tablat	equ	0xFF5
  3916                           intcon	equ	0xFF2
  3917                           intcon2	equ	0xFF1
  3918                           postinc0	equ	0xFEE
  3919                           wreg	equ	0xFE8
  3920                           status	equ	0xFD8
  3921                           
  3922 ;; *************** function _OpenSPI1 *****************
  3923 ;; Defined at:
  3924 ;;		line 63 in file "/opt/microchip/xc8/v1.32/sources/pic18/plib/SPI/spi1open.c"
  3925 ;; Parameters:    Size  Location     Type
  3926 ;;  sync_mode       1    wreg     unsigned char 
  3927 ;;  bus_mode        1   14[COMRAM] unsigned char 
  3928 ;;  smp_phase       1   15[COMRAM] unsigned char 
  3929 ;; Auto vars:     Size  Location     Type
  3930 ;;  sync_mode       1   16[COMRAM] unsigned char 
  3931 ;; Return value:  Size  Location     Type
  3932 ;;		None               void
  3933 ;; Registers used:
  3934 ;;		wreg, status,2, status,0
  3935 ;; Tracked objects:
  3936 ;;		On entry : 0/0
  3937 ;;		On exit  : 0/0
  3938 ;;		Unchanged: 0/0
  3939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3940 ;;      Params:         2       0       0       0       0       0       0       0       0
  3941 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3942 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3943 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3944 ;;Total ram usage:        3 bytes
  3945 ;; Hardware stack levels used:    1
  3946 ;; Hardware stack levels required when called:    1
  3947 ;; This function calls:
  3948 ;;		Nothing
  3949 ;; This function is called by:
  3950 ;;		_Ini_nRF
  3951 ;; This function uses a non-reentrant model
  3952 ;;
  3953                           
  3954                           	psect	text29
  3955  00138E                     __ptext29:
  3956                           	opt stack 0
  3957  00138E                     _OpenSPI1:
  3958                           	opt stack 28
  3959                           
  3960                           ;incstack = 0
  3961                           ;OpenSPI1@sync_mode stored from wreg
  3962  00138E  6E11               	movwf	OpenSPI1@sync_mode,c
  3963  001390  0E3F               	movlw	63
  3964  001392  16C7               	andwf	4039,f,c	;volatile
  3965  001394  0E00               	movlw	0
  3966  001396  6EC6               	movwf	4038,c	;volatile
  3967  001398  5011               	movf	OpenSPI1@sync_mode,w,c
  3968  00139A  12C6               	iorwf	4038,f,c	;volatile
  3969  00139C  5010               	movf	OpenSPI1@smp_phase,w,c
  3970  00139E  12C7               	iorwf	4039,f,c	;volatile
  3971  0013A0  D005               	goto	l1397
  3972  0013A2                     l518:
  3973  0013A2  8CC7               	bsf	4039,6,c	;volatile
  3974  0013A4  D013               	goto	l1401
  3975  0013A6                     l520:
  3976  0013A6  8CC7               	bsf	4039,6,c	;volatile
  3977  0013A8                     l521:
  3978  0013A8  88C6               	bsf	4038,4,c	;volatile
  3979  0013AA  D010               	goto	l1401
  3980  0013AC                     l1397:
  3981  0013AC  500F               	movf	OpenSPI1@bus_mode,w,c
  3982                           
  3983                           ; Switch size 1, requested type "space"
  3984                           ; Number of cases is 3, Range of values is 0 to 3
  3985                           ; switch strategies available:
  3986                           ; Name         Instructions Cycles
  3987                           ; simple_byte           10     6 (average)
  3988                           ;	Chosen strategy is simple_byte
  3989  0013AE  0A00               	xorlw	0	; case 0
  3990  0013B0  B4D8               	btfsc	status,2,c
  3991  0013B2  D7F7               	goto	l518
  3992  0013B4  0A02               	xorlw	2	; case 2
  3993  0013B6  B4D8               	btfsc	status,2,c
  3994  0013B8  D7F6               	goto	l520
  3995  0013BA  0A01               	xorlw	1	; case 3
  3996  0013BC  B4D8               	btfsc	status,2,c
  3997  0013BE  D7F4               	goto	l521
  3998  0013C0  D005               	goto	l1401
  3999  0013C2                     l524:
  4000  0013C2  8A92               	bsf	3986,5,c	;volatile
  4001  0013C4                     l526:
  4002  0013C4  8493               	bsf	3987,2,c	;volatile
  4003  0013C6  D00A               	goto	l525
  4004  0013C8                     l527:
  4005  0013C8  9493               	bcf	3987,2,c	;volatile
  4006  0013CA  D008               	goto	l525
  4007  0013CC                     l1401:
  4008  0013CC  5011               	movf	OpenSPI1@sync_mode,w,c
  4009                           
  4010                           ; Switch size 1, requested type "space"
  4011                           ; Number of cases is 2, Range of values is 4 to 5
  4012                           ; switch strategies available:
  4013                           ; Name         Instructions Cycles
  4014                           ; simple_byte            7     4 (average)
  4015                           ;	Chosen strategy is simple_byte
  4016  0013CE  0A04               	xorlw	4	; case 4
  4017  0013D0  B4D8               	btfsc	status,2,c
  4018  0013D2  D7F7               	goto	l524
  4019  0013D4  0A01               	xorlw	1	; case 5
  4020  0013D6  B4D8               	btfsc	status,2,c
  4021  0013D8  D7F5               	goto	l526
  4022  0013DA  D7F6               	goto	l527
  4023  0013DC                     l525:
  4024  0013DC  8093               	bsf	3987,0,c	;volatile
  4025  0013DE  9693               	bcf	3987,3,c	;volatile
  4026  0013E0  8AC6               	bsf	4038,5,c	;volatile
  4027  0013E2  0012               	return	
  4028  0013E4                     __end_of_OpenSPI1:
  4029                           	opt stack 0
  4030                           tblptru	equ	0xFF8
  4031                           tblptrh	equ	0xFF7
  4032                           tblptrl	equ	0xFF6
  4033                           tablat	equ	0xFF5
  4034                           intcon	equ	0xFF2
  4035                           intcon2	equ	0xFF1
  4036                           postinc0	equ	0xFEE
  4037                           wreg	equ	0xFE8
  4038                           status	equ	0xFD8
  4039                           
  4040 ;; *************** function _FlushRx_nRF *****************
  4041 ;; Defined at:
  4042 ;;		line 182 in file "sensor.c"
  4043 ;; Parameters:    Size  Location     Type
  4044 ;;		None
  4045 ;; Auto vars:     Size  Location     Type
  4046 ;;		None
  4047 ;; Return value:  Size  Location     Type
  4048 ;;		None               void
  4049 ;; Registers used:
  4050 ;;		wreg, cstack
  4051 ;; Tracked objects:
  4052 ;;		On entry : 0/0
  4053 ;;		On exit  : 0/0
  4054 ;;		Unchanged: 0/0
  4055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4056 ;;      Params:         0       0       0       0       0       0       0       0       0
  4057 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4058 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4059 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4060 ;;Total ram usage:        0 bytes
  4061 ;; Hardware stack levels used:    1
  4062 ;; Hardware stack levels required when called:    2
  4063 ;; This function calls:
  4064 ;;		_WriteSPI1
  4065 ;; This function is called by:
  4066 ;;		_main
  4067 ;; This function uses a non-reentrant model
  4068 ;;
  4069                           
  4070                           	psect	text30
  4071  0015DA                     __ptext30:
  4072                           	opt stack 0
  4073  0015DA                     _FlushRx_nRF:
  4074                           	opt stack 28
  4075                           
  4076                           ;sensor.c: 184: PORTBbits.RB4=0;
  4077                           
  4078                           ;incstack = 0
  4079  0015DA  9881               	bcf	3969,4,c	;volatile
  4080                           
  4081                           ;sensor.c: 185: WriteSPI1(0xE2);
  4082  0015DC  0EE2               	movlw	226
  4083  0015DE  ECB4  F00A         	call	_WriteSPI1
  4084                           
  4085                           ;sensor.c: 186: PORTBbits.RB4=1;
  4086  0015E2  8881               	bsf	3969,4,c	;volatile
  4087  0015E4  0012               	return	
  4088  0015E6                     __end_of_FlushRx_nRF:
  4089                           	opt stack 0
  4090                           tblptru	equ	0xFF8
  4091                           tblptrh	equ	0xFF7
  4092                           tblptrl	equ	0xFF6
  4093                           tablat	equ	0xFF5
  4094                           intcon	equ	0xFF2
  4095                           intcon2	equ	0xFF1
  4096                           postinc0	equ	0xFEE
  4097                           wreg	equ	0xFE8
  4098                           status	equ	0xFD8
  4099                           
  4100 ;; *************** function _WriteSPI1 *****************
  4101 ;; Defined at:
  4102 ;;		line 13 in file "/opt/microchip/xc8/v1.32/sources/pic18/plib/SPI/spi1writ.c"
  4103 ;; Parameters:    Size  Location     Type
  4104 ;;  data_out        1    wreg     unsigned char 
  4105 ;; Auto vars:     Size  Location     Type
  4106 ;;  data_out        1   15[COMRAM] unsigned char 
  4107 ;;  TempVar         1   14[COMRAM] unsigned char 
  4108 ;; Return value:  Size  Location     Type
  4109 ;;                  1    wreg      char 
  4110 ;; Registers used:
  4111 ;;		wreg
  4112 ;; Tracked objects:
  4113 ;;		On entry : 0/0
  4114 ;;		On exit  : 0/0
  4115 ;;		Unchanged: 0/0
  4116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4117 ;;      Params:         0       0       0       0       0       0       0       0       0
  4118 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4119 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4120 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4121 ;;Total ram usage:        2 bytes
  4122 ;; Hardware stack levels used:    1
  4123 ;; Hardware stack levels required when called:    1
  4124 ;; This function calls:
  4125 ;;		Nothing
  4126 ;; This function is called by:
  4127 ;;		_Ini_nRF
  4128 ;;		_RXmod_nRF
  4129 ;;		_Read_Status_nRF
  4130 ;;		_Read_Char_nRF
  4131 ;;		_FlushRx_nRF
  4132 ;;		_TXmod_nRF
  4133 ;;		_Clear_Status_nRF
  4134 ;;		_Write_Char_nRF
  4135 ;;		_Read_String_nRF
  4136 ;;		_Write_String_nRF
  4137 ;;		_FlushTx_nRF
  4138 ;; This function uses a non-reentrant model
  4139 ;;
  4140                           
  4141                           	psect	text31
  4142  001568                     __ptext31:
  4143                           	opt stack 0
  4144  001568                     _WriteSPI1:
  4145                           	opt stack 28
  4146                           
  4147                           ;incstack = 0
  4148                           ;WriteSPI1@data_out stored from wreg
  4149  001568  6E10               	movwf	WriteSPI1@data_out,c
  4150  00156A  CFC9 F00F          	movff	4041,WriteSPI1@TempVar	;volatile
  4151  00156E  969E               	bcf	3998,3,c	;volatile
  4152  001570  9EC6               	bcf	4038,7,c	;volatile
  4153  001572  C010  FFC9         	movff	WriteSPI1@data_out,4041	;volatile
  4154  001576  BEC6               	btfsc	4038,7,c	;volatile
  4155  001578  0012               	return	
  4156  00157A                     l565:
  4157  00157A  B69E               	btfsc	3998,3,c	;volatile
  4158                           
  4159                           ;	Return value of _WriteSPI1 is never used
  4160  00157C  0012               	return	
  4161  00157E  D7FD               	goto	l565
  4162  001580                     __end_of_WriteSPI1:
  4163                           	opt stack 0
  4164                           tblptru	equ	0xFF8
  4165                           tblptrh	equ	0xFF7
  4166                           tblptrl	equ	0xFF6
  4167                           tablat	equ	0xFF5
  4168                           intcon	equ	0xFF2
  4169                           intcon2	equ	0xFF1
  4170                           postinc0	equ	0xFEE
  4171                           wreg	equ	0xFE8
  4172                           status	equ	0xFD8
  4173                           
  4174 ;; *************** function _Derecho *****************
  4175 ;; Defined at:
  4176 ;;		line 237 in file "main.c"
  4177 ;; Parameters:    Size  Location     Type
  4178 ;;		None
  4179 ;; Auto vars:     Size  Location     Type
  4180 ;;		None
  4181 ;; Return value:  Size  Location     Type
  4182 ;;		None               void
  4183 ;; Registers used:
  4184 ;;		None
  4185 ;; Tracked objects:
  4186 ;;		On entry : 0/0
  4187 ;;		On exit  : 0/0
  4188 ;;		Unchanged: 0/0
  4189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4190 ;;      Params:         0       0       0       0       0       0       0       0       0
  4191 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4192 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4193 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4194 ;;Total ram usage:        0 bytes
  4195 ;; Hardware stack levels used:    1
  4196 ;; Hardware stack levels required when called:    1
  4197 ;; This function calls:
  4198 ;;		Nothing
  4199 ;; This function is called by:
  4200 ;;		_main
  4201 ;; This function uses a non-reentrant model
  4202 ;;
  4203                           
  4204                           	psect	text32
  4205  00160E                     __ptext32:
  4206                           	opt stack 0
  4207  00160E                     _Derecho:
  4208                           	opt stack 29
  4209                           
  4210                           ;main.c: 238: LATBbits.LATB2=1;
  4211                           
  4212                           ;incstack = 0
  4213  00160E  848A               	bsf	3978,2,c	;volatile
  4214                           
  4215                           ;main.c: 239: LATBbits.LATB3=0;
  4216  001610  968A               	bcf	3978,3,c	;volatile
  4217                           
  4218                           ;main.c: 240: LATBbits.LATB4=1;
  4219  001612  888A               	bsf	3978,4,c	;volatile
  4220                           
  4221                           ;main.c: 241: LATBbits.LATB5=0;
  4222  001614  9A8A               	bcf	3978,5,c	;volatile
  4223  001616  0012               	return	
  4224  001618                     __end_of_Derecho:
  4225                           	opt stack 0
  4226                           tblptru	equ	0xFF8
  4227                           tblptrh	equ	0xFF7
  4228                           tblptrl	equ	0xFF6
  4229                           tablat	equ	0xFF5
  4230                           intcon	equ	0xFF2
  4231                           intcon2	equ	0xFF1
  4232                           postinc0	equ	0xFEE
  4233                           wreg	equ	0xFE8
  4234                           status	equ	0xFD8
  4235                           
  4236 ;; *************** function _alta_prioridad *****************
  4237 ;; Defined at:
  4238 ;;		line 67 in file "main.c"
  4239 ;; Parameters:    Size  Location     Type
  4240 ;;		None
  4241 ;; Auto vars:     Size  Location     Type
  4242 ;;		None
  4243 ;; Return value:  Size  Location     Type
  4244 ;;		None               void
  4245 ;; Registers used:
  4246 ;;		wreg, status,2
  4247 ;; Tracked objects:
  4248 ;;		On entry : 0/0
  4249 ;;		On exit  : 0/0
  4250 ;;		Unchanged: 0/0
  4251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4252 ;;      Params:         0       0       0       0       0       0       0       0       0
  4253 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4254 ;;      Temps:         14       0       0       0       0       0       0       0       0
  4255 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4256 ;;Total ram usage:       14 bytes
  4257 ;; Hardware stack levels used:    1
  4258 ;; This function calls:
  4259 ;;		Nothing
  4260 ;; This function is called by:
  4261 ;;		Interrupt level 2
  4262 ;; This function uses a non-reentrant model
  4263 ;;
  4264                           
  4265                           	psect	intcode
  4266  000008                     __pintcode:
  4267                           	opt stack 0
  4268  000008                     _alta_prioridad:
  4269                           	opt stack 27
  4270                           
  4271                           ;incstack = 0
  4272  000008  CFFA F001          	movff	pclath,??_alta_prioridad
  4273  00000C  CFFB F002          	movff	pclatu,??_alta_prioridad+1
  4274  000010  CFE9 F003          	movff	fsr0l,??_alta_prioridad+2
  4275  000014  CFEA F004          	movff	fsr0h,??_alta_prioridad+3
  4276  000018  CFE1 F005          	movff	fsr1l,??_alta_prioridad+4
  4277  00001C  CFE2 F006          	movff	fsr1h,??_alta_prioridad+5
  4278  000020  CFD9 F007          	movff	fsr2l,??_alta_prioridad+6
  4279  000024  CFDA F008          	movff	fsr2h,??_alta_prioridad+7
  4280  000028  CFF3 F009          	movff	prodl,??_alta_prioridad+8
  4281  00002C  CFF4 F00A          	movff	prodh,??_alta_prioridad+9
  4282  000030  CFF6 F00B          	movff	tblptrl,??_alta_prioridad+10
  4283  000034  CFF7 F00C          	movff	tblptrh,??_alta_prioridad+11
  4284  000038  CFF8 F00D          	movff	tblptru,??_alta_prioridad+12
  4285  00003C  CFF5 F00E          	movff	tablat,??_alta_prioridad+13
  4286                           
  4287                           ;main.c: 69: if (PIR1bits.RCIF)
  4288  000040  AA9E               	btfss	3998,5,c	;volatile
  4289  000042  D006               	goto	i2l359
  4290                           
  4291                           ;main.c: 70: {
  4292                           ;main.c: 71: dato = RCREG1;
  4293  000044  CFAE F049          	movff	4014,_dato	;volatile
  4294                           
  4295                           ;main.c: 72: flag_rx = 1;
  4296  000048  0E00               	movlw	0
  4297  00004A  6E46               	movwf	_flag_rx+1,c
  4298  00004C  0E01               	movlw	1
  4299  00004E  6E45               	movwf	_flag_rx,c
  4300  000050                     i2l359:
  4301  000050  C00E  FFF5         	movff	??_alta_prioridad+13,tablat
  4302  000054  C00D  FFF8         	movff	??_alta_prioridad+12,tblptru
  4303  000058  C00C  FFF7         	movff	??_alta_prioridad+11,tblptrh
  4304  00005C  C00B  FFF6         	movff	??_alta_prioridad+10,tblptrl
  4305  000060  C00A  FFF4         	movff	??_alta_prioridad+9,prodh
  4306  000064  C009  FFF3         	movff	??_alta_prioridad+8,prodl
  4307  000068  C008  FFDA         	movff	??_alta_prioridad+7,fsr2h
  4308  00006C  C007  FFD9         	movff	??_alta_prioridad+6,fsr2l
  4309  000070  C006  FFE2         	movff	??_alta_prioridad+5,fsr1h
  4310  000074  C005  FFE1         	movff	??_alta_prioridad+4,fsr1l
  4311  000078  C004  FFEA         	movff	??_alta_prioridad+3,fsr0h
  4312  00007C  C003  FFE9         	movff	??_alta_prioridad+2,fsr0l
  4313  000080  C002  FFFB         	movff	??_alta_prioridad+1,pclatu
  4314  000084  C001  FFFA         	movff	??_alta_prioridad,pclath
  4315  000088  0011               	retfie		f
  4316  00008A                     __end_of_alta_prioridad:
  4317                           	opt stack 0
  4318                           pclatu	equ	0xFFB
  4319                           pclath	equ	0xFFA
  4320                           tblptru	equ	0xFF8
  4321                           tblptrh	equ	0xFF7
  4322                           tblptrl	equ	0xFF6
  4323                           tablat	equ	0xFF5
  4324                           prodh	equ	0xFF4
  4325                           prodl	equ	0xFF3
  4326                           intcon	equ	0xFF2
  4327                           intcon2	equ	0xFF1
  4328                           postinc0	equ	0xFEE
  4329                           fsr0h	equ	0xFEA
  4330                           fsr0l	equ	0xFE9
  4331                           wreg	equ	0xFE8
  4332                           fsr1h	equ	0xFE2
  4333                           fsr1l	equ	0xFE1
  4334                           fsr2h	equ	0xFDA
  4335                           fsr2l	equ	0xFD9
  4336                           status	equ	0xFD8
  4337                           pclatu	equ	0xFFB
  4338                           pclath	equ	0xFFA
  4339                           tblptru	equ	0xFF8
  4340                           tblptrh	equ	0xFF7
  4341                           tblptrl	equ	0xFF6
  4342                           tablat	equ	0xFF5
  4343                           prodh	equ	0xFF4
  4344                           prodl	equ	0xFF3
  4345                           intcon	equ	0xFF2
  4346                           intcon2	equ	0xFF1
  4347                           postinc0	equ	0xFEE
  4348                           fsr0h	equ	0xFEA
  4349                           fsr0l	equ	0xFE9
  4350                           wreg	equ	0xFE8
  4351                           fsr1h	equ	0xFE2
  4352                           fsr1l	equ	0xFE1
  4353                           fsr2h	equ	0xFDA
  4354                           fsr2l	equ	0xFD9
  4355                           status	equ	0xFD8
  4356                           
  4357                           	psect	rparam
  4358  0000                     pclatu	equ	0xFFB
  4359                           pclath	equ	0xFFA
  4360                           tblptru	equ	0xFF8
  4361                           tblptrh	equ	0xFF7
  4362                           tblptrl	equ	0xFF6
  4363                           tablat	equ	0xFF5
  4364                           prodh	equ	0xFF4
  4365                           prodl	equ	0xFF3
  4366                           intcon	equ	0xFF2
  4367                           intcon2	equ	0xFF1
  4368                           postinc0	equ	0xFEE
  4369                           fsr0h	equ	0xFEA
  4370                           fsr0l	equ	0xFE9
  4371                           wreg	equ	0xFE8
  4372                           fsr1h	equ	0xFE2
  4373                           fsr1l	equ	0xFE1
  4374                           fsr2h	equ	0xFDA
  4375                           fsr2l	equ	0xFD9
  4376                           status	equ	0xFD8


Data Sizes:
    Strings     4
    Constant    0
    Data        0
    BSS         25
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     52      85
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    Lcd_Out@buffer	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> EUSART1_Receive_ISR(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 0
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _velocidad_3->_PWM_CCP1
    _velocidad_3->_PWM_CCP2
    _velocidad_2->_PWM_CCP1
    _velocidad_2->_PWM_CCP2
    _velocidad_1->_PWM_CCP1
    _velocidad_1->_PWM_CCP2
    _Stop->_PWM_CCP1
    _Stop->_PWM_CCP2
    _PWM_CCP2->___lldiv
    _PWM_CCP1->___lldiv
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _Reversa->_Sound
    _Read_Status_nRF->_WriteSPI1
    _Read_Char_nRF->_WriteSPI1
    _RXmod_nRF->_WriteSPI1
    _Lcd_Out->_Lcd_Chr_CP
    _Lcd_Out->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Ini_nRF->_OpenSPI1
    _FlushRx_nRF->_WriteSPI1

Critical Paths under _alta_prioridad in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _alta_prioridad in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _alta_prioridad in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _alta_prioridad in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _alta_prioridad in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _alta_prioridad in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _alta_prioridad in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _alta_prioridad in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _alta_prioridad in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                19    19      0   14897
                                             47 COMRAM     5     5      0
                            _Derecho
                        _FlushRx_nRF
                            _Ini_nRF
                            _Lcd_Cmd
                           _Lcd_Init
                            _Lcd_Out
                          _RXmod_nRF
                      _Read_Char_nRF
                    _Read_Status_nRF
                            _Reversa
                  _SYSTEM_Initialize
                               _Stop
                        _velocidad_1
                        _velocidad_2
                        _velocidad_3
 ---------------------------------------------------------------------------------
 (1) _velocidad_3                                          0     0      0    3382
                           _PWM_CCP1
                           _PWM_CCP2
 ---------------------------------------------------------------------------------
 (1) _velocidad_2                                          0     0      0    3382
                           _PWM_CCP1
                           _PWM_CCP2
 ---------------------------------------------------------------------------------
 (1) _velocidad_1                                          0     0      0    3382
                           _PWM_CCP1
                           _PWM_CCP2
 ---------------------------------------------------------------------------------
 (1) _Stop                                                 0     0      0    3382
                           _PWM_CCP1
                           _PWM_CCP2
 ---------------------------------------------------------------------------------
 (2) _PWM_CCP2                                            20    16      4    1691
                                             27 COMRAM    20    16      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) _PWM_CCP1                                            20    16      4    1691
                                             27 COMRAM    20    16      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     362
                                             14 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     529
                                             14 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     272
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     272
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      68
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      68
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      68
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      68
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Reversa                                              0     0      0       0
                              _Sound
 ---------------------------------------------------------------------------------
 (2) _Sound                                                1     1      0       0
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Read_Status_nRF                                      5     3      2      30
                                             16 COMRAM     5     3      2
                           _ReadSPI1
                          _WriteSPI1
 ---------------------------------------------------------------------------------
 (1) _Read_Char_nRF                                        1     1      0      30
                                             16 COMRAM     1     1      0
                           _ReadSPI1
                          _WriteSPI1
 ---------------------------------------------------------------------------------
 (2) _ReadSPI1                                             1     1      0       0
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _RXmod_nRF                                            0     0      0      15
                          _WriteSPI1
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out                                              5     2      3     466
                                             17 COMRAM     5     2      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Chr_CP                                           3     3      0     120
                                             14 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     210
                                             17 COMRAM     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     120
                                             14 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Ini_nRF                                              1     1      0     181
                                             17 COMRAM     1     1      0
                           _OpenSPI1
                          _WriteSPI1
 ---------------------------------------------------------------------------------
 (2) _OpenSPI1                                             3     1      2     166
                                             14 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _FlushRx_nRF                                          0     0      0      15
                          _WriteSPI1
 ---------------------------------------------------------------------------------
 (2) _WriteSPI1                                            2     2      0      15
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Derecho                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _alta_prioridad                                      14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Derecho
   _FlushRx_nRF
     _WriteSPI1
   _Ini_nRF
     _OpenSPI1
     _WriteSPI1
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out
     _Lcd_Chr_CP
     _Lcd_Cmd
   _RXmod_nRF
     _WriteSPI1
   _Read_Char_nRF
     _ReadSPI1
     _WriteSPI1
   _Read_Status_nRF
     _ReadSPI1
     _WriteSPI1
   _Reversa
     _Sound
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _Stop
     _PWM_CCP1
       ___lldiv
       ___lmul
     _PWM_CCP2
       ___lldiv
       ___lmul
   _velocidad_1
     _PWM_CCP1
       ___lldiv
       ___lmul
     _PWM_CCP2
       ___lldiv
       ___lmul
   _velocidad_2
     _PWM_CCP1
       ___lldiv
       ___lmul
     _PWM_CCP2
       ___lldiv
       ___lmul
   _velocidad_3
     _PWM_CCP1
       ___lldiv
       ___lmul
     _PWM_CCP2
       ___lldiv
       ___lmul

 _alta_prioridad (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     34      55       1       89.5%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      55       6        0.0%
DATA                 0      0      55       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Thu Jul 18 22:57:07 2019

                               ReadSPI1@TempVar 000F                                              u65 1006  
                                            u75 1020                                              u85 1044  
                                            u95 0EDA                                 _timer0ReloadVal 0047  
                                  __CFG_CP0$OFF 000000                                    __CFG_CP1$OFF 000000  
                                  __CFG_CP2$OFF 000000                                    __CFG_CP3$OFF 000000  
                                   __CFG_LVP$ON 000000                                             l307 0E26  
                                           l520 13A6                                             l521 13A8  
                                           l524 13C2                                             l525 13DC  
                                           l526 13C4                                             l518 13A2  
                                           l527 13C8                                             l548 15C4  
                                           l565 157A                                    __CFG_CPB$OFF 000000  
                                           u120 0AA8                                             u105 0EF4  
                                           u130 0AFE                                             u210 0A1A  
                                           u115 0F18                                             u125 0A9E  
                                           u205 096E                                             u135 0AF4  
                                           u215 0A10                                             u160 0C4E  
                                           u170 0874                                             u155 0BA2  
                                           u180 08CA                                             u165 0C44  
                                           _PR2 000FBB                                             u175 086A  
                                           u185 08C0                                    __CFG_CPD$OFF 000000  
                                           u507 0CAE                                             u517 0CD8  
                                           u607 1508                                             u527 0CE6  
                                           u617 151E                                             u537 0CF4  
                                           u707 0E06                                             u627 1526  
                                           u547 0D02                                             u717 0E16  
                                           u637 0F4E                                             u557 0D10  
                                           u727 0E56                                             u647 0FD0  
                                           u567 0D1E                                             u737 0E98  
                                           u657 0FEC                                             u577 0D2C  
                                           u497 0C9C                                             u747 107A  
                                           u667 0DC6                                             u587 1534  
                                           u757 10FC                                             u677 0DD6  
                                           u597 1544                                             u767 1112  
                                           u687 0DE6                                             u777 11EA  
                                           u697 0DF6                                             wreg 000FE8  
                                    _TXSTA1bits 000FAC                                            l1019 1264  
                                          l1303 0AC2                                            l1401 13CC  
                                          l1307 0B12                                            l1173 135C  
                                          l1183 1216                                            l1351 08DE  
                                          l1185 1222                                            l1169 1348  
                                          l1195 1256                                            l1187 1226  
                                          l1347 088E                                            l1541 1280  
                                          l1543 1286                                            l1551 12AE  
                                          l1553 12B6                                            l1545 128C  
                                          l1539 127A                                            l1397 13AC  
                                          l1557 12CA                                            l1549 1294  
                                          l1901 0D34                                            l1911 0D54  
                                          l1903 0D3C                                            l1913 0D5A  
                                          l1905 0D42                                            l1915 0D60  
                                          l1907 0D48                                            l1909 0D4E  
                                          l1919 0D66                                            l1881 0CBA  
                                          STR_1 0801                                            _LATA 000F89  
                                          _LATB 000F8A                                            _LATC 000F8B  
                                          _LATD 000F8C                                            _LATE 000F8D  
                                          _TMR2 000FBC                                    PWM_CCP1@fpwm 001E  
                                  PWM_CCP1@duty 001C                                            _Stop 142C  
                                  PWM_CCP2@fpwm 001E                                    PWM_CCP2@duty 001C  
                                          _dato 0049                                            _main 0C6E  
                                          fsr0h 000FEA                                            fsr1h 000FE2  
                                          fsr0l 000FE9                                            fsr2h 000FDA  
                                          fsr1l 000FE1                                            fsr2l 000FD9  
                                 __CFG_BORV$190 000000                                            pclat 000FFA  
                                          prodh 000FF4                                            prodl 000FF3  
                                          start 008A                                   __CFG_IESO$OFF 000000  
                                 ??_FlushRx_nRF 0011                                 __end_of_Derecho 1618  
                               __end_of_Lcd_Cmd 111E                                 __end_of_Lcd_Out 12DE  
                                 __CFG_MCLRE$ON 000000                                 __end_of_Ini_nRF 11F4  
                                    _Lcd_Chr_CP 0ECC                                 __end_of_Reversa 15DA  
                __size_of_OSCILLATOR_Initialize 0012                   __end_of_OSCILLATOR_Initialize 15BA  
                                         ?_Stop 0001                           _eusart1RxStatusBuffer 003D  
                                 _Read_Char_nRF 154E                                           ?_main 0001  
                               __end_of___lldiv 1276                                           _T0CON 000FD5  
                                         _T1CON 000FCD                                           _T2CON 000FBA  
                                __CFG_DEBUG$OFF 000000                                           i2l359 0050  
                                         _TMR0H 000FD7                                           _TMR1H 000FCF  
                                         _TMR0L 000FD6                                           _TMR1L 000FCE  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94                                           _TRISD 000F95  
                                         _TRISE 000F96                                   __CFG_WRT0$OFF 000000  
                                 __CFG_WRT1$OFF 000000                                   __CFG_WRT2$OFF 000000  
                           ___lmul@multiplicand 0013                                   __CFG_WRT3$OFF 000000  
                                __CFG_EBTR0$OFF 000000                                  __CFG_FCMEN$OFF 000000  
                                __CFG_EBTR1$OFF 000000                                  __CFG_EBTR2$OFF 000000  
                                __CFG_EBTR3$OFF 000000                                   __CFG_WRTB$OFF 000000  
                                         _Sound 152C                                   __CFG_WRTC$OFF 000000  
                                 __CFG_WRTD$OFF 000000                                  __CFG_EBTRB$OFF 000000  
                              __end_of_PWM_CCP1 0C6E                                __end_of_PWM_CCP2 0A3A  
                                         tablat 000FF5                                           status 000FD8  
                                __CFG_T3CMX$RC0 000000                                  __CFG_ICPRT$OFF 000000  
            _EUSART1_DefaultFramingErrorHandler 000000                                  __CFG_PBADEN$ON 000000  
                              __end_of_Lcd_Init 0ECC                                 __initialization 1580  
                                  __end_of_Stop 145E                      __end_of_EUSART1_Initialize 1338  
                                  __end_of_main 0D9E                                __end_of_ReadSPI1 15CC  
                                __CFG_PCLKEN$ON 000000                             __end_of_FlushRx_nRF 15E6  
                                ?_Read_Char_nRF 0001                                          ??_Stop 0030  
                              __end_of_OpenSPI1 13E4                        __size_of_Read_Status_nRF 0028  
                                        ??_main 0030                                   __activetblptr 000002  
                                __CFG_SDOMX$RB3 000000                                 __CFG_CCP2MX$RC1 000000  
                                        ?_Sound 0001                                          _ACTCON 000FB5  
                                PWM_CCP1@PR2cal 0028                                          _CCPR1L 000FBE  
                                        _CCPR2L 000F90                                  PWM_CCP2@PR2cal 0028  
                                        _ANSELA 000F5B                                          _ANSELB 000F5C  
                                        _ANSELC 000F5D                                          _ANSELD 000F5E  
                                        _ANSELE 000F5F                                  __CFG_WDTEN$OFF 000000  
                                        _RCREG1 000FAE                              __size_of_RXmod_nRF 0028  
                                        _RCSTA1 000FAB                                          _OSCCON 000FD3  
                                     ??_Derecho 000F                                       ??_Lcd_Cmd 000F  
                                        _SPBRG1 000FAF                                          _TMR1IF 007CF0  
                                        _TMR1ON 007E68                                       ??_Lcd_Out 0015  
                                        _TXREG1 000FAD                                          _TXSTA1 000FAC  
                                     ??_Ini_nRF 0012                                  __CFG_XINST$OFF 000000  
                                     ??_Reversa 0010                                OpenSPI1@bus_mode 000F  
                                        ___lmul 1338                                     ?_Lcd_Chr_CP 0001  
                                __CFG_STVREN$ON 000000                                       ??___lldiv 0017  
                      ?_EUSART1_SetErrorHandler 000F                                          clear_0 1586  
              ??_EUSART1_SetOverrunErrorHandler 0011                 ?_EUSART1_SetOverrunErrorHandler 000F  
                                  __mediumconst 0000                                          tblptrh 000FF7  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                                  ?_velocidad_1 0001                                    ?_velocidad_2 0001  
                                  ?_velocidad_3 0001                                 _eusart1RxBuffer 0035  
                 __size_of_INTERRUPT_Initialize 0004                            __CFG_LS48MHZ$SYS24X4 000000  
                             _SYSTEM_Initialize 1596                                      __accesstop 0060  
                       __end_of__initialization 158C                              __size_of_WriteSPI1 0018  
                            ?_SYSTEM_Initialize 0001                                     _FlushRx_nRF 15DA  
                                __pcstackCOMRAM 0001                                __CFG_nPWRTEN$OFF 000000  
                                 __end_of_Sound 154E                             ??_SYSTEM_Initialize 0011  
                               ??_Read_Char_nRF 0011                                       ?_PWM_CCP1 001C  
                                     ?_PWM_CCP2 001C                               __end_of_RXmod_nRF 152C  
                       __size_of_alta_prioridad 0082                                         ??_Sound 000F  
                                     ?_Lcd_Init 0001                               ??_Read_Status_nRF 0013  
                     __end_of_SYSTEM_Initialize 15A8                             __size_of_Lcd_Chr_CP 012C  
                                 _eusart1RxHead 004B                                   _eusart1RxTail 004D  
                              WriteSPI1@TempVar 000F                 ??_EUSART1_SetRxInterruptHandler 0011  
                                     ?_ReadSPI1 0001                                      __pnvCOMRAM 004E  
                                     ?_OpenSPI1 000F                 __end_of_EUSART1_SetErrorHandler 160E  
                             __CFG_PLLSEL$PLL4X 000000                                         ?___lmul 000F  
                                       _CCP1CON 000FBD                                         _CCP2CON 000F97  
                                    ??_PWM_CCP1 0020                                      ??_PWM_CCP2 0020  
                                ___lmul@product 0017                               __end_of_WriteSPI1 1580  
        __end_of_EUSART1_SetFramingErrorHandler 1604         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler 15FA                                         _OSCCON2 000FD2  
                                       _OSCTUNE 000F9B                                         _SPBRGH1 000FB0  
                                    ??_Lcd_Init 0012                                         _SSP1BUF 000FC9  
                                    ??_ReadSPI1 000F                                         _Derecho 160E  
                                       _Lcd_Cmd 0FF8                                         _Lcd_Out 1276  
                                       _Ini_nRF 111E                                      ??_OpenSPI1 0011  
                                       __Hparam 0000                                         __Lparam 0000  
                                       _Reversa 15CC                                 __size_of___lmul 0056  
                                       ___lldiv 11F4                                    __psmallconst 0800  
                                       __pcinit 1580                                         __ramtop 0800  
                                       __ptext0 0C6E                                         _flag_rx 0045  
                                       __ptext1 145E                                         __ptext2 1488  
                                       __ptext3 14B2                                         __ptext4 142C  
                                       __ptext5 0806                                         __ptext6 0A3A  
                                       __ptext7 1338                                         __ptext8 11F4  
                                       __ptext9 1596                                       _T0CONbits 000FD5  
                         _OSCILLATOR_Initialize 15A8                                       _T2CONbits 000FBA  
                            _EUSART1_Initialize 12DE                        ??_PIN_MANAGER_Initialize 000F  
                    __size_of_SYSTEM_Initialize 0012                               PWM_CCP1@AuxCCPR2L 002C  
                          end_of_initialization 158C                             ?_EUSART1_Initialize 0001  
                          __size_of_velocidad_1 002A                            __size_of_velocidad_2 002A  
                          __size_of_velocidad_3 002A                                   __Lmediumconst 0000  
                   _EUSART1_OverrunErrorHandler 0052                               OpenSPI1@smp_phase 0010  
                             PWM_CCP2@AuxCCPR2L 002C                                 ___lldiv@divisor 0013  
         __end_of_EUSART1_SetRxInterruptHandler 15F0          __size_of_EUSART1_SetRxInterruptHandler 000A  
                 _EUSART1_SetRxInterruptHandler 15E6                                 ___lldiv@counter 001B  
                                  ??_Lcd_Chr_CP 000F                                         postinc0 000FEE  
                             OpenSPI1@sync_mode 0011                            ??_EUSART1_Initialize 0011  
                                     _PORTBbits 000F81                                       _PORTDbits 000F83  
                                _alta_prioridad 0008                                       _TRISAbits 000F92  
                                     _TRISBbits 000F93                                       _TRISCbits 000F94  
                                     _TRISDbits 000F95                __size_of_EUSART1_SetErrorHandler 000A  
                            __end_of_Lcd_Chr_CP 0FF8                                    ?_FlushRx_nRF 0001  
                                    main@status 0033                    __end_of_INTERRUPT_Initialize 161C  
                                __end_of___lmul 138E                                 _Read_Status_nRF 14DC  
                        __end_of_alta_prioridad 008A                          ?_OSCILLATOR_Initialize 0001  
                             __size_of_PWM_CCP1 0234                               __size_of_PWM_CCP2 0234  
                          Read_Status_nRF@state 0014                             start_initialization 1580  
                                     _RXmod_nRF 1504                 __size_of_PIN_MANAGER_Initialize 0048  
 EUSART1_SetRxInterruptHandler@interruptHandler 000F                                   Lcd_Out@buffer 0013  
                             __size_of_Lcd_Init 012E                                 __CFG_nLPBOR$OFF 000000  
                             __size_of_ReadSPI1 0012                               __size_of_OpenSPI1 0056  
                                      ??___lmul 0017                  ?_EUSART1_SetRxInterruptHandler 000F  
                         __end_of_Read_Char_nRF 1568                                 ?_alta_prioridad 0001  
                                _eusart1RxCount 004A                             PWM_CCP1@prescalador 0024  
                                   __pbssCOMRAM 0035                                      ?_RXmod_nRF 0001  
             _EUSART1_RxDefaultInterruptHandler 0054                                       _WriteSPI1 1568  
                           __end_of__stringdata 0805                ??_EUSART1_SetFramingErrorHandler 0011  
               ?_EUSART1_SetFramingErrorHandler 000F                                        ?_Derecho 0001  
                                      ?_Lcd_Cmd 0001                                        ?_Lcd_Out 0012  
                                      ?_Ini_nRF 0001                               WriteSPI1@data_out 0010  
                       __end_of_Read_Status_nRF 1504                          _PIN_MANAGER_Initialize 13E4  
                                      ?_Reversa 0001                                       __pintcode 0008  
                                      ?___lldiv 000F                             PWM_CCP2@prescalador 0024  
                                   __smallconst 0800                                        _BAUDCON1 000FB8  
            _EUSART1_DefaultOverrunErrorHandler 000000                            _EUSART1_ErrorHandler 004E  
                                    ?_WriteSPI1 0001                         _EUSART1_SetErrorHandler 1604  
                                __size_of_Sound 0022                            _INTERRUPT_Initialize 1618  
       EUSART1_SetErrorHandler@interruptHandler 000F                                        _LATBbits 000F8A  
                                      _LATCbits 000F8B                                        _PIE1bits 000F9D  
                                      _PIR1bits 000F9E                                        _RCONbits 000FD0  
                                      Lcd_Out@x 0012                                __CFG_WDTPS$32768 000000  
                                      Lcd_Out@y 0015                            __size_of_FlushRx_nRF 000C  
                                      _SSP1CON1 000FC6                                        _SSP1STAT 000FC7  
                                      _PWM_CCP1 0A3A                                        _PWM_CCP2 0806  
                                  Lcd_Init@data 0013                                     __stringdata 0801  
                                     main@nrf24 0032                                     ??_RXmod_nRF 0011  
                             __CFG_CFGPLLEN$OFF 000000                                   ??_velocidad_1 0030  
                                 ??_velocidad_2 0030                                   ??_velocidad_3 0030  
                                      _Lcd_Init 0D9E                               ___lmul@multiplier 000F  
                                   _INTCON2bits 000FF1                           ?_INTERRUPT_Initialize 0001  
                                      _ReadSPI1 15BA                                __size_of_Derecho 000A  
                              __size_of_Lcd_Cmd 0126                                __size_of_Lcd_Out 0068  
                                      _OpenSPI1 138E                                __size_of_Ini_nRF 00D6  
                                      __Hrparam 0000                                ?_Read_Status_nRF 0011  
                                      __Lrparam 0000                              __CFG_BOREN$SBORDIS 000000  
                              __size_of_Reversa 000E                           Read_Char_nRF@caracter 0011  
                       ??_OSCILLATOR_Initialize 000F                                __size_of___lldiv 0082  
                   __size_of_EUSART1_Initialize 005A                       ??_EUSART1_SetErrorHandler 0011  
                   _EUSART1_DefaultErrorHandler 000000                                  Lcd_Chr_CP@data 0011  
                                   ??_WriteSPI1 000F                                        __ptext10 13E4  
                                      __ptext11 15A8                                        __ptext20 14DC  
                                      __ptext12 1618                                        __ptext21 154E  
                                      __ptext13 12DE                                        __ptext30 15DA  
                                      __ptext22 15BA                                        __ptext14 15E6  
                                      __ptext31 1568                                        __ptext23 1504  
                                      __ptext15 15F0                                        __ptext32 160E  
                                      __ptext24 1276                                        __ptext16 15FA  
                                      __ptext25 0ECC                                        __ptext17 1604  
                                      __ptext26 0D9E                                        __ptext18 15CC  
                                      __ptext27 0FF8                                        __ptext19 152C  
                                      __ptext28 111E                                        __ptext29 138E  
                                  _SSP1CON1bits 000FC6                                     Lcd_Cmd@data 0011  
                                 __size_of_Stop 0032                                   __size_of_main 0130  
                           __end_of_velocidad_1 14DC                             __end_of_velocidad_2 14B2  
                           __end_of_velocidad_3 1488  EUSART1_SetOverrunErrorHandler@interruptHandler 000F  
                              ??_alta_prioridad 0001                                    _SSP1STATbits 000FC7  
                            PWM_CCP1@AuxCCP2CON 0026                     _EUSART1_FramingErrorHandler 0050  
                           _EUSART1_Receive_ISR 000000                                     Lcd_Out@data 0016  
                                    _INTCONbits 000FF2                          ??_INTERRUPT_Initialize 000F  
                                      intlevel2 0000                              PWM_CCP2@AuxCCP2CON 0026  
                              ___lldiv@dividend 000F                         ?_PIN_MANAGER_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 15FA         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 15F0                                      _RCSTA1bits 000FAB  
                          __CFG_CPUDIV$NOCLKDIV 000000  EUSART1_SetFramingErrorHandler@interruptHandler 000F  
                            _eusart1RxLastError 004C                                ___lldiv@quotient 0017  
                                   _velocidad_1 14B2                                     _velocidad_2 1488  
                                   _velocidad_3 145E                              __CFG_FOSC$INTOSCIO 000000  
                __end_of_PIN_MANAGER_Initialize 142C                          __size_of_Read_Char_nRF 001A  
