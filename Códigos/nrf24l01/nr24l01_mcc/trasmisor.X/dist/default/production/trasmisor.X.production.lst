

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Jul 17 01:56:12 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    23  0000                     
    24                           ; Version 2.05
    25                           ; Generated 20/12/2018 GMT
    26                           ; 
    27                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F45K50 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     
    59                           	psect	nvCOMRAM
    60  0000'                    __pnvCOMRAM:
    61                           	opt callstack 0
    62  0000'                    _timer0ReloadVal:
    63                           	opt callstack 0
    64  0000'                    	ds	2
    65  0002'                    _TMR0_InterruptHandler:
    66                           	opt callstack 0
    67  0002'                    	ds	2
    68  0000                     _ANSELA	set	3931
    69  0000                     _ANSELE	set	3935
    70  0000                     _ANSELB	set	3932
    71  0000                     _ANSELC	set	3933
    72  0000                     _ANSELD	set	3934
    73  0000                     _RCONbits	set	4048
    74  0000                     _T0CON	set	4053
    75  0000                     _TMR0L	set	4054
    76  0000                     _TMR0H	set	4055
    77  0000                     _T0CONbits	set	4053
    78  0000                     _PORTBbits	set	3969
    79  0000                     _LATAbits	set	3977
    80  0000                     _INTCONbits	set	4082
    81  0000                     _TRISD	set	3989
    82  0000                     _TRISC	set	3988
    83  0000                     _TRISB	set	3987
    84  0000                     _TRISA	set	3986
    85  0000                     _TRISE	set	3990
    86  0000                     _LATC	set	3979
    87  0000                     _LATB	set	3978
    88  0000                     _LATA	set	3977
    89  0000                     _LATD	set	3980
    90  0000                     _LATE	set	3981
    91  0000                     _ACTCON	set	4021
    92  0000                     _OSCTUNE	set	3995
    93  0000                     _OSCCON2	set	4050
    94  0000                     _OSCCON	set	4051
    95                           
    96                           ; #config settings
    97  0000                     
    98                           	psect	cinit
    99  0000'                    __pcinit:
   100                           	opt callstack 0
   101  0000'                    start_initialization:
   102                           	opt callstack 0
   103  0000'                    __initialization:
   104                           	opt callstack 0
   105  0000'                    end_of_initialization:
   106                           	opt callstack 0
   107  0000'                    __end_of__initialization:
   108                           	opt callstack 0
   109  0000' 9000'              	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   110  0002' 9200'              	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   111  0004' 0E00'              	movlw	low (__Lmediumconst shr (0+16))
   112  0006' 6EF8               	movwf	tblptru,c
   113  0008' 0100               	movlb	0
   114  000A' EF00' F000'        	goto	_main	;jump to C main() function
   115                           
   116                           	psect	cstackCOMRAM
   117  0000'                    __pcstackCOMRAM:
   118                           	opt callstack 0
   119  0000'                    ??_INTERRUPT_InterruptManager:
   120  0000'                    _OpenSPI1$1:
   121                           	opt callstack 0
   122                           
   123                           ; 1 bytes @ 0x0
   124  0000'                    	ds	1
   125  0001'                    _OpenSPI1$2:
   126                           	opt callstack 0
   127                           
   128                           ; 1 bytes @ 0x1
   129  0001'                    	ds	1
   130  0002'                    ??_Ini_nRF:
   131  0002'                    TMR0_SetInterruptHandler@InterruptHandler:
   132                           	opt callstack 0
   133                           
   134                           ; 2 bytes @ 0x2
   135  0002'                    	ds	2
   136  0004'                    ??_TMR0_Initialize:
   137  0004'                    
   138                           ; 1 bytes @ 0x4
   139  0004'                    	ds	2
   140  0006'                    
   141                           ; 1 bytes @ 0x6
   142 ;;
   143 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   144 ;;
   145 ;; *************** function _main *****************
   146 ;; Defined at:
   147 ;;		line 51 in file "main.c"
   148 ;; Parameters:    Size  Location     Type
   149 ;;		None
   150 ;; Auto vars:     Size  Location     Type
   151 ;;		None
   152 ;; Return value:  Size  Location     Type
   153 ;;                  1    wreg      void 
   154 ;; Registers used:
   155 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
   156 ;; Tracked objects:
   157 ;;		On entry : 0/0
   158 ;;		On exit  : 0/0
   159 ;;		Unchanged: 0/0
   160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   161 ;;      Params:         0       0       0       0       0       0       0       0       0
   162 ;;      Locals:         0       0       0       0       0       0       0       0       0
   163 ;;      Temps:          0       0       0       0       0       0       0       0       0
   164 ;;      Totals:         0       0       0       0       0       0       0       0       0
   165 ;;Total ram usage:        0 bytes
   166 ;; Hardware stack levels required when called:    6
   167 ;; This function calls:
   168 ;;		_Ini_nRF
   169 ;;		_SYSTEM_Initialize
   170 ;; This function is called by:
   171 ;;		Startup code after reset
   172 ;; This function uses a non-reentrant model
   173 ;;
   174                           
   175                           	psect	text0
   176  0000'                    __ptext0:
   177                           	opt callstack 0
   178  0000'                    _main:
   179                           	opt callstack 25
   180                           
   181                           ;main.c: 54: SYSTEM_Initialize();
   182                           
   183                           ;incstack = 0
   184  0000' EC00' F000'        	call	_SYSTEM_Initialize	;wreg free
   185                           
   186                           ;main.c: 61: (INTCONbits.GIE = 1);
   187  0004' 8EF2               	bsf	4082,7,c	;volatile
   188                           
   189                           ;main.c: 67: (INTCONbits.PEIE = 1);
   190  0006' 8CF2               	bsf	4082,6,c	;volatile
   191                           
   192                           ;main.c: 71: Ini_nRF();
   193  0008' EC00' F000'        	call	_Ini_nRF	;wreg free
   194                           
   195                           ;main.c: 72: LATAbits.LATA0^=1;
   196  000C' 7089               	btg	3977,0,c	;volatile
   197  000E'                    l73:
   198                           
   199                           ;main.c: 75: {
   200  000E' D7FF               	goto	l73
   201  0010'                    __end_of_main:
   202                           	opt callstack 0
   203                           
   204 ;; *************** function _SYSTEM_Initialize *****************
   205 ;; Defined at:
   206 ;;		line 50 in file "mcc_generated_files/mcc.c"
   207 ;; Parameters:    Size  Location     Type
   208 ;;		None
   209 ;; Auto vars:     Size  Location     Type
   210 ;;		None
   211 ;; Return value:  Size  Location     Type
   212 ;;                  1    wreg      void 
   213 ;; Registers used:
   214 ;;		wreg, status,2, status,0, cstack
   215 ;; Tracked objects:
   216 ;;		On entry : 0/0
   217 ;;		On exit  : 0/0
   218 ;;		Unchanged: 0/0
   219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   220 ;;      Params:         0       0       0       0       0       0       0       0       0
   221 ;;      Locals:         0       0       0       0       0       0       0       0       0
   222 ;;      Temps:          0       0       0       0       0       0       0       0       0
   223 ;;      Totals:         0       0       0       0       0       0       0       0       0
   224 ;;Total ram usage:        0 bytes
   225 ;; Hardware stack levels used:    1
   226 ;; Hardware stack levels required when called:    5
   227 ;; This function calls:
   228 ;;		_INTERRUPT_Initialize
   229 ;;		_OSCILLATOR_Initialize
   230 ;;		_PIN_MANAGER_Initialize
   231 ;;		_TMR0_Initialize
   232 ;; This function is called by:
   233 ;;		_main
   234 ;; This function uses a non-reentrant model
   235 ;;
   236                           
   237                           	psect	text1
   238  0000'                    __ptext1:
   239                           	opt callstack 0
   240  0000'                    _SYSTEM_Initialize:
   241                           	opt callstack 25
   242                           
   243                           ;mcc.c: 53: INTERRUPT_Initialize();
   244                           
   245                           ;incstack = 0
   246  0000' EC00' F000'        	call	_INTERRUPT_Initialize	;wreg free
   247                           
   248                           ;mcc.c: 54: PIN_MANAGER_Initialize();
   249  0004' EC00' F000'        	call	_PIN_MANAGER_Initialize	;wreg free
   250                           
   251                           ;mcc.c: 55: OSCILLATOR_Initialize();
   252  0008' EC00' F000'        	call	_OSCILLATOR_Initialize	;wreg free
   253                           
   254                           ;mcc.c: 56: TMR0_Initialize();
   255  000C' EC00' F000'        	call	_TMR0_Initialize	;wreg free
   256  0010' 0012               	return		;funcret
   257  0012'                    __end_of_SYSTEM_Initialize:
   258                           	opt callstack 0
   259                           
   260 ;; *************** function _TMR0_Initialize *****************
   261 ;; Defined at:
   262 ;;		line 67 in file "mcc_generated_files/tmr0.c"
   263 ;; Parameters:    Size  Location     Type
   264 ;;		None
   265 ;; Auto vars:     Size  Location     Type
   266 ;;		None
   267 ;; Return value:  Size  Location     Type
   268 ;;                  1    wreg      void 
   269 ;; Registers used:
   270 ;;		wreg, status,2, status,0, cstack
   271 ;; Tracked objects:
   272 ;;		On entry : 0/0
   273 ;;		On exit  : 0/0
   274 ;;		Unchanged: 0/0
   275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   276 ;;      Params:         0       0       0       0       0       0       0       0       0
   277 ;;      Locals:         0       0       0       0       0       0       0       0       0
   278 ;;      Temps:          2       0       0       0       0       0       0       0       0
   279 ;;      Totals:         2       0       0       0       0       0       0       0       0
   280 ;;Total ram usage:        2 bytes
   281 ;; Hardware stack levels used:    1
   282 ;; Hardware stack levels required when called:    4
   283 ;; This function calls:
   284 ;;		_TMR0_SetInterruptHandler
   285 ;; This function is called by:
   286 ;;		_SYSTEM_Initialize
   287 ;; This function uses a non-reentrant model
   288 ;;
   289                           
   290                           	psect	text2
   291  0000'                    __ptext2:
   292                           	opt callstack 0
   293  0000'                    _TMR0_Initialize:
   294                           	opt callstack 25
   295                           
   296                           ;tmr0.c: 72: T0CONbits.T08BIT = 0;
   297                           
   298                           ;incstack = 0
   299  0000' 9CD5               	bcf	4053,6,c	;volatile
   300                           
   301                           ;tmr0.c: 75: TMR0H = 0x0B;
   302  0002' 0E0B               	movlw	11
   303  0004' 6ED7               	movwf	4055,c	;volatile
   304                           
   305                           ;tmr0.c: 78: TMR0L = 0xDB;
   306  0006' 0EDB               	movlw	219
   307  0008' 6ED6               	movwf	4054,c	;volatile
   308                           
   309                           ;tmr0.c: 82: timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
   310  000A' 50D6               	movf	4054,w,c	;volatile
   311  000C' CFD7 F004'         	movff	4055,??_TMR0_Initialize	;volatile
   312  0010' 6A00'              	clrf	(??_TMR0_Initialize+1)& (0+255),c
   313  0012' C004' F005'        	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
   314  0016' 6A04'              	clrf	??_TMR0_Initialize,c
   315  0018' 1004'              	iorwf	??_TMR0_Initialize,w,c
   316  001A' 6E00'              	movwf	_timer0ReloadVal,c	;volatile
   317  001C' 5005'              	movf	??_TMR0_Initialize+1,w,c
   318  001E' 6E01'              	movwf	_timer0ReloadVal+1,c	;volatile
   319                           
   320                           ;tmr0.c: 85: INTCONbits.TMR0IF = 0;
   321  0020' 94F2               	bcf	4082,2,c	;volatile
   322                           
   323                           ;tmr0.c: 88: INTCONbits.TMR0IE = 1;
   324  0022' 8AF2               	bsf	4082,5,c	;volatile
   325                           
   326                           ;tmr0.c: 91: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
   327  0024' 0E00'              	movlw	low _TMR0_DefaultInterruptHandler
   328  0026' 6E02'              	movwf	TMR0_SetInterruptHandler@InterruptHandler,c
   329  0028' 0E00'              	movlw	high _TMR0_DefaultInterruptHandler
   330  002A' 6E03'              	movwf	TMR0_SetInterruptHandler@InterruptHandler+1,c
   331  002C' EC00' F000'        	call	_TMR0_SetInterruptHandler	;wreg free
   332                           
   333                           ;tmr0.c: 94: T0CON = 0x93;
   334  0030' 0E93               	movlw	147
   335  0032' 6ED5               	movwf	4053,c	;volatile
   336  0034' 0012               	return		;funcret
   337  0036'                    __end_of_TMR0_Initialize:
   338                           	opt callstack 0
   339                           
   340 ;; *************** function _TMR0_SetInterruptHandler *****************
   341 ;; Defined at:
   342 ;;		line 156 in file "mcc_generated_files/tmr0.c"
   343 ;; Parameters:    Size  Location     Type
   344 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
   345 ;;		 -> TMR0_DefaultInterruptHandler(1), 
   346 ;; Auto vars:     Size  Location     Type
   347 ;;		None
   348 ;; Return value:  Size  Location     Type
   349 ;;                  1    wreg      void 
   350 ;; Registers used:
   351 ;;		wreg, status,2, status,0
   352 ;; Tracked objects:
   353 ;;		On entry : 0/0
   354 ;;		On exit  : 0/0
   355 ;;		Unchanged: 0/0
   356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   357 ;;      Params:         2       0       0       0       0       0       0       0       0
   358 ;;      Locals:         0       0       0       0       0       0       0       0       0
   359 ;;      Temps:          0       0       0       0       0       0       0       0       0
   360 ;;      Totals:         2       0       0       0       0       0       0       0       0
   361 ;;Total ram usage:        2 bytes
   362 ;; Hardware stack levels used:    1
   363 ;; Hardware stack levels required when called:    3
   364 ;; This function calls:
   365 ;;		Nothing
   366 ;; This function is called by:
   367 ;;		_TMR0_Initialize
   368 ;; This function uses a non-reentrant model
   369 ;;
   370                           
   371                           	psect	text3
   372  0000'                    __ptext3:
   373                           	opt callstack 0
   374  0000'                    _TMR0_SetInterruptHandler:
   375                           	opt callstack 25
   376                           
   377                           ;tmr0.c: 157: TMR0_InterruptHandler = InterruptHandler;
   378                           
   379                           ;incstack = 0
   380  0000' C002' F002'        	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
   381  0004' C003' F003'        	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
   382  0008' 0012               	return		;funcret
   383  000A'                    __end_of_TMR0_SetInterruptHandler:
   384                           	opt callstack 0
   385                           
   386 ;; *************** function _PIN_MANAGER_Initialize *****************
   387 ;; Defined at:
   388 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   389 ;; Parameters:    Size  Location     Type
   390 ;;		None
   391 ;; Auto vars:     Size  Location     Type
   392 ;;		None
   393 ;; Return value:  Size  Location     Type
   394 ;;                  1    wreg      void 
   395 ;; Registers used:
   396 ;;		wreg, status,2
   397 ;; Tracked objects:
   398 ;;		On entry : 0/0
   399 ;;		On exit  : 0/0
   400 ;;		Unchanged: 0/0
   401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   402 ;;      Params:         0       0       0       0       0       0       0       0       0
   403 ;;      Locals:         0       0       0       0       0       0       0       0       0
   404 ;;      Temps:          0       0       0       0       0       0       0       0       0
   405 ;;      Totals:         0       0       0       0       0       0       0       0       0
   406 ;;Total ram usage:        0 bytes
   407 ;; Hardware stack levels used:    1
   408 ;; Hardware stack levels required when called:    3
   409 ;; This function calls:
   410 ;;		Nothing
   411 ;; This function is called by:
   412 ;;		_SYSTEM_Initialize
   413 ;; This function uses a non-reentrant model
   414 ;;
   415                           
   416                           	psect	text4
   417  0000'                    __ptext4:
   418                           	opt callstack 0
   419  0000'                    _PIN_MANAGER_Initialize:
   420                           	opt callstack 26
   421                           
   422                           ;pin_manager.c: 60: LATE = 0x00;
   423                           
   424                           ;incstack = 0
   425  0000' 0E00               	movlw	0
   426  0002' 6E8D               	movwf	3981,c	;volatile
   427                           
   428                           ;pin_manager.c: 61: LATD = 0x00;
   429  0004' 0E00               	movlw	0
   430  0006' 6E8C               	movwf	3980,c	;volatile
   431                           
   432                           ;pin_manager.c: 62: LATA = 0x00;
   433  0008' 0E00               	movlw	0
   434  000A' 6E89               	movwf	3977,c	;volatile
   435                           
   436                           ;pin_manager.c: 63: LATB = 0x10;
   437  000C' 0E10               	movlw	16
   438  000E' 6E8A               	movwf	3978,c	;volatile
   439                           
   440                           ;pin_manager.c: 64: LATC = 0x00;
   441  0010' 0E00               	movlw	0
   442  0012' 6E8B               	movwf	3979,c	;volatile
   443                           
   444                           ;pin_manager.c: 69: TRISE = 0x07;
   445  0014' 0E07               	movlw	7
   446  0016' 6E96               	movwf	3990,c	;volatile
   447                           
   448                           ;pin_manager.c: 70: TRISA = 0xFE;
   449  0018' 0EFE               	movlw	254
   450  001A' 6E92               	movwf	3986,c	;volatile
   451                           
   452                           ;pin_manager.c: 71: TRISB = 0x01;
   453  001C' 0E01               	movlw	1
   454  001E' 6E93               	movwf	3987,c	;volatile
   455                           
   456                           ;pin_manager.c: 72: TRISC = 0xC7;
   457  0020' 0EC7               	movlw	199
   458  0022' 6E94               	movwf	3988,c	;volatile
   459                           
   460                           ;pin_manager.c: 73: TRISD = 0xFF;
   461  0024' 6895               	setf	3989,c	;volatile
   462                           
   463                           ;pin_manager.c: 78: ANSELD = 0xFF;
   464  0026' 010F               	movlb	15	; () banked
   465  0028' 695E               	setf	94,b	;volatile
   466                           
   467                           ;pin_manager.c: 79: ANSELC = 0xC4;
   468  002A' 0EC4               	movlw	196
   469  002C' 6F5D               	movwf	93,b	;volatile
   470                           
   471                           ;pin_manager.c: 80: ANSELB = 0x00;
   472  002E' 0E00               	movlw	0
   473  0030' 6F5C               	movwf	92,b	;volatile
   474                           
   475                           ;pin_manager.c: 81: ANSELE = 0x07;
   476  0032' 0E07               	movlw	7
   477  0034' 6F5F               	movwf	95,b	;volatile
   478                           
   479                           ;pin_manager.c: 82: ANSELA = 0x2E;
   480  0036' 0E2E               	movlw	46
   481  0038' 6F5B               	movwf	91,b	;volatile
   482                           
   483                           ; BSR set to: 15
   484  003A' 0012               	return		;funcret
   485  003C'                    __end_of_PIN_MANAGER_Initialize:
   486                           	opt callstack 0
   487                           
   488 ;; *************** function _OSCILLATOR_Initialize *****************
   489 ;; Defined at:
   490 ;;		line 59 in file "mcc_generated_files/mcc.c"
   491 ;; Parameters:    Size  Location     Type
   492 ;;		None
   493 ;; Auto vars:     Size  Location     Type
   494 ;;		None
   495 ;; Return value:  Size  Location     Type
   496 ;;                  1    wreg      void 
   497 ;; Registers used:
   498 ;;		wreg, status,2
   499 ;; Tracked objects:
   500 ;;		On entry : 0/0
   501 ;;		On exit  : 0/0
   502 ;;		Unchanged: 0/0
   503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   504 ;;      Params:         0       0       0       0       0       0       0       0       0
   505 ;;      Locals:         0       0       0       0       0       0       0       0       0
   506 ;;      Temps:          0       0       0       0       0       0       0       0       0
   507 ;;      Totals:         0       0       0       0       0       0       0       0       0
   508 ;;Total ram usage:        0 bytes
   509 ;; Hardware stack levels used:    1
   510 ;; Hardware stack levels required when called:    3
   511 ;; This function calls:
   512 ;;		Nothing
   513 ;; This function is called by:
   514 ;;		_SYSTEM_Initialize
   515 ;; This function uses a non-reentrant model
   516 ;;
   517                           
   518                           	psect	text5
   519  0000'                    __ptext5:
   520                           	opt callstack 0
   521  0000'                    _OSCILLATOR_Initialize:
   522                           	opt callstack 26
   523                           
   524                           ;mcc.c: 62: OSCCON = 0x52;
   525                           
   526                           ; BSR set to: 15
   527                           ;incstack = 0
   528  0000' 0E52               	movlw	82
   529  0002' 6ED3               	movwf	4051,c	;volatile
   530                           
   531                           ;mcc.c: 64: OSCCON2 = 0x00;
   532  0004' 0E00               	movlw	0
   533  0006' 6ED2               	movwf	4050,c	;volatile
   534                           
   535                           ;mcc.c: 66: OSCTUNE = 0x00;
   536  0008' 0E00               	movlw	0
   537  000A' 6E9B               	movwf	3995,c	;volatile
   538                           
   539                           ;mcc.c: 68: ACTCON = 0x00;
   540  000C' 0E00               	movlw	0
   541  000E' 6EB5               	movwf	4021,c	;volatile
   542  0010' 0012               	return		;funcret
   543  0012'                    __end_of_OSCILLATOR_Initialize:
   544                           	opt callstack 0
   545                           
   546 ;; *************** function _INTERRUPT_Initialize *****************
   547 ;; Defined at:
   548 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
   549 ;; Parameters:    Size  Location     Type
   550 ;;		None
   551 ;; Auto vars:     Size  Location     Type
   552 ;;		None
   553 ;; Return value:  Size  Location     Type
   554 ;;                  1    wreg      void 
   555 ;; Registers used:
   556 ;;		None
   557 ;; Tracked objects:
   558 ;;		On entry : 0/0
   559 ;;		On exit  : 0/0
   560 ;;		Unchanged: 0/0
   561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   562 ;;      Params:         0       0       0       0       0       0       0       0       0
   563 ;;      Locals:         0       0       0       0       0       0       0       0       0
   564 ;;      Temps:          0       0       0       0       0       0       0       0       0
   565 ;;      Totals:         0       0       0       0       0       0       0       0       0
   566 ;;Total ram usage:        0 bytes
   567 ;; Hardware stack levels used:    1
   568 ;; Hardware stack levels required when called:    3
   569 ;; This function calls:
   570 ;;		Nothing
   571 ;; This function is called by:
   572 ;;		_SYSTEM_Initialize
   573 ;; This function uses a non-reentrant model
   574 ;;
   575                           
   576                           	psect	text6
   577  0000'                    __ptext6:
   578                           	opt callstack 0
   579  0000'                    _INTERRUPT_Initialize:
   580                           	opt callstack 26
   581                           
   582                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
   583                           
   584                           ;incstack = 0
   585  0000' 9ED0               	bcf	4048,7,c	;volatile
   586  0002' 0012               	return		;funcret
   587  0004'                    __end_of_INTERRUPT_Initialize:
   588                           	opt callstack 0
   589                           
   590 ;; *************** function _Ini_nRF *****************
   591 ;; Defined at:
   592 ;;		line 10 in file "sensor.c"
   593 ;; Parameters:    Size  Location     Type
   594 ;;		None
   595 ;; Auto vars:     Size  Location     Type
   596 ;;		None
   597 ;; Return value:  Size  Location     Type
   598 ;;                  1    wreg      void 
   599 ;; Registers used:
   600 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
   601 ;; Tracked objects:
   602 ;;		On entry : 0/0
   603 ;;		On exit  : 0/0
   604 ;;		Unchanged: 0/0
   605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   606 ;;      Params:         0       0       0       0       0       0       0       0       0
   607 ;;      Locals:         0       0       0       0       0       0       0       0       0
   608 ;;      Temps:          1       0       0       0       0       0       0       0       0
   609 ;;      Totals:         1       0       0       0       0       0       0       0       0
   610 ;;Total ram usage:        1 bytes
   611 ;; Hardware stack levels used:    1
   612 ;; Hardware stack levels required when called:    4
   613 ;; This function calls:
   614 ;;		_OpenSPI1
   615 ;;		_WriteSPI1
   616 ;; This function is called by:
   617 ;;		_main
   618 ;; This function uses a non-reentrant model
   619 ;;
   620                           
   621                           	psect	text7
   622  0000'                    __ptext7:
   623                           	opt callstack 0
   624  0000'                    _Ini_nRF:
   625                           	opt callstack 26
   626                           
   627                           ;sensor.c: 12: OpenSPI1(0b00000001, 0b00000000, 0b10000000);
   628                           
   629                           ;incstack = 0
   630  0000' 0E00               	movlw	0
   631  0002' 6E00'              	movwf	_OpenSPI1$1,c
   632  0004' 0E80               	movlw	128
   633  0006' 6E01'              	movwf	_OpenSPI1$2,c
   634  0008' 0E01               	movlw	1
   635  000A' EC00' F000'        	call	_OpenSPI1
   636                           
   637                           ;sensor.c: 14: PORTBbits.RB4=0;
   638  000E' 9881               	bcf	3969,4,c	;volatile
   639                           
   640                           ;sensor.c: 15: WriteSPI1(0x20);
   641  0010' 0E20               	movlw	32
   642  0012' EC00' F000'        	call	_WriteSPI1
   643                           
   644                           ;sensor.c: 16: WriteSPI1(0x02);
   645  0016' 0E02               	movlw	2
   646  0018' EC00' F000'        	call	_WriteSPI1
   647                           
   648                           ;sensor.c: 17: PORTBbits.RB4=1;
   649  001C' 8881               	bsf	3969,4,c	;volatile
   650                           
   651                           ;sensor.c: 19: PORTBbits.RB4=0;
   652  001E' 9881               	bcf	3969,4,c	;volatile
   653                           
   654                           ;sensor.c: 20: WriteSPI1(0x21);
   655  0020' 0E21               	movlw	33
   656  0022' EC00' F000'        	call	_WriteSPI1
   657                           
   658                           ;sensor.c: 21: WriteSPI1(0x00);
   659  0026' 0E00               	movlw	0
   660  0028' EC00' F000'        	call	_WriteSPI1
   661                           
   662                           ;sensor.c: 22: PORTBbits.RB4=1;
   663  002C' 8881               	bsf	3969,4,c	;volatile
   664                           
   665                           ;sensor.c: 24: PORTBbits.RB4=0;
   666  002E' 9881               	bcf	3969,4,c	;volatile
   667                           
   668                           ;sensor.c: 25: WriteSPI1(0x22);
   669  0030' 0E22               	movlw	34
   670  0032' EC00' F000'        	call	_WriteSPI1
   671                           
   672                           ;sensor.c: 26: WriteSPI1(0x01);
   673  0036' 0E01               	movlw	1
   674  0038' EC00' F000'        	call	_WriteSPI1
   675                           
   676                           ;sensor.c: 27: PORTBbits.RB4=1;
   677  003C' 8881               	bsf	3969,4,c	;volatile
   678                           
   679                           ;sensor.c: 29: PORTBbits.RB4=0;
   680  003E' 9881               	bcf	3969,4,c	;volatile
   681                           
   682                           ;sensor.c: 30: WriteSPI1(0x23);
   683  0040' 0E23               	movlw	35
   684  0042' EC00' F000'        	call	_WriteSPI1
   685                           
   686                           ;sensor.c: 31: WriteSPI1(0x01);
   687  0046' 0E01               	movlw	1
   688  0048' EC00' F000'        	call	_WriteSPI1
   689                           
   690                           ;sensor.c: 32: PORTBbits.RB4=1;
   691  004C' 8881               	bsf	3969,4,c	;volatile
   692                           
   693                           ;sensor.c: 35: PORTBbits.RB4=0;
   694  004E' 9881               	bcf	3969,4,c	;volatile
   695                           
   696                           ;sensor.c: 36: WriteSPI1(0x24);
   697  0050' 0E24               	movlw	36
   698  0052' EC00' F000'        	call	_WriteSPI1
   699                           
   700                           ;sensor.c: 37: WriteSPI1(0x00);
   701  0056' 0E00               	movlw	0
   702  0058' EC00' F000'        	call	_WriteSPI1
   703                           
   704                           ;sensor.c: 38: PORTBbits.RB4=1;
   705  005C' 8881               	bsf	3969,4,c	;volatile
   706                           
   707                           ;sensor.c: 40: PORTBbits.RB4=0;
   708  005E' 9881               	bcf	3969,4,c	;volatile
   709                           
   710                           ;sensor.c: 41: WriteSPI1(0x25);
   711  0060' 0E25               	movlw	37
   712  0062' EC00' F000'        	call	_WriteSPI1
   713                           
   714                           ;sensor.c: 42: WriteSPI1(0x01);
   715  0066' 0E01               	movlw	1
   716  0068' EC00' F000'        	call	_WriteSPI1
   717                           
   718                           ;sensor.c: 43: PORTBbits.RB4=1;
   719  006C' 8881               	bsf	3969,4,c	;volatile
   720                           
   721                           ;sensor.c: 45: PORTBbits.RB4=0;
   722  006E' 9881               	bcf	3969,4,c	;volatile
   723                           
   724                           ;sensor.c: 46: WriteSPI1(0x26);
   725  0070' 0E26               	movlw	38
   726  0072' EC00' F000'        	call	_WriteSPI1
   727                           
   728                           ;sensor.c: 47: WriteSPI1(0x26);
   729  0076' 0E26               	movlw	38
   730  0078' EC00' F000'        	call	_WriteSPI1
   731                           
   732                           ;sensor.c: 48: PORTBbits.RB4=1;
   733  007C' 8881               	bsf	3969,4,c	;volatile
   734                           
   735                           ;sensor.c: 50: PORTBbits.RB4=0;
   736  007E' 9881               	bcf	3969,4,c	;volatile
   737                           
   738                           ;sensor.c: 51: WriteSPI1(0x31);
   739  0080' 0E31               	movlw	49
   740  0082' EC00' F000'        	call	_WriteSPI1
   741                           
   742                           ;sensor.c: 52: WriteSPI1(0x0C);
   743  0086' 0E0C               	movlw	12
   744  0088' EC00' F000'        	call	_WriteSPI1
   745                           
   746                           ;sensor.c: 53: PORTBbits.RB4=1;
   747  008C' 8881               	bsf	3969,4,c	;volatile
   748                           
   749                           ;sensor.c: 55: PORTBbits.RB4=0;
   750  008E' 9881               	bcf	3969,4,c	;volatile
   751                           
   752                           ;sensor.c: 56: WriteSPI1(0x2A);
   753  0090' 0E2A               	movlw	42
   754  0092' EC00' F000'        	call	_WriteSPI1
   755                           
   756                           ;sensor.c: 57: WriteSPI1(0xA3);
   757  0096' 0EA3               	movlw	163
   758  0098' EC00' F000'        	call	_WriteSPI1
   759                           
   760                           ;sensor.c: 58: WriteSPI1(0xA3);
   761  009C' 0EA3               	movlw	163
   762  009E' EC00' F000'        	call	_WriteSPI1
   763                           
   764                           ;sensor.c: 59: WriteSPI1(0xA3);
   765  00A2' 0EA3               	movlw	163
   766  00A4' EC00' F000'        	call	_WriteSPI1
   767                           
   768                           ;sensor.c: 60: PORTBbits.RB4=1;
   769  00A8' 8881               	bsf	3969,4,c	;volatile
   770                           
   771                           ;sensor.c: 62: PORTBbits.RB4=0;
   772  00AA' 9881               	bcf	3969,4,c	;volatile
   773                           
   774                           ;sensor.c: 63: WriteSPI1(0x30);
   775  00AC' 0E30               	movlw	48
   776  00AE' EC00' F000'        	call	_WriteSPI1
   777                           
   778                           ;sensor.c: 64: WriteSPI1(0xA3);
   779  00B2' 0EA3               	movlw	163
   780  00B4' EC00' F000'        	call	_WriteSPI1
   781                           
   782                           ;sensor.c: 65: WriteSPI1(0xA3);
   783  00B8' 0EA3               	movlw	163
   784  00BA' EC00' F000'        	call	_WriteSPI1
   785                           
   786                           ;sensor.c: 66: WriteSPI1(0xA3);
   787  00BE' 0EA3               	movlw	163
   788  00C0' EC00' F000'        	call	_WriteSPI1
   789                           
   790                           ;sensor.c: 67: PORTBbits.RB4=1;
   791  00C4' 8881               	bsf	3969,4,c	;volatile
   792                           
   793                           ;sensor.c: 70: _delay((unsigned long)((100)*(4000000/4000.0)));
   794  00C6' 0E82               	movlw	130
   795  00C8' 6E00'              	movwf	??_Ini_nRF& (0+255),c
   796  00CA' 0EDE               	movlw	222
   797  00CC'                    u57:
   798  00CC' 2EE8               	decfsz	wreg,f,c
   799  00CE' D7FE               	bra	u57
   800  00D0' 2E00'              	decfsz	??_Ini_nRF& (0+255),f,c
   801  00D2' D7FC               	bra	u57
   802  00D4' 0012               	return		;funcret
   803  00D6'                    __end_of_Ini_nRF:
   804                           	opt callstack 0
   805                           
   806 ;; *************** function _INTERRUPT_InterruptManager *****************
   807 ;; Defined at:
   808 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
   809 ;; Parameters:    Size  Location     Type
   810 ;;		None
   811 ;; Auto vars:     Size  Location     Type
   812 ;;		None
   813 ;; Return value:  Size  Location     Type
   814 ;;                  1    wreg      void 
   815 ;; Registers used:
   816 ;;		wreg, status,2, status,0, pclath, tosl, cstack
   817 ;; Tracked objects:
   818 ;;		On entry : 0/0
   819 ;;		On exit  : 0/0
   820 ;;		Unchanged: 0/0
   821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   822 ;;      Params:         0       0       0       0       0       0       0       0       0
   823 ;;      Locals:         0       0       0       0       0       0       0       0       0
   824 ;;      Temps:          2       0       0       0       0       0       0       0       0
   825 ;;      Totals:         2       0       0       0       0       0       0       0       0
   826 ;;Total ram usage:        2 bytes
   827 ;; Hardware stack levels used:    1
   828 ;; Hardware stack levels required when called:    2
   829 ;; This function calls:
   830 ;;		_TMR0_ISR
   831 ;; This function is called by:
   832 ;;		Interrupt level 2
   833 ;; This function uses a non-reentrant model
   834 ;;
   835                           
   836                           	psect	intcode
   837  0000'                    __pintcode:
   838                           	opt callstack 0
   839  0000'                    _INTERRUPT_InterruptManager:
   840                           	opt callstack 25
   841                           
   842                           ;incstack = 0
   843  0000' 8200'              	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   844  0002' CFFA F000'         	movff	pclath,??_INTERRUPT_InterruptManager
   845  0006' CFFB F001'         	movff	pclatu,??_INTERRUPT_InterruptManager+1
   846                           
   847                           ;interrupt_manager.c: 61: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
   848  000A' BAF2               	btfsc	4082,5,c	;volatile
   849  000C' A4F2               	btfss	4082,2,c	;volatile
   850  000E' D002               	goto	i2l180
   851                           
   852                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: TMR0_ISR();
   853  0010' EC00' F000'        	call	_TMR0_ISR	;wreg free
   854  0014'                    i2l180:
   855  0014' C001' FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
   856  0018' C000' FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
   857  001C' 9200'              	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   858  001E' 0011               	retfie		f
   859  0020'                    __end_of_INTERRUPT_InterruptManager:
   860                           	opt callstack 0
   861                           
   862 ;; *************** function _TMR0_ISR *****************
   863 ;; Defined at:
   864 ;;		line 136 in file "mcc_generated_files/tmr0.c"
   865 ;; Parameters:    Size  Location     Type
   866 ;;		None
   867 ;; Auto vars:     Size  Location     Type
   868 ;;		None
   869 ;; Return value:  Size  Location     Type
   870 ;;                  1    wreg      void 
   871 ;; Registers used:
   872 ;;		wreg, status,2, status,0, pclath, tosl, cstack
   873 ;; Tracked objects:
   874 ;;		On entry : 0/0
   875 ;;		On exit  : 0/0
   876 ;;		Unchanged: 0/0
   877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   878 ;;      Params:         0       0       0       0       0       0       0       0       0
   879 ;;      Locals:         0       0       0       0       0       0       0       0       0
   880 ;;      Temps:          0       0       0       0       0       0       0       0       0
   881 ;;      Totals:         0       0       0       0       0       0       0       0       0
   882 ;;Total ram usage:        0 bytes
   883 ;; Hardware stack levels used:    1
   884 ;; Hardware stack levels required when called:    1
   885 ;; This function calls:
   886 ;;		Absolute function
   887 ;;		_TMR0_DefaultInterruptHandler
   888 ;; This function is called by:
   889 ;;		_INTERRUPT_InterruptManager
   890 ;; This function uses a non-reentrant model
   891 ;;
   892                           
   893                           	psect	text9
   894  0000'                    __ptext9:
   895                           	opt callstack 0
   896  0000'                    _TMR0_ISR:
   897                           	opt callstack 25
   898                           
   899                           ;tmr0.c: 140: INTCONbits.TMR0IF = 0;
   900                           
   901                           ;incstack = 0
   902  0000' 94F2               	bcf	4082,2,c	;volatile
   903                           
   904                           ;tmr0.c: 144: TMR0H = timer0ReloadVal >> 8;
   905  0002' 5001'              	movf	_timer0ReloadVal+1,w,c	;volatile
   906  0004' 6ED7               	movwf	4055,c	;volatile
   907                           
   908                           ;tmr0.c: 145: TMR0L = (uint8_t) timer0ReloadVal;
   909  0006' C000' FFD6         	movff	_timer0ReloadVal,4054	;volatile
   910                           
   911                           ;tmr0.c: 147: if(TMR0_InterruptHandler)
   912  000A' 5002'              	movf	_TMR0_InterruptHandler,w,c
   913  000C' 1003'              	iorwf	_TMR0_InterruptHandler+1,w,c
   914  000E' B4D8               	btfsc	status,2,c
   915  0010' 0012               	return	
   916                           
   917                           ;tmr0.c: 148: {;tmr0.c: 149: TMR0_InterruptHandler();
   918  0012' D801               	call	i2u2_48
   919  0014' 0012               	return	
   920  0016'                    i2u2_48:
   921  0016' 0005               	push	
   922  0018' 6EFA               	movwf	pclath,c
   923  001A' 5002'              	movf	_TMR0_InterruptHandler,w,c
   924  001C' 6EFD               	movwf	tosl,c
   925  001E' 5003'              	movf	_TMR0_InterruptHandler+1,w,c
   926  0020' 6EFE               	movwf	tosh,c
   927  0022' 50F8               	movf	tblptru,w,c
   928  0024' 6EFF               	movwf	tosu,c
   929  0026' 50FA               	movf	pclath,w,c
   930  0028' 0012               	return		;indir
   931  002A'                    __end_of_TMR0_ISR:
   932                           	opt callstack 0
   933                           
   934 ;; *************** function _TMR0_DefaultInterruptHandler *****************
   935 ;; Defined at:
   936 ;;		line 160 in file "mcc_generated_files/tmr0.c"
   937 ;; Parameters:    Size  Location     Type
   938 ;;		None
   939 ;; Auto vars:     Size  Location     Type
   940 ;;		None
   941 ;; Return value:  Size  Location     Type
   942 ;;                  1    wreg      void 
   943 ;; Registers used:
   944 ;;		None
   945 ;; Tracked objects:
   946 ;;		On entry : 0/0
   947 ;;		On exit  : 0/0
   948 ;;		Unchanged: 0/0
   949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   950 ;;      Params:         0       0       0       0       0       0       0       0       0
   951 ;;      Locals:         0       0       0       0       0       0       0       0       0
   952 ;;      Temps:          0       0       0       0       0       0       0       0       0
   953 ;;      Totals:         0       0       0       0       0       0       0       0       0
   954 ;;Total ram usage:        0 bytes
   955 ;; Hardware stack levels used:    1
   956 ;; This function calls:
   957 ;;		Nothing
   958 ;; This function is called by:
   959 ;;		_TMR0_Initialize
   960 ;;		_TMR0_ISR
   961 ;; This function uses a non-reentrant model
   962 ;;
   963                           
   964                           	psect	text10
   965  0000'                    __ptext10:
   966                           	opt callstack 0
   967  0000'                    _TMR0_DefaultInterruptHandler:
   968                           	opt callstack 25
   969                           
   970                           ;incstack = 0
   971  0000' 0012               	return		;funcret
   972  0002'                    __end_of_TMR0_DefaultInterruptHandler:
   973                           	opt callstack 0
   974  0000                     
   975                           	psect	text11
   976  0000'                    __ptext11:
   977                           	opt callstack 0
   978                           
   979                           	psect	rparam
   980  0000                     
   981                           	psect	temp
   982  0000'                    btemp:
   983                           	opt callstack 0
   984  0000'                    	ds	1
   985  0000                     int$flags	set	btemp
   986  0000                     wtemp8	set	btemp+1
   987  0000                     ttemp5	set	btemp+1
   988  0000                     ttemp6	set	btemp+4
   989  0000                     ttemp7	set	btemp+8
   990                           tosu	equ	0xFFF
   991                           tosh	equ	0xFFE
   992                           tosl	equ	0xFFD
   993                           stkptr	equ	0xFFC
   994                           pclatu	equ	0xFFB
   995                           pclath	equ	0xFFA
   996                           pcl	equ	0xFF9
   997                           tblptru	equ	0xFF8
   998                           tblptrh	equ	0xFF7
   999                           tblptrl	equ	0xFF6
  1000                           tablat	equ	0xFF5
  1001                           prodh	equ	0xFF4
  1002                           prodl	equ	0xFF3
  1003                           indf0	equ	0xFEF
  1004                           postinc0	equ	0xFEE
  1005                           postdec0	equ	0xFED
  1006                           preinc0	equ	0xFEC
  1007                           plusw0	equ	0xFEB
  1008                           fsr0h	equ	0xFEA
  1009                           fsr0l	equ	0xFE9
  1010                           wreg	equ	0xFE8
  1011                           indf1	equ	0xFE7
  1012                           postinc1	equ	0xFE6
  1013                           postdec1	equ	0xFE5
  1014                           preinc1	equ	0xFE4
  1015                           plusw1	equ	0xFE3
  1016                           fsr1h	equ	0xFE2
  1017                           fsr1l	equ	0xFE1
  1018                           bsr	equ	0xFE0
  1019                           indf2	equ	0xFDF
  1020                           postinc2	equ	0xFDE
  1021                           postdec2	equ	0xFDD
  1022                           preinc2	equ	0xFDC
  1023                           plusw2	equ	0xFDB
  1024                           fsr2h	equ	0xFDA
  1025                           fsr2l	equ	0xFD9
  1026                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      6      10
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    getsSPI1$0	PTR unsigned char  size(2) Largest target is 0

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     122
                            _Ini_nRF
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      98
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0      98
                                              4 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Ini_nRF                                              1     1      0      24
                                              2 COMRAM     1     1      0
                           _OpenSPI1
                          _WriteSPI1
 ---------------------------------------------------------------------------------
 (2) _WriteSPI1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OpenSPI1                                             2     0      2      24
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           2     2      0       0
                                              0 COMRAM     2     2      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Ini_nRF
     _OpenSPI1
     _WriteSPI1
   _SYSTEM_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E      6       A       1       10.6%
STACK                0      0       0       2        0.0%
DATA                 0      0       A       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
ABS                  0      0       A       6        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Jul 17 01:56:12 2019

                                      l73 00000E                                        u57 0000CC  
                         _timer0ReloadVal 000000                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                               __CFG_LVP$ON 000000  
                            __CFG_CPB$OFF 000000                              __CFG_CPD$OFF 000000  
                                     tosl 000FFD                                       wreg 000FE8  
                                    _LATA 000F89                                      _LATB 000F8A  
                                    _LATC 000F8B                                      _LATD 000F8C  
                                    _LATE 000F8D                                      _main 000000  
                                    btemp 000000                             __CFG_BORV$190 000000  
                                    start 000000*                            __CFG_IESO$OFF 000000  
                           __CFG_MCLRE$ON 000000                              ___param_bank 000000  
                         __end_of_Ini_nRF 0000D6                   __end_of_TMR0_Initialize 000036  
          ??_TMR0_DefaultInterruptHandler 000000            __size_of_OSCILLATOR_Initialize 000000  
           __end_of_OSCILLATOR_Initialize 000012                                     ?_main 000000  
                                   _T0CON 000FD5                            __CFG_DEBUG$OFF 000000  
                                   i2l180 000014                                     _TMR0H 000FD7  
                                   _TMR0L 000FD6                                     _TRISA 000F92  
                                   _TRISB 000F93                                     _TRISC 000F94  
                                   _TRISD 000F95                                     _TRISE 000F96  
       __size_of_TMR0_SetInterruptHandler 000000                             __CFG_WRT0$OFF 000000  
                           __CFG_WRT1$OFF 000000                             __CFG_WRT2$OFF 000000  
               ?_TMR0_SetInterruptHandler 000002                             __CFG_WRT3$OFF 000000  
                          __CFG_EBTR0$OFF 000000                            __CFG_FCMEN$OFF 000000  
                          __CFG_EBTR1$OFF 000000                            __CFG_EBTR2$OFF 000000  
                          __CFG_EBTR3$OFF 000000                          __end_of_TMR0_ISR 00002A  
                           __CFG_WRTB$OFF 000000                             __CFG_WRTC$OFF 000000  
                           __CFG_WRTD$OFF 000000                            __CFG_EBTRB$OFF 000000  
                                   pclath 000FFA                                     ttemp5 000001  
                                   ttemp6 000004                                     ttemp7 000008  
                                   status 000FD8                            __CFG_T3CMX$RC0 000000  
                                   wtemp8 000001                            __CFG_ICPRT$OFF 000000  
                          __CFG_PBADEN$ON 000000                           __initialization 000000  
                            __end_of_main 000010                            __CFG_PCLKEN$ON 000000  
             ?_INTERRUPT_InterruptManager 000000                                    ??_main 000006  
                           __activetblptr 000002                                _OpenSPI1$1 000000  
                              _OpenSPI1$2 000001                            __CFG_SDOMX$RB3 000000  
                         __CFG_CCP2MX$RC1 000000                                    _ACTCON 000FB5  
                                  _ANSELA 000F5B                                    _ANSELB 000F5C  
                                  _ANSELC 000F5D                                    _ANSELD 000F5E  
                                  _ANSELE 000F5F                            __CFG_WDTEN$OFF 000000  
                                  _OSCCON 000FD3                                    i2u2_48 000016  
                               ??_Ini_nRF 000002                            __CFG_XINST$OFF 000000  
                          __CFG_STVREN$ON 000000                          ?_TMR0_Initialize 000000  
                                  tblptru 000FF8  TMR0_SetInterruptHandler@InterruptHandler 000002  
           __size_of_INTERRUPT_Initialize 000000                      __CFG_LS48MHZ$SYS24X4 000000  
                       _SYSTEM_Initialize 000000                                __accesstop 000000* 
                 __end_of__initialization 000000                        ?_SYSTEM_Initialize 000000  
                           ___rparam_used 000001                            __pcstackCOMRAM 000000  
                        __CFG_nPWRTEN$OFF 000000                       ??_SYSTEM_Initialize 000006  
                               ?_TMR0_ISR 000000                 __end_of_SYSTEM_Initialize 000012  
                              __pnvCOMRAM 000000                                 ?_OpenSPI1 000000  
                       __CFG_PLLSEL$PLL4X 000000          __end_of_TMR0_SetInterruptHandler 00000A  
                              ??_TMR0_ISR 000000                                   _OSCCON2 000FD2  
                                 _OSCTUNE 000F9B                                   _Ini_nRF 000000  
                              ??_OpenSPI1 000000                                   __Hparam 000000  
                                 __Lparam 000000                                   __pcinit 000000  
                                 __ramtop 000000*                                  __ptext0 000000  
                                 __ptext1 000000                                   __ptext2 000000  
                                 __ptext3 000000                                   __ptext4 000000  
                                 __ptext5 000000                                   __ptext6 000000  
                                 __ptext7 000000                                   __ptext9 000000  
                               _T0CONbits 000FD5                     _OSCILLATOR_Initialize 000000  
                ??_PIN_MANAGER_Initialize 000002                __size_of_SYSTEM_Initialize 000000  
                    end_of_initialization 000000                             __Lmediumconst 000000* 
                _TMR0_SetInterruptHandler 000000                                 _PORTBbits 000F81  
            __end_of_INTERRUPT_Initialize 000004                         __size_of_TMR0_ISR 000000  
                  ?_OSCILLATOR_Initialize 000000                       start_initialization 000000  
                __size_of_TMR0_Initialize 000000           __size_of_PIN_MANAGER_Initialize 000000  
                         __CFG_nLPBOR$OFF 000000                                 _WriteSPI1 000000* 
                                ?_Ini_nRF 000000                     _TMR0_InterruptHandler 000002  
                  _PIN_MANAGER_Initialize 000000                                 __pintcode 000000  
            ??_INTERRUPT_InterruptManager 000000                                ?_WriteSPI1 000000  
                    _INTERRUPT_Initialize 000000                         ??_TMR0_Initialize 000004  
                                _LATAbits 000F89       __size_of_INTERRUPT_InterruptManager 000000  
              ??_TMR0_SetInterruptHandler 000004                                  _RCONbits 000FD0  
                        __CFG_WDTPS$32768 000000                                  _TMR0_ISR 000000  
                       __CFG_CFGPLLEN$OFF 000000                     ?_INTERRUPT_Initialize 000000  
                                _OpenSPI1 000000*                         __size_of_Ini_nRF 000000  
                                __Hrparam 000000*                                 __Lrparam 000000* 
                      __CFG_BOREN$SBORDIS 000000                   ??_OSCILLATOR_Initialize 000002  
                             ??_WriteSPI1 000000                                  __ptext10 000000  
                                __ptext11 000000                             __size_of_main 000000  
    __end_of_TMR0_DefaultInterruptHandler 000002     __size_of_TMR0_DefaultInterruptHandler 000000  
            _TMR0_DefaultInterruptHandler 000000                                  int$flags 000000  
      __end_of_INTERRUPT_InterruptManager 000020                _INTERRUPT_InterruptManager 000000  
                              _INTCONbits 000FF2                    ??_INTERRUPT_Initialize 000002  
                                intlevel2 000000*                  ?_PIN_MANAGER_Initialize 000000  
           ?_TMR0_DefaultInterruptHandler 000000                      __CFG_CPUDIV$NOCLKDIV 000000  
                         _TMR0_Initialize 000000                        __CFG_FOSC$INTOSCIO 000000  
          __end_of_PIN_MANAGER_Initialize 00003C  
